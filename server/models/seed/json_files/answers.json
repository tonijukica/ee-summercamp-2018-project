[
  {
    "question": "Synchronise your local branch with changes to the remote `test`:\n\n    $ git ??? ???\n",
    "text": "`fetch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Synchronise your local branch with changes to the remote `test`:\n\n    $ git ??? ???\n",
    "text": "`test`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Synchronise your local branch with changes to the remote `test`:\n\n    $ git ??? ???\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Synchronise your local branch with changes to the remote `test`:\n\n    $ git ??? ???\n",
    "text": "`origin`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Synchronise your local branch with changes to the remote `test`:\n\n    $ git ??? ???\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the process to apply the changes to your local branch `master`:\n\n    $ git ??? origin\n    $ git ???\n",
    "text": "`fetch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the process to apply the changes to your local branch `master`:\n\n    $ git ??? origin\n    $ git ???\n",
    "text": "`merge`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the process to apply the changes to your local branch `master`:\n\n    $ git ??? origin\n    $ git ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the process to apply the changes to your local branch `master`:\n\n    $ git ??? origin\n    $ git ???\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the last commit on each branch:\n\n    $ git ??? ???\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Show the last commit on each branch:\n\n    $ git ??? ???\n",
    "text": "`-v`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Show the last commit on each branch:\n\n    $ git ??? ???\n",
    "text": "`--merged`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the last commit on each branch:\n\n    $ git ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the last commit on each branch:\n\n    $ git ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the asterisk mean?\n\n    $ git branch \n    '*' master \n    test\n\n???\n",
    "text": "`master` is checked out",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the asterisk mean?\n\n    $ git branch \n    '*' master \n    test\n\n???\n",
    "text": "`test` is merged with `master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the asterisk mean?\n\n    $ git branch \n    '*' master \n    test\n\n???\n",
    "text": "`master` has modified files",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To `fetch` and `merge` master branch automatically you run :\n\n    $ ??? ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To `fetch` and `merge` master branch automatically you run :\n\n    $ ??? ??? ???\n",
    "text": "`pull`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To `fetch` and `merge` master branch automatically you run :\n\n    $ ??? ??? ???\n",
    "text": "`origin`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "To `fetch` and `merge` master branch automatically you run :\n\n    $ ??? ??? ???\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To `fetch` and `merge` master branch automatically you run :\n\n    $ ??? ??? ???\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To automatically `merge` the commits from the master branch you would use :\n\n    $ git ??? origin\n",
    "text": "`pull`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To automatically `merge` the commits from the master branch you would use :\n\n    $ git ??? origin\n",
    "text": "`push`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To automatically `merge` the commits from the master branch you would use :\n\n    $ git ??? origin\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To automatically `merge` the commits from the master branch you would use :\n\n    $ git ??? origin\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the -a flag in the following command stand for?\n\nWhat option related to fetching is `-a` shorthand for in the following command?\n\n```bash\n$ git pull -a\n```\n\n ???\n",
    "text": "--append",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "what does the -a flag in the following command stand for?\n\nWhat option related to fetching is `-a` shorthand for in the following command?\n\n```bash\n$ git pull -a\n```\n\n ???\n",
    "text": "--amend",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the -a flag in the following command stand for?\n\nWhat option related to fetching is `-a` shorthand for in the following command?\n\n```bash\n$ git pull -a\n```\n\n ???\n",
    "text": "--all",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the -a flag in the following command stand for?\n\nWhat option related to fetching is `-a` shorthand for in the following command?\n\n```bash\n$ git pull -a\n```\n\n ???\n",
    "text": "--autostash",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`push`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`origin`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`test`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Share a branch `test` with the remote `origin` :\n\n    $ git ??? ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Push the branch `test` to the remote under the name `fix` :\n\n    $ git push origin\n             ???:???\n",
    "text": "`test`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Push the branch `test` to the remote under the name `fix` :\n\n    $ git push origin\n             ???:???\n",
    "text": "`fix`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Push the branch `test` to the remote under the name `fix` :\n\n    $ git push origin\n             ???:???\n",
    "text": "`rename`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`-u`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`origin`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`newFeature`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git ??? ??? \n            ???/???\n\nis used to set the current branch to follow the remote branch *newFeature*.\n",
    "text": "`-upstream`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git clone` and `git checkout` commands on a remote repository set up a ??? branch automatically.\n",
    "text": "tracking",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`git clone` and `git checkout` commands on a remote repository set up a ??? branch automatically.\n",
    "text": "single",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git clone` and `git checkout` commands on a remote repository set up a ??? branch automatically.\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git rebase master`\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made on top of master into the current branch.\n",
    "text": "commit",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`git rebase master`\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made on top of master into the current branch.\n",
    "text": "merges",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`git rebase master`\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made on top of master into the current branch.\n",
    "text": "checkout",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git rebase master`\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made on top of master into the current branch.\n",
    "text": "deletes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A way to combine two branches by reapplying the ahead commits of the current branch to the head of the other branch is:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix \n    $ ??? ??? master\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A way to combine two branches by reapplying the ahead commits of the current branch to the head of the other branch is:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix \n    $ ??? ??? master\n",
    "text": "`rebase`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A way to combine two branches by reapplying the ahead commits of the current branch to the head of the other branch is:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix \n    $ ??? ??? master\n",
    "text": "`rewind`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A way to combine two branches by reapplying the ahead commits of the current branch to the head of the other branch is:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix \n    $ ??? ??? master\n",
    "text": "`redo`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A way to combine two branches by reapplying the ahead commits of the current branch to the head of the other branch is:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix \n    $ ??? ??? master\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The commit cherry-picked in the example was applied on ???.\n",
    "text": "master",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The commit cherry-picked in the example was applied on ???.\n",
    "text": "other branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To apply a *single* commit (from another branch) on the current branch, you use\n\n    $ git ??? a456bd7\n",
    "text": "`cherry-pick`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To apply a *single* commit (from another branch) on the current branch, you use\n\n    $ git ??? a456bd7\n",
    "text": "`pick`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To apply a *single* commit (from another branch) on the current branch, you use\n\n    $ git ??? a456bd7\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can add a commit message template using:\n\n    $ git ??? --global\n      ???.???  ~/.template.txt\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can add a commit message template using:\n\n    $ git ??? --global\n      ???.???  ~/.template.txt\n",
    "text": "`commit`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can add a commit message template using:\n\n    $ git ??? --global\n      ???.???  ~/.template.txt\n",
    "text": "`template`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "You can add a commit message template using:\n\n    $ git ??? --global\n      ???.???  ~/.template.txt\n",
    "text": "`-co`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can add a commit message template using:\n\n    $ git ??? --global\n      ???.???  ~/.template.txt\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Commit the changes with the message \"issue no.8 fixed\" :\n\n    $ git ??? ??? \n                ???\n",
    "text": "`commit`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Commit the changes with the message \"issue no.8 fixed\" :\n\n    $ git ??? ??? \n                ???\n",
    "text": "`-m`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Commit the changes with the message \"issue no.8 fixed\" :\n\n    $ git ??? ??? \n                ???\n",
    "text": "`\"issue no.8 fixed\"`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Commit the changes with the message \"issue no.8 fixed\" :\n\n    $ git ??? ??? \n                ???\n",
    "text": "-message",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Commit the changes with the message \"typo fixed\"\n\n    $ ??? ??? \n            ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Commit the changes with the message \"typo fixed\"\n\n    $ ??? ??? \n            ??? ???\n",
    "text": "`commit`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Commit the changes with the message \"typo fixed\"\n\n    $ ??? ??? \n            ??? ???\n",
    "text": "`-m`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Commit the changes with the message \"typo fixed\"\n\n    $ ??? ??? \n            ??? ???\n",
    "text": "`\"typo fixed\"`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Git *hashing* is based on the ??? of a file or directory structure .\n",
    "text": "content",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Git *hashing* is based on the ??? of a file or directory structure .\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Git *hashing* is based on the ??? of a file or directory structure .\n",
    "text": "date of creation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The usual commit object contains a hash-code, author’s name and email, date and ??? .\n",
    "text": "description",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The usual commit object contains a hash-code, author’s name and email, date and ??? .\n",
    "text": "SHA-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The usual commit object contains a hash-code, author’s name and email, date and ??? .\n",
    "text": "checksum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this code do?\n\n    $ git remote add test\n         https://git.enki.com\n\n???\n",
    "text": "Adds a remote repository `test`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this code do?\n\n    $ git remote add test\n         https://git.enki.com\n\n???\n",
    "text": "Clones a remote repository `origin`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this code do?\n\n    $ git remote add test\n         https://git.enki.com\n\n???\n",
    "text": "Tests the remote repository `enki.com`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "remote",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "add",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "experiment",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "clone",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "test",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add the remote repository and give it a shortname `experiment` :\n\n    $ git ??? ??? ???\n         https://git.enki.com\n",
    "text": "origin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "pull",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "fetch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "clone",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "merge",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "rebase",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To get data from a remote repository, and also merge it, you would use:\n\n    $ git ???\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "fetch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "pull",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "merge",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "commit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to **get** new data from a remote Git repository, but not merge it automatically?\n\n    $ git ???\n",
    "text": "clone",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find a tag that includes `\"fix\"` :\n\n    $ git tag ??? ???\n",
    "text": "-l",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Find a tag that includes `\"fix\"` :\n\n    $ git tag ??? ???\n",
    "text": "'\"fix\"'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Find a tag that includes `\"fix\"` :\n\n    $ git tag ??? ???\n",
    "text": "--fix",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find a tag that includes `\"fix\"` :\n\n    $ git tag ??? ???\n",
    "text": "-m",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for all the tags of version 2 :\n\n    $ git tag ??? ???\n",
    "text": "-l",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Search for all the tags of version 2 :\n\n    $ git tag ??? ???\n",
    "text": "v2*",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Search for all the tags of version 2 :\n\n    $ git tag ??? ???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for all the tags of version 2 :\n\n    $ git tag ??? ???\n",
    "text": "-m",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Alter the previous commit to correct the commit message typo\n\n    $ git commit -m 'Add nwe frmat'\n    $ git ???\n    # Editor\n    'Add new game format'\n",
    "text": "commit --amend",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Alter the previous commit to correct the commit message typo\n\n    $ git commit -m 'Add nwe frmat'\n    $ git ???\n    # Editor\n    'Add new game format'\n",
    "text": "commit --undo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Alter the previous commit to correct the commit message typo\n\n    $ git commit -m 'Add nwe frmat'\n    $ git ???\n    # Editor\n    'Add new game format'\n",
    "text": "commit --edit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When would you use `git --amend` ?\n\n    ??? \n",
    "text": "To edit the most recent commit.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When would you use `git --amend` ?\n\n    ??? \n",
    "text": "To change the content of a file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When would you use `git --amend` ?\n\n    ??? \n",
    "text": "To notify other members of the team.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "config",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "--global",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "user.name",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "username",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "-m",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your username :\n\n    $ git ??? ??? \n          ??? 'my username'\n",
    "text": "user",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "config",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "--global",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "user.email",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "email",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "-m",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set your email :\n\n    $ git ??? ??? \n          ??? 'me@email.com'\n",
    "text": "user",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why isn't reverting a file to its old version good practice?\n\n???\n",
    "text": "The deleted changes can't be recovered.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Why isn't reverting a file to its old version good practice?\n\n???\n",
    "text": "It can have unexpected results.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why isn't reverting a file to its old version good practice?\n\n???\n",
    "text": "The command doesn't work on all files.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Revert `README.md` to its previous version :\n\n    $ git ??? -- README.md\n",
    "text": "checkout",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Revert `README.md` to its previous version :\n\n    $ git ??? -- README.md\n",
    "text": "revert",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Revert `README.md` to its previous version :\n\n    $ git ??? -- README.md\n",
    "text": "remove",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To track the `.gitignore` file you’d run :\n\n    $ git ??? ???\n",
    "text": "add",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To track the `.gitignore` file you’d run :\n\n    $ git ??? ???\n",
    "text": ".gitignore",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To track the `.gitignore` file you’d run :\n\n    $ git ??? ???\n",
    "text": "track",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To track the `.gitignore` file you’d run :\n\n    $ git ??? ???\n",
    "text": "-add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To exclude files from your repository, you have to add them to the ??? file .\n",
    "text": ".gitignore",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To exclude files from your repository, you have to add them to the ??? file .\n",
    "text": "hooks",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To exclude files from your repository, you have to add them to the ??? file .\n",
    "text": ".gitexclude",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Preview the result of the following command:\n\n    $ git rm -r resources/ ???\n",
    "text": "--dry-run",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Preview the result of the following command:\n\n    $ git rm -r resources/ ???\n",
    "text": "remove",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Preview the result of the following command:\n\n    $ git rm -r resources/ ???\n",
    "text": "delete",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Preview the result of the following command:\n\n    $ git rm -r resources/ ???\n",
    "text": "--prev",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you preview the results of a command?\n\n    $ git clean -fd ???\n",
    "text": "--dry-run",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you preview the results of a command?\n\n    $ git clean -fd ???\n",
    "text": "--prev",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you preview the results of a command?\n\n    $ git clean -fd ???\n",
    "text": "after",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you preview the results of a command?\n\n    $ git clean -fd ???\n",
    "text": "reflog",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git push enki master\n\n???\n",
    "text": "Shares `master` branch with `enki` repo.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this command do?\n\n    $ git push enki master\n\n???\n",
    "text": "Shares `enki` branch with `master` repo.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git push enki master\n\n???\n",
    "text": "Gets `master` branch from `enki` repo.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "fetch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "origin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "grab",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the data from the remote repository `enki`:\n\n    $ git ??? ???\n",
    "text": "receive",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you remove the remote repository `enki`?\n\n    $ ???\n",
    "text": "git remote rm enki",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you remove the remote repository `enki`?\n\n    $ ???\n",
    "text": "git remote --delete enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you remove the remote repository `enki`?\n\n    $ ???\n",
    "text": "git untrack enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you remove the remote repository `enki`?\n\n    $ ???\n",
    "text": "git remove enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you remove the remote repository `enki`?\n\n    $ ???\n",
    "text": "git delete enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "rename",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "origin",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "amend",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "old",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Rename the remote repository `origin` to `enki`\n\n    $ git remote ??? ???\n                         ???\n",
    "text": "rm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "add",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "commit",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "-m",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "save",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "-l",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Go through the basic commit process:\n\n    # enki.md modified\n    $ git ??? enki.md\n    $ git ??? ??? 'Changed enki.md'\n",
    "text": "stage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the basic committing process, what are the three states a file can be found in?\n\n    $ git status\n    working directory clean\n\n    $ touch README.md\n    # README.md is ???\n\n    $ git add README.md\n    # README.md is ???\n\n    $ git commit -m 'Readme'\n    # README.md is ???\n",
    "text": "modified",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the basic committing process, what are the three states a file can be found in?\n\n    $ git status\n    working directory clean\n\n    $ touch README.md\n    # README.md is ???\n\n    $ git add README.md\n    # README.md is ???\n\n    $ git commit -m 'Readme'\n    # README.md is ???\n",
    "text": "staged",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In the basic committing process, what are the three states a file can be found in?\n\n    $ git status\n    working directory clean\n\n    $ touch README.md\n    # README.md is ???\n\n    $ git add README.md\n    # README.md is ???\n\n    $ git commit -m 'Readme'\n    # README.md is ???\n",
    "text": "committed",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In the basic committing process, what are the three states a file can be found in?\n\n    $ git status\n    working directory clean\n\n    $ touch README.md\n    # README.md is ???\n\n    $ git add README.md\n    # README.md is ???\n\n    $ git commit -m 'Readme'\n    # README.md is ???\n",
    "text": "shared",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the basic committing process, what are the three states a file can be found in?\n\n    $ git status\n    working directory clean\n\n    $ touch README.md\n    # README.md is ???\n\n    $ git add README.md\n    # README.md is ???\n\n    $ git commit -m 'Readme'\n    # README.md is ???\n",
    "text": "saved",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "View the latest commit on master as of 3 days ago:\n\n    $ git ??? ???@{3.days.ago}\n",
    "text": "`show`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "View the latest commit on master as of 3 days ago:\n\n    $ git ??? ???@{3.days.ago}\n",
    "text": "`master`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "View the latest commit on master as of 3 days ago:\n\n    $ git ??? ???@{3.days.ago}\n",
    "text": "`reflog`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "View the latest commit on master as of 3 days ago:\n\n    $ git ??? ???@{3.days.ago}\n",
    "text": "`log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "View the 6th previous value of HEAD:\n\n    $ git ??? ???@{6}\n",
    "text": "`show`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "View the 6th previous value of HEAD:\n\n    $ git ??? ???@{6}\n",
    "text": "`HEAD`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "View the 6th previous value of HEAD:\n\n    $ git ??? ???@{6}\n",
    "text": "`log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "View the 6th previous value of HEAD:\n\n    $ git ??? ???@{6}\n",
    "text": "`reflog`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "View the 6th previous value of HEAD:\n\n    $ git ??? ???@{6}\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To just apply a commit without merging or rebase you can use `git ???`.\n",
    "text": "`cherry-pick`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To just apply a commit without merging or rebase you can use `git ???`.\n",
    "text": "`diff`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To just apply a commit without merging or rebase you can use `git ???`.\n",
    "text": "`commit --amend`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To just apply a commit without merging or rebase you can use `git ???`.\n",
    "text": "`revert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To just apply a commit without merging or rebase you can use `git ???`.\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`-v`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`-all`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`all`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet such that the command, if ran, will show the latest commits on **all** branches:\n\n    $ git ??? ???\n",
    "text": "`diff`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can wildcards be used inside the `.gitignore` file?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can wildcards be used inside the `.gitignore` file?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can wildcards be used inside the `.gitignore` file?\n\n???\n",
    "text": "Only in newer versions of Git",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What file is used to tell git to ignore certain files in your project?\n\n???\n",
    "text": "`.gitignore`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What file is used to tell git to ignore certain files in your project?\n\n???\n",
    "text": "`.git`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What file is used to tell git to ignore certain files in your project?\n\n???\n",
    "text": "`.ignore`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true or false?\n\nReverting a commit means deleting the entire history of commits between that commit and the newly added one.\n\n???\n",
    "text": "False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following statement true or false?\n\nReverting a commit means deleting the entire history of commits between that commit and the newly added one.\n\n???\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true or false?\n\nReverting a commit means deleting the entire history of commits between that commit and the newly added one.\n\n???\n",
    "text": "It depends on the case",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command that would delete any record of uncommitted changes made since the last commit:\n\n```bash\n$ git ???\n```\n",
    "text": "`reset --hard HEAD`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command that would delete any record of uncommitted changes made since the last commit:\n\n```bash\n$ git ???\n```\n",
    "text": "`reset --soft HEAD`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command that would delete any record of uncommitted changes made since the last commit:\n\n```bash\n$ git ???\n```\n",
    "text": "`reset HEAD`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command that would delete any record of uncommitted changes made since the last commit:\n\n```bash\n$ git ???\n```\n",
    "text": "`reset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Enable *sparse checkout* then choose to checkout only the `newFeature/` subdirectory:\n\n    $ git ???\n          ???.??? true\n    $ echo ??? >>\n           .git/info/sparse-checkout\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Enable *sparse checkout* then choose to checkout only the `newFeature/` subdirectory:\n\n    $ git ???\n          ???.??? true\n    $ echo ??? >>\n           .git/info/sparse-checkout\n",
    "text": "`core`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Enable *sparse checkout* then choose to checkout only the `newFeature/` subdirectory:\n\n    $ git ???\n          ???.??? true\n    $ echo ??? >>\n           .git/info/sparse-checkout\n",
    "text": "`sparsecheckout`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Enable *sparse checkout* then choose to checkout only the `newFeature/` subdirectory:\n\n    $ git ???\n          ???.??? true\n    $ echo ??? >>\n           .git/info/sparse-checkout\n",
    "text": "`newFeature/`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Enable *sparse checkout* then choose to checkout only the `newFeature/` subdirectory:\n\n    $ git ???\n          ???.??? true\n    $ echo ??? >>\n           .git/info/sparse-checkout\n",
    "text": "`.git/newFeature`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Directories not specified in the `sparse-checkout` file are\n\n???\n",
    "text": "ignored",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Directories not specified in the `sparse-checkout` file are\n\n???\n",
    "text": "the only ones pulled",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Directories not specified in the `sparse-checkout` file are\n\n???\n",
    "text": "immutable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To retrieve all the logs starting from last week until yesterday, you would run:\n\n    $ git ??? --since=??? \n         ???=\"yesterday\"\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To retrieve all the logs starting from last week until yesterday, you would run:\n\n    $ git ??? --since=??? \n         ???=\"yesterday\"\n",
    "text": "`\"last week\"`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To retrieve all the logs starting from last week until yesterday, you would run:\n\n    $ git ??? --since=??? \n         ???=\"yesterday\"\n",
    "text": "`--until`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "To retrieve all the logs starting from last week until yesterday, you would run:\n\n    $ git ??? --since=??? \n         ???=\"yesterday\"\n",
    "text": "`until`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To retrieve all the logs starting from last week until yesterday, you would run:\n\n    $ git ??? --since=??? \n         ???=\"yesterday\"\n",
    "text": "`logs`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git` ??? understand relative dates like `\"yesterday\"` and `\"1month6days ago\"`.\n",
    "text": "can",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`git` ??? understand relative dates like `\"yesterday\"` and `\"1month6days ago\"`.\n",
    "text": "can’t",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can flag a commit as *broken* using :\n\n    $ git ??? ???\n",
    "text": "`bisect`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can flag a commit as *broken* using :\n\n    $ git ??? ???\n",
    "text": "`bad`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can flag a commit as *broken* using :\n\n    $ git ??? ???\n",
    "text": "`Bisect`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can flag a commit as *broken* using :\n\n    $ git ??? ???\n",
    "text": "`-b`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`$ git ???` \n\nhelps finding a commit that introduced a bug using ??? search.\n",
    "text": "`bisect`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`$ git ???` \n\nhelps finding a commit that introduced a bug using ??? search.\n",
    "text": "`binary`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`$ git ???` \n\nhelps finding a commit that introduced a bug using ??? search.\n",
    "text": "`-binary`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`$ git ???` \n\nhelps finding a commit that introduced a bug using ??? search.\n",
    "text": "`-B`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`*.png diff=exif`  should be added to\n\n??? file.\n",
    "text": ".gitattributes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`*.png diff=exif`  should be added to\n\n??? file.\n",
    "text": ".git/config",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`*.png diff=exif`  should be added to\n\n??? file.\n",
    "text": ".gitignore",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`ExifTool` can be used to ??? from a photo and convert it into text.\n",
    "text": "extract metadata",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`ExifTool` can be used to ??? from a photo and convert it into text.\n",
    "text": "extract pixels",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`ExifTool` can be used to ??? from a photo and convert it into text.\n",
    "text": "extract color codes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to see the changes made to a file and by whom:\n\n    $ ??? ??? \n             src/myPackage/Main.java\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command to see the changes made to a file and by whom:\n\n    $ ??? ??? \n             src/myPackage/Main.java\n",
    "text": "`blame`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command to see the changes made to a file and by whom:\n\n    $ ??? ??? \n             src/myPackage/Main.java\n",
    "text": "`check`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to see the changes made to a file and by whom:\n\n    $ ??? ??? \n             src/myPackage/Main.java\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git blame` shows\n\n ???\n",
    "text": "changes made to a file and by whom",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`git blame` shows\n\n ???\n",
    "text": "active developers for the repository",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`git blame` shows\n\n ???\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you bundle the whole `newFeature` branch?\n\n    $ git bundle ??? \n       FeatureBranch ??? ???        \n",
    "text": "`create`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you bundle the whole `newFeature` branch?\n\n    $ git bundle ??? \n       FeatureBranch ??? ???        \n",
    "text": "`HEAD`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you bundle the whole `newFeature` branch?\n\n    $ git bundle ??? \n       FeatureBranch ??? ???        \n",
    "text": "`newFeature`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you bundle the whole `newFeature` branch?\n\n    $ git bundle ??? \n       FeatureBranch ??? ???        \n",
    "text": "`-create`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you bundle the whole `newFeature` branch?\n\n    $ git bundle ??? \n       FeatureBranch ??? ???        \n",
    "text": "`head`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To verify if `newBundle` is a valid bundle, you would run\n\n    $ git ??? ??? ../newBundle\n",
    "text": "`bundle`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To verify if `newBundle` is a valid bundle, you would run\n\n    $ git ??? ??? ../newBundle\n",
    "text": "`verify`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To verify if `newBundle` is a valid bundle, you would run\n\n    $ git ??? ??? ../newBundle\n",
    "text": "`-b`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To verify if `newBundle` is a valid bundle, you would run\n\n    $ git ??? ??? ../newBundle\n",
    "text": "`--verify`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Default hooks are generated by running \n\n    $ ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Default hooks are generated by running \n\n    $ ??? ???\n",
    "text": "`init`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Default hooks are generated by running \n\n    $ ??? ???\n",
    "text": "`hooks`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Default hooks are generated by running \n\n    $ ??? ???\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`push`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`origin`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`--tags`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`v1.0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Transfer all your tags to the remote  `origin` server :\n\n    $ git ??? ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git push enki v1.2\n     \n\n???\n",
    "text": "Pushes tag `v1.2` to the remote `enki`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this command do?\n\n    $ git push enki v1.2\n     \n\n???\n",
    "text": "Pushes tag `enki` to the remote `v1.2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git push enki v1.2\n     \n\n???\n",
    "text": "Pushes tag `enki v1.2` to `origin`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log master...myBranch\n\nWould print commits that\n\n???\n",
    "text": "Are in either one of them, but not in both",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git log master...myBranch\n\nWould print commits that\n\n???\n",
    "text": "Are in master, but not in myBranch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log master...myBranch\n\nWould print commits that\n\n???\n",
    "text": "Are in myBranch, but not in master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log master...myBranch\n\nWould print commits that\n\n???\n",
    "text": "Are in both of them",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log ^master myBranch\n\nIs equivalent to\n\n???\n",
    "text": "`git log master..myBranch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git log ^master myBranch\n\nIs equivalent to\n\n???\n",
    "text": "`git log master...myBranch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log ^master myBranch\n\nIs equivalent to\n\n???\n",
    "text": "`git log --not master myBranch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you specify a range of commits?\n\nConsider the following git history\n\n```bash\n*--*--*--A--*--*--*--B--*\n```\n\nWhich of the following commands should be used to log all commits between A and B (inclusive)?\n\n ???\n",
    "text": "git log A~..B",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "how can you specify a range of commits?\n\nConsider the following git history\n\n```bash\n*--*--*--A--*--*--*--B--*\n```\n\nWhich of the following commands should be used to log all commits between A and B (inclusive)?\n\n ???\n",
    "text": "git log A..B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you specify a range of commits?\n\nConsider the following git history\n\n```bash\n*--*--*--A--*--*--*--B--*\n```\n\nWhich of the following commands should be used to log all commits between A and B (inclusive)?\n\n ???\n",
    "text": "git log A…B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you specify a range of commits?\n\nConsider the following git history\n\n```bash\n*--*--*--A--*--*--*--B--*\n```\n\nWhich of the following commands should be used to log all commits between A and B (inclusive)?\n\n ???\n",
    "text": "git log ^A B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hooks can be attached to the pre-commit and ???-commit phases.\n",
    "text": "post",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Hooks can be attached to the pre-commit and ???-commit phases.\n",
    "text": "pre",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hooks can be attached to the pre-commit and ???-commit phases.\n",
    "text": "in",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hooks can be attached to the pre-commit and ???-commit phases.\n",
    "text": "during",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`tag`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`-a`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`v1.0`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`-t`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a `v1.0` annotated tag to the commit `ac32b10`.\n\n    $ git ??? ??? ??? ac32b10\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to retrieve all tags that are part of `v2`:\n\n    $ git tag ??? ???\n",
    "text": "`-l`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command to retrieve all tags that are part of `v2`:\n\n    $ git tag ??? ???\n",
    "text": "`v2*`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command to retrieve all tags that are part of `v2`:\n\n    $ git tag ??? ???\n",
    "text": "`2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to retrieve all tags that are part of `v2`:\n\n    $ git tag ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A hook is a custom ??? that fires when a certain ??? occurs.\n",
    "text": "script",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A hook is a custom ??? that fires when a certain ??? occurs.\n",
    "text": "action",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A hook is a custom ??? that fires when a certain ??? occurs.\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`-D`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`-d`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`-f`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`force`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below in order to force the delete of `my-branch`:\n\n    $ git ??? ??? my-branch\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used in **Git** to switch between branches?\n\n???\n",
    "text": "`git checkout`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is used in **Git** to switch between branches?\n\n???\n",
    "text": "`git branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used in **Git** to switch between branches?\n\n???\n",
    "text": "`git branch -m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can store a snapshot of the data in the local repository by\n\n???\n",
    "text": "`committing`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can store a snapshot of the data in the local repository by\n\n???\n",
    "text": "`tracking`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can store a snapshot of the data in the local repository by\n\n???\n",
    "text": "`creating a Git repository`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can store a snapshot of the data in the local repository by\n\n???\n",
    "text": "`doing nothig, Git saves them automatically`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How does **Git** think of data?\n\n???\n",
    "text": "as snapshots",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How does **Git** think of data?\n\n???\n",
    "text": "as a set of files and changes made to them over time",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What status does a file have if it was previously committed, but it is not currently staged?\n\n???\n",
    "text": "`Tracked`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What status does a file have if it was previously committed, but it is not currently staged?\n\n???\n",
    "text": "`Untracked`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What status does a file have if it was previously committed, but it is not currently staged?\n\n???\n",
    "text": "`Staged`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What status does a file have if it was previously committed, but it is not currently staged?\n\n???\n",
    "text": "`Modified`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are changes added to a repository?\n\n???\n",
    "text": "Through a commit",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How are changes added to a repository?\n\n???\n",
    "text": "Automatically",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are changes added to a repository?\n\n???\n",
    "text": "By staging them",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are changes added to a repository?\n\n???\n",
    "text": "By putting them in the **working tree**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **Git**'s versioning based on?\n\n???\n",
    "text": "Content of the file",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is **Git**'s versioning based on?\n\n???\n",
    "text": "Name of the file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **Git**'s versioning based on?\n\n???\n",
    "text": "Both",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of VCS is Git?\n\n???\n",
    "text": "DVCS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of VCS is Git?\n\n???\n",
    "text": "CVCS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of VCS is Git?\n\n???\n",
    "text": "LVCS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of VCS is Git?\n\n???\n",
    "text": "Mix of CVCS and LVCS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What *type* of VCS **only** makes use of a local database to keep changes of files under version control?\n\n???\n",
    "text": "Local Version Control",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What *type* of VCS **only** makes use of a local database to keep changes of files under version control?\n\n???\n",
    "text": "Centralised Version Control",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What *type* of VCS **only** makes use of a local database to keep changes of files under version control?\n\n???\n",
    "text": "Distributed Version Control",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to be considered in the git commit a file must be ?\n\n???\n",
    "text": "Tracked",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In order to be considered in the git commit a file must be ?\n\n???\n",
    "text": "Untracked",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to be considered in the git commit a file must be ?\n\n???\n",
    "text": "Marked",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to be considered in the git commit a file must be ?\n\n???\n",
    "text": "Saved",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`name`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`user`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`username`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`me`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`--all`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`--general`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to change your username for all projects:\n\n    $ git ??? ??? \\\n      user.??? \"My Name\"\n",
    "text": "`set`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Git` command is used to change various configuration options?\n\n???\n",
    "text": "`git config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What `Git` command is used to change various configuration options?\n\n???\n",
    "text": "`git --global`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Git` command is used to change various configuration options?\n\n???\n",
    "text": "`git settings`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Git` command is used to change various configuration options?\n\n???\n",
    "text": "`git custom`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Git` command is used to change various configuration options?\n\n???\n",
    "text": "`git set`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the last step **Git** automatically does after running `git clone`?\n\n???\n",
    "text": "checks out a working copy of the latest version of the project",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the last step **Git** automatically does after running `git clone`?\n\n???\n",
    "text": "initializes the `.git` directory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the last step **Git** automatically does after running `git clone`?\n\n???\n",
    "text": "pulls repository data in the `.git` directory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the last step **Git** automatically does after running `git clone`?\n\n???\n",
    "text": "create a new folder directory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does running `git clone` with a repository's URL require having an existing working copy on you machine?\n\n???\n",
    "text": "No",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Does running `git clone` with a repository's URL require having an existing working copy on you machine?\n\n???\n",
    "text": "Yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does running `git clone` with a repository's URL require having an existing working copy on you machine?\n\n???\n",
    "text": "Only if you don't provide a new new directory name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will running `$ git init` do?\n\n???\n",
    "text": "setup **Git** and bring your project under its Source Control",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will running `$ git init` do?\n\n???\n",
    "text": "upload your project to the **Git** server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will running `$ git init` do?\n\n???\n",
    "text": "download a sample project from the web",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will running `$ git init` do?\n\n???\n",
    "text": "link you project to **GitHub**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to initialize **Git** for a project?\n\n???\n",
    "text": "`git init`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is used to initialize **Git** for a project?\n\n???\n",
    "text": "`git start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to initialize **Git** for a project?\n\n???\n",
    "text": "`git new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to initialize **Git** for a project?\n\n???\n",
    "text": "`git initalize`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to initialize **Git** for a project?\n\n???\n",
    "text": "`git initalise`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Will **Git** also be installed when you would install **GitHub** ?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Will **Git** also be installed when you would install **GitHub** ?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Will **Git** also be installed when you would install **GitHub** ?\n\n???\n",
    "text": "Only on Mac OS X",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Will **Git** also be installed when you would install **GitHub** ?\n\n???\n",
    "text": "Only on Linux",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What other name does the **staging area** have?\n\n???\n",
    "text": "index",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What other name does the **staging area** have?\n\n???\n",
    "text": "HEAD",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What other name does the **staging area** have?\n\n???\n",
    "text": "tag",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What other name does the **staging area** have?\n\n???\n",
    "text": "stage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`commit`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`-a`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`-h`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`git-commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the command to commit all tracked files:\n\n    $ ??? ??? ???\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to commit with a message specified within the command?\n\n    $ git commit ??? \"the message\"\n",
    "text": "`-m`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag is used to commit with a message specified within the command?\n\n    $ git commit ??? \"the message\"\n",
    "text": "`-a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to commit with a message specified within the command?\n\n    $ git commit ??? \"the message\"\n",
    "text": "`-message`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to commit with a message specified within the command?\n\n    $ git commit ??? \"the message\"\n",
    "text": "`-h`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to commit with a message specified within the command?\n\n    $ git commit ??? \"the message\"\n",
    "text": "`-d`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`drop`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`stash`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`{1}`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`{0}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`pop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below so it removes the most recent set of changes in the stash:\n\n    $ git stash ??? ???@???\n",
    "text": "`status`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`stash`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`apply`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`pop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`git-stash`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`push`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`@{1}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command below such as the most recent set of changes in the stash are applied:\n\n    $ ??? ??? ???\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The area where files you are working on is called the ???.\n",
    "text": "working tree",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The area where files you are working on is called the ???.\n",
    "text": "GitHub",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The area where files you are working on is called the ???.\n",
    "text": "working",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The area where files you are working on is called the ???.\n",
    "text": "staging",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The area where 'to be committed' changes are placed is called ??? .\n",
    "text": "the staging area",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The area where 'to be committed' changes are placed is called ??? .\n",
    "text": "the repository",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The area where 'to be committed' changes are placed is called ??? .\n",
    "text": "the working directory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`add`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`.`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`stage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`status`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the command that will add all the files in the current directory to the staging area?\n\n    $ git ??? ???\n",
    "text": "`-a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`status`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`stats`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What git command can be used to check what files are untracked, modified or staged?\n\n    $ git ???\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Files that are not in the staging area and were not included in the last commit are:\n\n???\n",
    "text": "untracked",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Files that are not in the staging area and were not included in the last commit are:\n\n???\n",
    "text": "staged",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Files that are not in the staging area and were not included in the last commit are:\n\n???\n",
    "text": "added",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Files that are not in the staging area and were not included in the last commit are:\n\n???\n",
    "text": "tracked",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Files that are not in the staging area and were not included in the last commit are:\n\n???\n",
    "text": "modified",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `git add` command you include modified files to the ???.\n",
    "text": "staging area",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the `git add` command you include modified files to the ???.\n",
    "text": "git repository",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `git add` command you include modified files to the ???.\n",
    "text": "working tree",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `git add` command you include modified files to the ???.\n",
    "text": "GitHub",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can have ??? remote repositories/repository.\n",
    "text": "multiple",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can have ??? remote repositories/repository.\n",
    "text": "only one",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can have ??? remote repositories/repository.\n",
    "text": "up to one hundred",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To check what files were not successfully merged automatically:\n\n    $ git ???\n",
    "text": "`status`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To check what files were not successfully merged automatically:\n\n    $ git ???\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To check what files were not successfully merged automatically:\n\n    $ git ???\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To check what files were not successfully merged automatically:\n\n    $ git ???\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To check what files were not successfully merged automatically:\n\n    $ git ???\n",
    "text": "`conflicts`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A merge operation will:\n\n???\n",
    "text": "merge target branch into the current one",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A merge operation will:\n\n???\n",
    "text": "merge current branch into the target one",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A merge operation will:\n\n???\n",
    "text": "create new branch combining the current and target branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`--set-upstream`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-set-upstream`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-up`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-upstream`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to set the upstream tracking branch on your current branch?\n\n    $ git push ??? origin feature\n",
    "text": "`-up-branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`push`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`[remote-name]`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`[branch-name]`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`[local-repository]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`--set-upstream`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`origin`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax for pushing in git:\n\n    $ git ??? ??? ???\n",
    "text": "`pull`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default name **Git** provides to the server you `clone` from?\n\n???\n",
    "text": "origin",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the default name **Git** provides to the server you `clone` from?\n\n???\n",
    "text": "master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default name **Git** provides to the server you `clone` from?\n\n???\n",
    "text": "remote",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default name **Git** provides to the server you `clone` from?\n\n???\n",
    "text": "GitHub",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to see the remote repositories for your project?\n\n    $ git ???\n",
    "text": "`remote`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is used to see the remote repositories for your project?\n\n    $ git ???\n",
    "text": "`remotes`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to see the remote repositories for your project?\n\n    $ git ???\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to see the remote repositories for your project?\n\n    $ git ???\n",
    "text": "`status`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to see the remote repositories for your project?\n\n    $ git ???\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the next command do?\n\n    $ git checkout -\n\n???\n",
    "text": "Switches to the last branch.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the next command do?\n\n    $ git checkout -\n\n???\n",
    "text": "Deletes the current branch.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the next command do?\n\n    $ git checkout -\n\n???\n",
    "text": "Deletes the last branch.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`master` is used as ??? ,\n\n while `origin` as ??? .\n",
    "text": "default first branch name",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`master` is used as ??? ,\n\n while `origin` as ??? .\n",
    "text": "default remote repository name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`master` is used as ??? ,\n\n while `origin` as ??? .\n",
    "text": "new branches’ default name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`master` is used as ??? ,\n\n while `origin` as ??? .\n",
    "text": "local folder name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The order in which you would correct the mistake is :\n\n    ???\n    ???\n    ???\n",
    "text": "`git branch test`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The order in which you would correct the mistake is :\n\n    ???\n    ???\n    ???\n",
    "text": "`git reset --hard HEAD~`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The order in which you would correct the mistake is :\n\n    ???\n    ???\n    ???\n",
    "text": "`git checkout test`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The order in which you would correct the mistake is :\n\n    ???\n    ???\n    ???\n",
    "text": "`git reset --hard HEAD^^`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A quick hack to revert the changes made to the current branch and move them to another is\n\n???\n",
    "text": "creating a new branch and resetting HEAD on master",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A quick hack to revert the changes made to the current branch and move them to another is\n\n???\n",
    "text": "deleting the current branch and switching to the master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A quick hack to revert the changes made to the current branch and move them to another is\n\n???\n",
    "text": "resetting the last commit and moving to a new branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove references to deleted branches:\n\n    $ git ??? origin ???\n",
    "text": "`fetch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Remove references to deleted branches:\n\n    $ git ??? origin ???\n",
    "text": "`--prune`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Remove references to deleted branches:\n\n    $ git ??? origin ???\n",
    "text": "`prune`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove references to deleted branches:\n\n    $ git ??? origin ???\n",
    "text": "`--fetch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git fetch origin --prune\n\nRemoves references to ??? branches.\n",
    "text": "deleted",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git fetch origin --prune\n\nRemoves references to ??? branches.\n",
    "text": "merged",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git fetch origin --prune\n\nRemoves references to ??? branches.\n",
    "text": "existing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "After running :\n\n    $ git branch -vv\n      master  2bcd45a [origin/master]\n      Bug resolved\n     * newfeature 12ac79d \n         [myServer/newFeature:ahead 2]\n         add new screen\n\nIt can be said that:\n\n`master` is ??? \n\n`newFeature` is ???.\n",
    "text": "up-to-date",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "After running :\n\n    $ git branch -vv\n      master  2bcd45a [origin/master]\n      Bug resolved\n     * newfeature 12ac79d \n         [myServer/newFeature:ahead 2]\n         add new screen\n\nIt can be said that:\n\n`master` is ??? \n\n`newFeature` is ???.\n",
    "text": "ahead of the remote branch by 2 commits",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "After running :\n\n    $ git branch -vv\n      master  2bcd45a [origin/master]\n      Bug resolved\n     * newfeature 12ac79d \n         [myServer/newFeature:ahead 2]\n         add new screen\n\nIt can be said that:\n\n`master` is ??? \n\n`newFeature` is ???.\n",
    "text": "behind of the remote branch by 2 commits",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "After running :\n\n    $ git branch -vv\n      master  2bcd45a [origin/master]\n      Bug resolved\n     * newfeature 12ac79d \n         [myServer/newFeature:ahead 2]\n         add new screen\n\nIt can be said that:\n\n`master` is ??? \n\n`newFeature` is ???.\n",
    "text": "untracked",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To see the status of your tracked branches in relation with their upstream counterpart, you would run\n\n    $ git ??? ???\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To see the status of your tracked branches in relation with their upstream counterpart, you would run\n\n    $ git ??? ???\n",
    "text": "`-vv`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To see the status of your tracked branches in relation with their upstream counterpart, you would run\n\n    $ git ??? ???\n",
    "text": "`--vv`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To see the status of your tracked branches in relation with their upstream counterpart, you would run\n\n    $ git ??? ???\n",
    "text": "`-branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Run the command to find out the unique abbreviation of a checksum :\n\n    $ git ??? ???\n          ???=???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Run the command to find out the unique abbreviation of a checksum :\n\n    $ git ??? ???\n          ???=???\n",
    "text": "`--abbrev-commit`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Run the command to find out the unique abbreviation of a checksum :\n\n    $ git ??? ???\n          ???=???\n",
    "text": "`--pretty`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Run the command to find out the unique abbreviation of a checksum :\n\n    $ git ??? ???\n          ???=???\n",
    "text": "`oneline`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Run the command to find out the unique abbreviation of a checksum :\n\n    $ git ??? ???\n          ???=???\n",
    "text": "`show`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git show \n    d921970aadf03b3cf0e71becdaab3147ba71cdef\n\n??? have the same result as:\n\n    $ git show d921970\n",
    "text": "will",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git show \n    d921970aadf03b3cf0e71becdaab3147ba71cdef\n\n??? have the same result as:\n\n    $ git show d921970\n",
    "text": "will not",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for all commits with 'enki' in their commit message :\n\n    $ git ??? ??? \n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Search for all commits with 'enki' in their commit message :\n\n    $ git ??? ??? \n",
    "text": "`--grep=enki`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Search for all commits with 'enki' in their commit message :\n\n    $ git ??? ??? \n",
    "text": "`--grep`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for all commits with 'enki' in their commit message :\n\n    $ git ??? ??? \n",
    "text": "`'enki'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for all commits with 'enki' in their commit message :\n\n    $ git ??? ??? \n",
    "text": "`-m``",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this code do?\n\n    $ git log --pretty=oneline --grep=enki\n     \n\n???\n",
    "text": "Shows the commit messages with 'enki'.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this code do?\n\n    $ git log --pretty=oneline --grep=enki\n     \n\n???\n",
    "text": "Shows the commits by author 'enki'.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this code do?\n\n    $ git log --pretty=oneline --grep=enki\n     \n\n???\n",
    "text": "Shows the commits in 'enki' repository.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"enki\" or \"Joe\".\n\n    $ git log ???=\"???\\|Joe\"\n",
    "text": "`--author`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Search for the commits made by \"enki\" or \"Joe\".\n\n    $ git log ???=\"???\\|Joe\"\n",
    "text": "`enki`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Search for the commits made by \"enki\" or \"Joe\".\n\n    $ git log ???=\"???\\|Joe\"\n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"enki\" or \"Joe\".\n\n    $ git log ???=\"???\\|Joe\"\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"enki\" or \"Joe\".\n\n    $ git log ???=\"???\\|Joe\"\n",
    "text": "`--name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"C Mustard\".\n\n    $ git ??? ???=\"C Mustard\"\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Search for the commits made by \"C Mustard\".\n\n    $ git ??? ???=\"C Mustard\"\n",
    "text": "`--author`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Search for the commits made by \"C Mustard\".\n\n    $ git ??? ???=\"C Mustard\"\n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"C Mustard\".\n\n    $ git ??? ???=\"C Mustard\"\n",
    "text": "`format`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Search for the commits made by \"C Mustard\".\n\n    $ git ??? ???=\"C Mustard\"\n",
    "text": "`--name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `~` equivalent of `^^^^`?\n\n???\n",
    "text": "~4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the `~` equivalent of `^^^^`?\n\n???\n",
    "text": "~3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `~` equivalent of `^^^^`?\n\n???\n",
    "text": "~2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `~` equivalent of `^^^^`?\n\n???\n",
    "text": "```\n```\n",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The command:\n\n    $ git show 42ea31d^\n\nGets the ??? of commit `42ea31d`.\n",
    "text": "parent",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The command:\n\n    $ git show 42ea31d^\n\nGets the ??? of commit `42ea31d`.\n",
    "text": "grandparent",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The command:\n\n    $ git show 42ea31d^\n\nGets the ??? of commit `42ea31d`.\n",
    "text": "child",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you access the forth commit in this sequence?\n\nSay you've got the following commit tree:\n\n```bash\nA--B--C--D--E--HEAD.\n```\n\nWhich of the following refers to the commit labeled with D?\n\n ???\n",
    "text": "HEAD~~",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "how can you access the forth commit in this sequence?\n\nSay you've got the following commit tree:\n\n```bash\nA--B--C--D--E--HEAD.\n```\n\nWhich of the following refers to the commit labeled with D?\n\n ???\n",
    "text": "HEAD^2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you access the forth commit in this sequence?\n\nSay you've got the following commit tree:\n\n```bash\nA--B--C--D--E--HEAD.\n```\n\nWhich of the following refers to the commit labeled with D?\n\n ???\n",
    "text": "HEAD^1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how can you access the forth commit in this sequence?\n\nSay you've got the following commit tree:\n\n```bash\nA--B--C--D--E--HEAD.\n```\n\nWhich of the following refers to the commit labeled with D?\n\n ???\n",
    "text": "HEAD~1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`master`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`..`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`awesomeFeature`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`.`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to see the commits that are on `awesomeFeature` branch but not on `master`, you have to run:\n\n    $ git ???\n          ??? ??? ???\n",
    "text": "`test`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log origin/master..HEAD\n\nshows ??? that are on the ??? branch, but not on ??? .\n",
    "text": "commits",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git log origin/master..HEAD\n\nshows ??? that are on the ??? branch, but not on ??? .\n",
    "text": "current",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "    $ git log origin/master..HEAD\n\nshows ??? that are on the ??? branch, but not on ??? .\n",
    "text": "master",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "    $ git log origin/master..HEAD\n\nshows ??? that are on the ??? branch, but not on ??? .\n",
    "text": "main",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git log origin/master..HEAD\n\nshows ??? that are on the ??? branch, but not on ??? .\n",
    "text": "snippets",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command such that it will show you the *manpage* of `git branch` command:\n\n    $ ??? ???-???\n",
    "text": "`man`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command such that it will show you the *manpage* of `git branch` command:\n\n    $ ??? ???-???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command such that it will show you the *manpage* of `git branch` command:\n\n    $ ??? ???-???\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the command such that it will show you the *manpage* of `git branch` command:\n\n    $ ??? ???-???\n",
    "text": "`help`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command such that it will show you the *manpage* of `git branch` command:\n\n    $ ??? ???-???\n",
    "text": "`--help`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can you use after a git command to show its documentation?\n\n    $ git clone ???\n",
    "text": "`--help`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag can you use after a git command to show its documentation?\n\n    $ git clone ???\n",
    "text": "`--manpage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can you use after a git command to show its documentation?\n\n    $ git clone ???\n",
    "text": "`help`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can you use after a git command to show its documentation?\n\n    $ git clone ???\n",
    "text": "`--man`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can you use after a git command to show its documentation?\n\n    $ git clone ???\n",
    "text": "`--info`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do these commands do?\n\n    $ git add enki.md games.md\n    $ git reset \n\n ???\n",
    "text": "Unstage `enki.md` and `games.md`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What do these commands do?\n\n    $ git add enki.md games.md\n    $ git reset \n\n ???\n",
    "text": "Unstage `games.md`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do these commands do?\n\n    $ git add enki.md games.md\n    $ git reset \n\n ???\n",
    "text": "Delete `enki.md` and `games.md`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the command that staged `index.html` :\n\n    $ git add index.html\n    $ git ??? HEAD index.html\n",
    "text": "`reset`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Undo the command that staged `index.html` :\n\n    $ git add index.html\n    $ git ??? HEAD index.html\n",
    "text": "`remove`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the command that staged `index.html` :\n\n    $ git add index.html\n    $ git ??? HEAD index.html\n",
    "text": "`amend`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to modify your last commit ?\n\n    $ git commit ???\n",
    "text": "`--amend`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag is used to modify your last commit ?\n\n    $ git commit ???\n",
    "text": "`--undo`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to modify your last commit ?\n\n    $ git commit ???\n",
    "text": "`--update`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to modify your last commit ?\n\n    $ git commit ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag is used to modify your last commit ?\n\n    $ git commit ???\n",
    "text": "`-a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`newBranch`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`temp`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`reflog`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `newBranch` that has the `ba23fe1` commit as the starting point:\n\n    $ git ??? ??? ba23fe1\n",
    "text": "`master`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check the reflog :\n\n    $ git ??? ???\n",
    "text": "`reflog`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Check the reflog :\n\n    $ git ??? ???\n",
    "text": "`-g`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Check the reflog :\n\n    $ git ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check the reflog :\n\n    $ git ??? ???\n",
    "text": "`-l`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`revert`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`HEAD`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`index`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`last`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`@{0}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`git-revert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`reset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Undo the last commit in the current branch:\n\n    $ ??? ??? ???\n",
    "text": "`git-reset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git revert`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git reset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git restart`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git clean`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is used to get rid of a commit by undoing the changes introduced by it?\n\n???\n",
    "text": "`git commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the commits between 01/01/2016 and 05/01/2016 (DD/MM/YYYY) :\n\n    $ git ??? \n        --???=\"2016-01-01\" \n        --???=\"2016-01-05\"\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Show the commits between 01/01/2016 and 05/01/2016 (DD/MM/YYYY) :\n\n    $ git ??? \n        --???=\"2016-01-01\" \n        --???=\"2016-01-05\"\n",
    "text": "`after`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Show the commits between 01/01/2016 and 05/01/2016 (DD/MM/YYYY) :\n\n    $ git ??? \n        --???=\"2016-01-01\" \n        --???=\"2016-01-05\"\n",
    "text": "`before`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Show the commits between 01/01/2016 and 05/01/2016 (DD/MM/YYYY) :\n\n    $ git ??? \n        --???=\"2016-01-01\" \n        --???=\"2016-01-05\"\n",
    "text": "`start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the commits between 01/01/2016 and 05/01/2016 (DD/MM/YYYY) :\n\n    $ git ??? \n        --???=\"2016-01-01\" \n        --???=\"2016-01-05\"\n",
    "text": "`end`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the commits made today :\n\n    $ git ??? ???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Show the commits made today :\n\n    $ git ??? ???\n",
    "text": "`--since=\"yesterday\"`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Show the commits made today :\n\n    $ git ??? ???\n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the commits made today :\n\n    $ git ??? ???\n",
    "text": "`--since`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show the commits made today :\n\n    $ git ??? ???\n",
    "text": "`\"yesterday\"`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`-n`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`5`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`--stat`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`--show`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`--commits`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`all`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`just`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`show`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log 5 commits:\n\n    $ git ??? ??? ???\n",
    "text": "`status`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag of `git log` would you use to show commits on one line?\n\n    $ git log ???\n",
    "text": "`--oneline`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag of `git log` would you use to show commits on one line?\n\n    $ git log ???\n",
    "text": "`one`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag of `git log` would you use to show commits on one line?\n\n    $ git log ???\n",
    "text": "`-o`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag of `git log` would you use to show commits on one line?\n\n    $ git log ???\n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag of `git log` would you use to show commits on one line?\n\n    $ git log ???\n",
    "text": "`-n`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Print the output where `%ar` represents the time since the commit has been pushed:\n\n    $ git ??? ???:\n             \"??? - %ar\"\n    fe21ab0 - 1 week ago \n    cd4512a - 2 weeks ago \n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Print the output where `%ar` represents the time since the commit has been pushed:\n\n    $ git ??? ???:\n             \"??? - %ar\"\n    fe21ab0 - 1 week ago \n    cd4512a - 2 weeks ago \n",
    "text": "`--pretty=format`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Print the output where `%ar` represents the time since the commit has been pushed:\n\n    $ git ??? ???:\n             \"??? - %ar\"\n    fe21ab0 - 1 week ago \n    cd4512a - 2 weeks ago \n",
    "text": "`%h`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Print the output where `%ar` represents the time since the commit has been pushed:\n\n    $ git ??? ???:\n             \"??? - %ar\"\n    fe21ab0 - 1 week ago \n    cd4512a - 2 weeks ago \n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Print the output where `%ar` represents the time since the commit has been pushed:\n\n    $ git ??? ???:\n             \"??? - %ar\"\n    fe21ab0 - 1 week ago \n    cd4512a - 2 weeks ago \n",
    "text": "`oneline`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Print the log output on a single line:\n\n    $ git ??? ???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Print the log output on a single line:\n\n    $ git ??? ???\n",
    "text": "`--pretty=oneline`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Print the log output on a single line:\n\n    $ git ??? ???\n",
    "text": "`--pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Print the log output on a single line:\n\n    $ git ??? ???\n",
    "text": "`oneline`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Print the log output on a single line:\n\n    $ git ??? ???\n",
    "text": "`singleline`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Searching for the changes made to *myFunction* can be done using:\n\n    $ git ??? ??? \n          :myFunction:myFile.js\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Searching for the changes made to *myFunction* can be done using:\n\n    $ git ??? ??? \n          :myFunction:myFile.js\n",
    "text": "`-L`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Searching for the changes made to *myFunction* can be done using:\n\n    $ git ??? ??? \n          :myFunction:myFile.js\n",
    "text": "`-l`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Searching for the changes made to *myFunction* can be done using:\n\n    $ git ??? ??? \n          :myFunction:myFile.js\n",
    "text": "`--log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Searching for the changes made to *myFunction* can be done using:\n\n    $ git ??? ??? \n          :myFunction:myFile.js\n",
    "text": "`--1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The history of changes made to a function can be seen using the ??? option of `git log`.\n",
    "text": "`-L`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The history of changes made to a function can be seen using the ??? option of `git log`.\n",
    "text": "`-l`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The history of changes made to a function can be seen using the ??? option of `git log`.\n",
    "text": "`-history`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The history of changes made to a function can be seen using the ??? option of `git log`.\n",
    "text": "`--L`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To see a visual representation of the project’s branching, you would use:\n\n    $ git ??? ???\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To see a visual representation of the project’s branching, you would use:\n\n    $ git ??? ???\n",
    "text": "`--graph`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To see a visual representation of the project’s branching, you would use:\n\n    $ git ??? ???\n",
    "text": "`-graph`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To see a visual representation of the project’s branching, you would use:\n\n    $ git ??? ???\n",
    "text": "`--log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can be used such that fast-forward merge is not used even if its possible?\n???\n",
    "text": "`--no-ff`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What flag can be used such that fast-forward merge is not used even if its possible?\n???\n",
    "text": "`-n`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can be used such that fast-forward merge is not used even if its possible?\n???\n",
    "text": "`-n-ff`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can be used such that fast-forward merge is not used even if its possible?\n???\n",
    "text": "`ff-n`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What flag can be used such that fast-forward merge is not used even if its possible?\n???\n",
    "text": "`--twm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    git rebase master\n\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made since then to master to the current branch.\n",
    "text": "commit",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    git rebase master\n\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made since then to master to the current branch.\n",
    "text": "applies",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "    git rebase master\n\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made since then to master to the current branch.\n",
    "text": "checkout",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    git rebase master\n\nrestores the current branch to the last ??? shared by the two branches, then ??? the changes made since then to master to the current branch.\n",
    "text": "deletes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to achieve rebasing of the `scrollFix` branch:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix\n    $ ??? ??? master\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet to achieve rebasing of the `scrollFix` branch:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix\n    $ ??? ??? master\n",
    "text": "`rebase`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet to achieve rebasing of the `scrollFix` branch:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix\n    $ ??? ??? master\n",
    "text": "`rewind`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to achieve rebasing of the `scrollFix` branch:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix\n    $ ??? ??? master\n",
    "text": "`redo`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to achieve rebasing of the `scrollFix` branch:\n\n    #checkout to the branch ahead\n    $ git checkout scrollFix\n    $ ??? ??? master\n",
    "text": "`checkout`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`rerere`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`enabled`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Practice: The command to enable the *Reuse Recorded Resolution* tool is:\n\n    $ ??? ??? ???\n      ???.??? ???\n",
    "text": "`true`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "rerere(“Reuse Recorded Resolution”) ??? the way you ??? a ??? conflict and automatically resolves it for you.\n",
    "text": "saves",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "rerere(“Reuse Recorded Resolution”) ??? the way you ??? a ??? conflict and automatically resolves it for you.\n",
    "text": "solved",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "rerere(“Reuse Recorded Resolution”) ??? the way you ??? a ??? conflict and automatically resolves it for you.\n",
    "text": "merging",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "rerere(“Reuse Recorded Resolution”) ??? the way you ??? a ??? conflict and automatically resolves it for you.\n",
    "text": "shares",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "rerere(“Reuse Recorded Resolution”) ??? the way you ??? a ??? conflict and automatically resolves it for you.\n",
    "text": "pulling",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Solve this merge conflict.\n\n    $ git ??? test\n    # merge failed\n\n    # open testing.js to resolve issues\n    console.log(a);\n\n    $ git ??? testing.js\n",
    "text": "`merge`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Solve this merge conflict.\n\n    $ git ??? test\n    # merge failed\n\n    # open testing.js to resolve issues\n    console.log(a);\n\n    $ git ??? testing.js\n",
    "text": "`add`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Solve this merge conflict.\n\n    $ git ??? test\n    # merge failed\n\n    # open testing.js to resolve issues\n    console.log(a);\n\n    $ git ??? testing.js\n",
    "text": "`rm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Solve this merge conflict.\n\n    $ git ??? test\n    # merge failed\n\n    # open testing.js to resolve issues\n    console.log(a);\n\n    $ git ??? testing.js\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you mark a merge conflict as resolved?\n\n    $ git ???\n",
    "text": "`add`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you mark a merge conflict as resolved?\n\n    $ git ???\n",
    "text": "`merge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you mark a merge conflict as resolved?\n\n    $ git ???\n",
    "text": "`rm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you mark a merge conflict as resolved?\n\n    $ git ???\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you mark a merge conflict as resolved?\n\n    $ git ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you make git to recreate a history of commits if someone rebased shared commits?\n\n    $ git ??? ???\n",
    "text": "`pull`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you make git to recreate a history of commits if someone rebased shared commits?\n\n    $ git ??? ???\n",
    "text": "`--rebase`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you make git to recreate a history of commits if someone rebased shared commits?\n\n    $ git ??? ???\n",
    "text": "`rebase`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you make git to recreate a history of commits if someone rebased shared commits?\n\n    $ git ??? ???\n",
    "text": "`commit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The best practice is to only `rebase` commits that exist in your ??? ???.\n",
    "text": "local",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The best practice is to only `rebase` commits that exist in your ??? ???.\n",
    "text": "repository",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The best practice is to only `rebase` commits that exist in your ??? ???.\n",
    "text": "remote",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show that you intend to track `enki.md` :\n\n    $ git ??? ??? enki.md\n",
    "text": "`add`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Show that you intend to track `enki.md` :\n\n    $ git ??? ??? enki.md\n",
    "text": "`-N`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Show that you intend to track `enki.md` :\n\n    $ git ??? ??? enki.md\n",
    "text": "`-n`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show that you intend to track `enki.md` :\n\n    $ git ??? ??? enki.md\n",
    "text": "`stage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Show that you intend to track `enki.md` :\n\n    $ git ??? ??? enki.md\n",
    "text": "`track`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag specifies the *intention* to add a file in the future?\n\n    $ git add ???\n",
    "text": "`-N`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which flag specifies the *intention* to add a file in the future?\n\n    $ git add ???\n",
    "text": "`-n`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag specifies the *intention* to add a file in the future?\n\n    $ git add ???\n",
    "text": "`-A`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag specifies the *intention* to add a file in the future?\n\n    $ git add ???\n",
    "text": "`-a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag specifies the *intention* to add a file in the future?\n\n    $ git add ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To stage `enki.md`, you would press\n\n    What now > 2\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n      2: unchanged    +1/-1 enki.md\n    Update > ???\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n    |*2: unchanged    +1/-1 enki.md\n",
    "text": "`2`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To stage `enki.md`, you would press\n\n    What now > 2\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n      2: unchanged    +1/-1 enki.md\n    Update > ???\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n    |*2: unchanged    +1/-1 enki.md\n",
    "text": "`enki.md`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To stage `enki.md`, you would press\n\n    What now > 2\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n      2: unchanged    +1/-1 enki.md\n    Update > ???\n           staged     unstaged path\n      1: unchanged    +0/-1 index.md\n    |*2: unchanged    +1/-1 enki.md\n",
    "text": "`stage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Open the interactive shell for staging files:\n\n    $ git add ???\n",
    "text": "`-i`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Open the interactive shell for staging files:\n\n    $ git add ???\n",
    "text": "`i`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Open the interactive shell for staging files:\n\n    $ git add ???\n",
    "text": "`-shell`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to partially stage a file:\n\n    $ ??? ??? ???\n",
    "text": "git",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to partially stage a file:\n\n    $ ??? ??? ???\n",
    "text": "add",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to partially stage a file:\n\n    $ ??? ??? ???\n",
    "text": "-p",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet to partially stage a file:\n\n    $ ??? ??? ???\n",
    "text": "-patch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to partially stage a file:\n\n    $ ??? ??? ???\n",
    "text": "stage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git reset --patch enki.md\n\n???\n",
    "text": "interactively removes changes made to `enki.md`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this command do?\n\n    $ git reset --patch enki.md\n\n???\n",
    "text": "restores `enki.md` to the last version",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this command do?\n\n    $ git reset --patch enki.md\n\n???\n",
    "text": "untracks enki.md",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactively unstage some of the changes made to `enki.md`.\n\n    $ git reset ??? ???\n",
    "text": "`--patch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Interactively unstage some of the changes made to `enki.md`.\n\n    $ git reset ??? ???\n",
    "text": "`enki.md`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Interactively unstage some of the changes made to `enki.md`.\n\n    $ git reset ??? ???\n",
    "text": "`-patch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this tell us about the file `enki.md`?\n\n    $ git status --short\n    M  enki.md\n     M hello.md\n\n???\n",
    "text": "`enki.md` is modified and staged",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this tell us about the file `enki.md`?\n\n    $ git status --short\n    M  enki.md\n     M hello.md\n\n???\n",
    "text": "`enki.md` is modified and not staged",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this tell us about the file `enki.md`?\n\n    $ git status --short\n    M  enki.md\n     M hello.md\n\n???\n",
    "text": "`enki.md` is a new untracked file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this tell us about the file `enki.md`?\n\n    $ git status --short\n    M  enki.md\n     M hello.md\n\n???\n",
    "text": "`enki.md` is a new staged file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the option to get a simplified status output?\n\n    $ git status ???\n",
    "text": "`-s`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the option to get a simplified status output?\n\n    $ git status ???\n",
    "text": "`--compact`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the option to get a simplified status output?\n\n    $ git status ???\n",
    "text": "`-v`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the option to get a simplified status output?\n\n    $ git status ???\n",
    "text": "`--long`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can test stashed code using a new branch “testing”:\n\n    $ git ??? ??? ???\n",
    "text": "`stash`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can test stashed code using a new branch “testing”:\n\n    $ git ??? ??? ???\n",
    "text": "`branch`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can test stashed code using a new branch “testing”:\n\n    $ git ??? ??? ???\n",
    "text": "`testing`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "You can test stashed code using a new branch “testing”:\n\n    $ git ??? ??? ???\n",
    "text": "`-stash`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can test stashed code using a new branch “testing”:\n\n    $ git ??? ??? ???\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git stash branch newBranch\n\nApplies the ??? changes to a new ??? before merging them into the old one.\n",
    "text": "stashed",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git stash branch newBranch\n\nApplies the ??? changes to a new ??? before merging them into the old one.\n",
    "text": "branch",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "    $ git stash branch newBranch\n\nApplies the ??? changes to a new ??? before merging them into the old one.\n",
    "text": "commit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ git stash branch newBranch\n\nApplies the ??? changes to a new ??? before merging them into the old one.\n",
    "text": "merged",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked files in your current directory :\n\n    $ git ??? ???\n",
    "text": "`clean`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Remove the untracked files in your current directory :\n\n    $ git ??? ???\n",
    "text": "`-f`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Remove the untracked files in your current directory :\n\n    $ git ??? ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked files in your current directory :\n\n    $ git ??? ???\n",
    "text": "`rm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked files in your current directory :\n\n    $ git ??? ???\n",
    "text": "`delete`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked directories in your local repository :\n\n    $ git ??? -f ???\n",
    "text": "`clean`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Remove the untracked directories in your local repository :\n\n    $ git ??? -f ???\n",
    "text": "`-d`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Remove the untracked directories in your local repository :\n\n    $ git ??? -f ???\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked directories in your local repository :\n\n    $ git ??? -f ???\n",
    "text": "`rm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the untracked directories in your local repository :\n\n    $ git ??? -f ???\n",
    "text": "`delete`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can stash code more than once on the same branch. To see all the existing stashes you have to run:\n\n`$ ??? ??? ???`\n",
    "text": "`git`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can stash code more than once on the same branch. To see all the existing stashes you have to run:\n\n`$ ??? ??? ???`\n",
    "text": "`stash`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can stash code more than once on the same branch. To see all the existing stashes you have to run:\n\n`$ ??? ??? ???`\n",
    "text": "`list`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "You can stash code more than once on the same branch. To see all the existing stashes you have to run:\n\n`$ ??? ??? ???`\n",
    "text": "`pop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can stash code more than once on the same branch. To see all the existing stashes you have to run:\n\n`$ ??? ??? ???`\n",
    "text": "`apply`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`$ git stash ???`\n\n applies the last stash and removes it from the list.\n",
    "text": "`pop`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`$ git stash ???`\n\n applies the last stash and removes it from the list.\n",
    "text": "`apply`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`$ git stash ???`\n\n applies the last stash and removes it from the list.\n",
    "text": "`list`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Untrack the directory `experiment` :\n\n    $ git ??? ??? ??? \n                      experiment\n",
    "text": "`rm`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Untrack the directory `experiment` :\n\n    $ git ??? ??? ??? \n                      experiment\n",
    "text": "`--cached`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Untrack the directory `experiment` :\n\n    $ git ??? ??? ??? \n                      experiment\n",
    "text": "`-r`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Untrack the directory `experiment` :\n\n    $ git ??? ??? ??? \n                      experiment\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Untrack the directory `experiment` :\n\n    $ git ??? ??? ??? \n                      experiment\n",
    "text": "`-t`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the flag to remove a file from cache, but not from the working directory?\n\n    $ git rm ??? enki.html\n",
    "text": "`--cached`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the flag to remove a file from cache, but not from the working directory?\n\n    $ git rm ??? enki.html\n",
    "text": "`-d`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the flag to remove a file from cache, but not from the working directory?\n\n    $ git rm ??? enki.html\n",
    "text": "`-m`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the flag to remove a file from cache, but not from the working directory?\n\n    $ git rm ??? enki.html\n",
    "text": "`--index`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the `git stash` option that stashes:\n\ntracked and untracked files ???  \nunstaged files ???  \ninteractively ???  \n",
    "text": "-u",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select the `git stash` option that stashes:\n\ntracked and untracked files ???  \nunstaged files ???  \ninteractively ???  \n",
    "text": "--keep-index",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select the `git stash` option that stashes:\n\ntracked and untracked files ???  \nunstaged files ???  \ninteractively ???  \n",
    "text": "--patch",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "`new feature` in `git stash save new feature` represents a ??? of the stash.\n",
    "text": "description",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`new feature` in `git stash save new feature` represents a ??? of the stash.\n",
    "text": "branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`new feature` in `git stash save new feature` represents a ??? of the stash.\n",
    "text": "message",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Configure git to warn you about whitespaces\n\n    $ git ??? ??? \n        ???.??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Configure git to warn you about whitespaces\n\n    $ git ??? ??? \n        ???.??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Configure git to warn you about whitespaces\n\n    $ git ??? ??? \n        ???.??? ???\n",
    "text": "`core`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Configure git to warn you about whitespaces\n\n    $ git ??? ??? \n        ???.??? ???\n",
    "text": "`whitespace`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Configure git to warn you about whitespaces\n\n    $ git ??? ??? \n        ???.??? ???\n",
    "text": "`warn`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "    $ git config --global \n               core.whitespace warn\n\nWould ??? .\n",
    "text": "highlight the whitespace issues",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ git config --global \n               core.whitespace warn\n\nWould ??? .\n",
    "text": "automatically fix whitespace issues",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Cache your credentials:\n\n    $ git ??? ???\n      ???.??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Cache your credentials:\n\n    $ git ??? ???\n      ???.??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Cache your credentials:\n\n    $ git ??? ???\n      ???.??? ???\n",
    "text": "`credential`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Cache your credentials:\n\n    $ git ??? ???\n      ???.??? ???\n",
    "text": "`helper`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Cache your credentials:\n\n    $ git ??? ???\n      ???.??? ???\n",
    "text": "`cache`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "To cache your credentials for 15 minutes you would run:\n\n    $ git ??? ??? \n      credential.??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To cache your credentials for 15 minutes you would run:\n\n    $ git ??? ??? \n      credential.??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To cache your credentials for 15 minutes you would run:\n\n    $ git ??? ??? \n      credential.??? ???\n",
    "text": "`helper`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "To cache your credentials for 15 minutes you would run:\n\n    $ git ??? ??? \n      credential.??? ???\n",
    "text": "`cache`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Change the colour for `diff.meta` to be *blue* foreground, *black* background and *bold* font:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Change the colour for `diff.meta` to be *blue* foreground, *black* background and *bold* font:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Change the colour for `diff.meta` to be *blue* foreground, *black* background and *bold* font:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`color.diff.meta`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Change the colour for `diff.meta` to be *blue* foreground, *black* background and *bold* font:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`”blue black bold”`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Change the colour for `diff.meta` to be *blue* foreground, *black* background and *bold* font:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`”blue, black, bold”`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A customisable `color.` option is ??? .\n",
    "text": "interactive.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A customisable `color.` option is ??? .\n",
    "text": "git.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A customisable `color.` option is ??? .\n",
    "text": "sources.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Enable `core.autocrlf` on Windows:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Enable `core.autocrlf` on Windows:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Enable `core.autocrlf` on Windows:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`core.autocrlf`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Enable `core.autocrlf` on Windows:\n\n    $ git ??? ???\n          ??? ???\n",
    "text": "`true`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "To enable `core.autocrlf`, its value should be set to:\nWindows   ???  \nLinux/Mac   ???  \n",
    "text": "true",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To enable `core.autocrlf`, its value should be set to:\nWindows   ???  \nLinux/Mac   ???  \n",
    "text": "input",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "To enable `core.autocrlf`, its value should be set to:\nWindows   ???  \nLinux/Mac   ???  \n",
    "text": "start",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To enable `core.autocrlf`, its value should be set to:\nWindows   ???  \nLinux/Mac   ???  \n",
    "text": "-true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Configure your key to be `0A45226A` then sign a commit with it :\n\n    $ git config --global ??? \n                         0A45226A\n\n    $ git add .\n\n    $ git commit ??? ???\n                   “commit signed”\n",
    "text": "`user.signingkey`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Configure your key to be `0A45226A` then sign a commit with it :\n\n    $ git config --global ??? \n                         0A45226A\n\n    $ git add .\n\n    $ git commit ??? ???\n                   “commit signed”\n",
    "text": "`-S`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Configure your key to be `0A45226A` then sign a commit with it :\n\n    $ git config --global ??? \n                         0A45226A\n\n    $ git add .\n\n    $ git commit ??? ???\n                   “commit signed”\n",
    "text": "`-m`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Configure your key to be `0A45226A` then sign a commit with it :\n\n    $ git config --global ??? \n                         0A45226A\n\n    $ git add .\n\n    $ git commit ??? ???\n                   “commit signed”\n",
    "text": "`-s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "    $ gpg --gen-key\n\nGenerates a ??? used to sign ??? .\n",
    "text": "key",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "    $ gpg --gen-key\n\nGenerates a ??? used to sign ??? .\n",
    "text": "commits",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "    $ gpg --gen-key\n\nGenerates a ??? used to sign ??? .\n",
    "text": "password",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can enable autocorrect using :\n\n    $ git config --global\n              ???.???\n",
    "text": "`help`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can enable autocorrect using :\n\n    $ git config --global\n              ???.???\n",
    "text": "`autocorrect`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can enable autocorrect using :\n\n    $ git config --global\n              ???.???\n",
    "text": "`git`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can enable autocorrect using :\n\n    $ git config --global\n              ???.???\n",
    "text": "`-ac`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The shorthand command to set up a new branch and track it is:\n\n    $ git ??? --??? \n              origin/sharefix\n",
    "text": "`checkout`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The shorthand command to set up a new branch and track it is:\n\n    $ git ??? --??? \n              origin/sharefix\n",
    "text": "`track`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The shorthand command to set up a new branch and track it is:\n\n    $ git ??? --??? \n              origin/sharefix\n",
    "text": "`follow`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The shorthand command to set up a new branch and track it is:\n\n    $ git ??? --??? \n              origin/sharefix\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`@{u}` refers to ??? in the following snippet:\n\n    $ git checkout myBranch\n    $ git merge @{u}\n    #upstream equivalent of myBranch\n",
    "text": "origin/myBranch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`@{u}` refers to ??? in the following snippet:\n\n    $ git checkout myBranch\n    $ git merge @{u}\n    #upstream equivalent of myBranch\n",
    "text": "myBranch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`@{u}` refers to ??? in the following snippet:\n\n    $ git checkout myBranch\n    $ git merge @{u}\n    #upstream equivalent of myBranch\n",
    "text": "origin/master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`@{u}` is used to reference the \n\n???\n",
    "text": "upstream tracked branch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`@{u}` is used to reference the \n\n???\n",
    "text": "downstream tracked branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`@{u}` is used to reference the \n\n???\n",
    "text": "master branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`config`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`--global`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`alias.pr`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`alias`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`pr`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an alias `pr` for the command:\n\n    $ git ??? ??? ???\n        'log --pretty=format:\"%h:%an'\n",
    "text": "`pretty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which command can now be used to create an annotated tag?\n\n    $ git config --global alias.ta 'tag -a'\n    $ git ???\n",
    "text": "`ta`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which command can now be used to create an annotated tag?\n\n    $ git config --global alias.ta 'tag -a'\n    $ git ???\n",
    "text": "`alias.ta`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which command can now be used to create an annotated tag?\n\n    $ git config --global alias.ta 'tag -a'\n    $ git ???\n",
    "text": "`tag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which command can now be used to create an annotated tag?\n\n    $ git config --global alias.ta 'tag -a'\n    $ git ???\n",
    "text": "`--global`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are \n\n??? .\n",
    "text": "commit, log, checkout",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are \n\n??? .\n",
    "text": "commit, log, push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are \n\n??? .\n",
    "text": "pull, push, status",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are\n\n ??? .\n",
    "text": "commit, log, checkout",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are\n\n ??? .\n",
    "text": "commit, log, push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Some of the commands that run just fine while `git` is offline are\n\n ??? .\n",
    "text": "pull, push, status",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the concept of **pull requests** only used in *GitHub*?\n\n???\n",
    "text": "`no`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the concept of **pull requests** only used in *GitHub*?\n\n???\n",
    "text": "`yes`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "GitHub is just ??? Git repositories.\n",
    "text": "`a hosting solution for`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "GitHub is just ??? Git repositories.\n",
    "text": "`an alternative to`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "GitHub is just ??? Git repositories.\n",
    "text": "`another name for`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "GitHub is just ??? Git repositories.\n",
    "text": "`a newer implementation for`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Squashing commits means \n\n??? .\n",
    "text": "combining them into one big commit",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Squashing commits means \n\n??? .\n",
    "text": "deleting them",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Squashing commits means \n\n??? .\n",
    "text": "commiting them",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For complex projects, the best practice is to work on ??? .\n",
    "text": "auxiliary branches        ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For complex projects, the best practice is to work on ??? .\n",
    "text": "master branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For complex projects, the best practice is to work on ??? .\n",
    "text": "a single other branch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new branch :\n\n    $ git ??? ??? newFeature\n",
    "text": "`checkout`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a new branch :\n\n    $ git ??? ??? newFeature\n",
    "text": "`-b`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a new branch :\n\n    $ git ??? ??? newFeature\n",
    "text": "`branch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new branch :\n\n    $ git ??? ??? newFeature\n",
    "text": "`-d`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A way of keeping the master branch clean and safely experimenting is by using ??? .\n",
    "text": "branches ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A way of keeping the master branch clean and safely experimenting is by using ??? .\n",
    "text": "merges",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A way of keeping the master branch clean and safely experimenting is by using ??? .\n",
    "text": "IDEs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "documentElement",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "className",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "doc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "documentClass",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "root",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html`>: \n\n```javascript\ndocument.???.??? = \"js\";\n```\n",
    "text": "window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "document",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "documentElement",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "root",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "parent",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "top",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a class to the root `<html>`:\n\n```javascript\n???.???.className = \"myClass\";\n```\n",
    "text": "window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "doNotTrack",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "0",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "dontTrack",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "trackStatus",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if the **DO NOT TRACK** is disabled:\n\n```javascript\nif (navigator.??? === ??? ) {\n  //handle\n}\n```\n",
    "text": "unspecified",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the check to see if a user is connected to the internet:\n\n    if (???.???) {\n      //\n    }\n",
    "text": "navigator",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the check to see if a user is connected to the internet:\n\n    if (???.???) {\n      //\n    }\n",
    "text": "onLine",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the check to see if a user is connected to the internet:\n\n    if (???.???) {\n      //\n    }\n",
    "text": "nav",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the check to see if a user is connected to the internet:\n\n    if (???.???) {\n      //\n    }\n",
    "text": "window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the check to see if a user is connected to the internet:\n\n    if (???.???) {\n      //\n    }\n",
    "text": "connected",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Force loading an image means hard-coding the image source in the html attribute *src* or in the CSS file. Bearing this in mind, complete the following snippet of code:\n\n    < ??? ???='enki1.jpg' \n                        style='???:none' />\n",
    "text": "img",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Force loading an image means hard-coding the image source in the html attribute *src* or in the CSS file. Bearing this in mind, complete the following snippet of code:\n\n    < ??? ???='enki1.jpg' \n                        style='???:none' />\n",
    "text": "src",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Force loading an image means hard-coding the image source in the html attribute *src* or in the CSS file. Bearing this in mind, complete the following snippet of code:\n\n    < ??? ???='enki1.jpg' \n                        style='???:none' />\n",
    "text": "display",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Force loading an image means hard-coding the image source in the html attribute *src* or in the CSS file. Bearing this in mind, complete the following snippet of code:\n\n    < ??? ???='enki1.jpg' \n                        style='???:none' />\n",
    "text": "source",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Force loading an image means hard-coding the image source in the html attribute *src* or in the CSS file. Bearing this in mind, complete the following snippet of code:\n\n    < ??? ???='enki1.jpg' \n                        style='???:none' />\n",
    "text": "background-image",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Flickering image bug in IE10 can be solved by ???\n",
    "text": "force loading the image",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Flickering image bug in IE10 can be solved by ???\n",
    "text": "loading the image through a script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Flickering image bug in IE10 can be solved by ???\n",
    "text": "uninstalling IE10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when you visit a webpage that uses a script **with the same host** as a page previously visited?\n\n???\n",
    "text": "script is loaded from cache",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What happens when you visit a webpage that uses a script **with the same host** as a page previously visited?\n\n???\n",
    "text": "script is downloaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when you visit a webpage that uses a script **with the same host** as a page previously visited?\n\n???\n",
    "text": "script is not loaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "JS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "link",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "practiceyourJS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "url",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "href",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "<a>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "write",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to create the following element:\n\n```javascript\n// <a href='www.practiceyourJS.com'>JS</a>\n\n\"???\".???('www.practiceyourJS.com');\n```\n",
    "text": "document",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet below to create the element commented:\n\n```javascript\n// <a href=\"http.enki.com\">Enki</a>\n\"Enki\".???(\"http.enki.com\");\n```\n",
    "text": "link",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the snippet below to create the element commented:\n\n```javascript\n// <a href=\"http.enki.com\">Enki</a>\n\"Enki\".???(\"http.enki.com\");\n```\n",
    "text": "write",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet below to create the element commented:\n\n```javascript\n// <a href=\"http.enki.com\">Enki</a>\n\"Enki\".???(\"http.enki.com\");\n```\n",
    "text": "to",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet below to create the element commented:\n\n```javascript\n// <a href=\"http.enki.com\">Enki</a>\n\"Enki\".???(\"http.enki.com\");\n```\n",
    "text": "document",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet below to create the element commented:\n\n```javascript\n// <a href=\"http.enki.com\">Enki</a>\n\"Enki\".???(\"http.enki.com\");\n```\n",
    "text": "url",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "setItem",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "itemName",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "set",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "newItem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "allocItem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "itemNum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Save a piece of data to session storage.\n\n```javascript\nsessionStorage.???('???', 'info');\n```\n",
    "text": "session",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will `sessionStorage` terminate?\n\n???\n",
    "text": "When tab is closed.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When will `sessionStorage` terminate?\n\n???\n",
    "text": "When page is refreshed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will `sessionStorage` terminate?\n\n???\n",
    "text": "When page is reloaded.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will `sessionStorage` terminate?\n\n???\n",
    "text": "When page is scrolled.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Scripts with the ??? attribute are executed in order. Unlike ??? scripts, they will only execute when the entire document has been loaded.\n",
    "text": "defer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Scripts with the ??? attribute are executed in order. Unlike ??? scripts, they will only execute when the entire document has been loaded.\n",
    "text": "async",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What type of script is executed as soon as it is downloaded, without blocking the browser in the meantime?\n\n???\n",
    "text": "`async`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of script is executed as soon as it is downloaded, without blocking the browser in the meantime?\n\n???\n",
    "text": "`defer`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of script is executed as soon as it is downloaded, without blocking the browser in the meantime?\n\n???\n",
    "text": "`all`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of script is executed as soon as it is downloaded, without blocking the browser in the meantime?\n\n???\n",
    "text": "`none`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "performance.now()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "milliseconds",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "microsecond",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "more",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "less",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "nanosecond",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "resolution.start()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "highres.run()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "resolution.time()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "second",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method call of the High Resolution Time API returns the current time?\n\n???\n\nThe returned value by the method above is represented in ???, with ??? precision.\n\nThe measurement is ??? exact than the one accessible via `Date.now()`\n",
    "text": "day",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the correct call of the High Resolution Time API that returns the current time in milliseconds, with microseconds precision?\n\n???\n",
    "text": "performance.now()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the correct call of the High Resolution Time API that returns the current time in milliseconds, with microseconds precision?\n\n???\n",
    "text": "resolution.start()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the correct call of the High Resolution Time API that returns the current time in milliseconds, with microseconds precision?\n\n???\n",
    "text": "highres.run()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the correct call of the High Resolution Time API that returns the current time in milliseconds, with microseconds precision?\n\n???\n",
    "text": "resolution.time()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "URL or link.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "Refreshed page.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "History.",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "New page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "Invalid link.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The navigation API shows how a user navigated on a particular page. What are the missing values for the following type properties? \n\n0 : ???\n1 : ???\n2 : ???\n255 : Other.\n",
    "text": "Bookmarked page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Navigation API stores events as a propriety of which object?\n\n???\n",
    "text": "`window.performance.timing`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Navigation API stores events as a propriety of which object?\n\n???\n",
    "text": "`window.timing`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Navigation API stores events as a propriety of which object?\n\n???\n",
    "text": "`timing.loadEventEnd`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Navigation API stores events as a propriety of which object?\n\n???\n",
    "text": "`timing.navigationStart`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Navigation API stores events as a propriety of which object?\n\n???\n",
    "text": "`window.performance.navigation`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which following property of `ProgressEvent` shows the amount of work already done by the underlying process? \n\n???\n",
    "text": "`ProgressEvent.loaded;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which following property of `ProgressEvent` shows the amount of work already done by the underlying process? \n\n???\n",
    "text": "`ProgressEvent.lengthComputable;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which following property of `ProgressEvent` shows the amount of work already done by the underlying process? \n\n???\n",
    "text": "`ProgressEvent.total;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which following property of `ProgressEvent` returns a boolean?\n\n1) `ProgressEvent.loaded`\n\n2) `ProgressEvent.lengthComputable`\n\n3) `ProgressEvent.total`\n\n???\n",
    "text": "`2`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which following property of `ProgressEvent` returns a boolean?\n\n1) `ProgressEvent.loaded`\n\n2) `ProgressEvent.lengthComputable`\n\n3) `ProgressEvent.total`\n\n???\n",
    "text": "`1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which following property of `ProgressEvent` returns a boolean?\n\n1) `ProgressEvent.loaded`\n\n2) `ProgressEvent.lengthComputable`\n\n3) `ProgressEvent.total`\n\n???\n",
    "text": "`3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gap to compute the `duration` between `start` and `end` marks:\n\n```javascript\nperformance.???(\"???\", \n    \"start\", \"end\");\n```\n",
    "text": "`measure`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the gap to compute the `duration` between `start` and `end` marks:\n\n```javascript\nperformance.???(\"???\", \n    \"start\", \"end\");\n```\n",
    "text": "`duration`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the gap to compute the `duration` between `start` and `end` marks:\n\n```javascript\nperformance.???(\"???\", \n    \"start\", \"end\");\n```\n",
    "text": "`time`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gap to compute the `duration` between `start` and `end` marks:\n\n```javascript\nperformance.???(\"???\", \n    \"start\", \"end\");\n```\n",
    "text": "`elapsed`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gap to compute the `duration` between `start` and `end` marks:\n\n```javascript\nperformance.???(\"???\", \n    \"start\", \"end\");\n```\n",
    "text": "`timing`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Construct the full URL path by completing the JS code snippet below: \n\n```javascript\nvar newURL = ???+ \n    \"//\" + ??? + \"/\"\n         + ???;\n```\n",
    "text": "`window.location.protocol`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Construct the full URL path by completing the JS code snippet below: \n\n```javascript\nvar newURL = ???+ \n    \"//\" + ??? + \"/\"\n         + ???;\n```\n",
    "text": "`window.location.host`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Construct the full URL path by completing the JS code snippet below: \n\n```javascript\nvar newURL = ???+ \n    \"//\" + ??? + \"/\"\n         + ???;\n```\n",
    "text": "`window.location.pathname`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`location`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`host`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`navigator`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`history`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`url`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`protocol`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following url:\n\n    http://example.com/data/index.html\n\nGet the host of the url:\n\n```javascript\nwindow.???.???;\n```\n",
    "text": "`pathname`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`data`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`title`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`url`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`info`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`string`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`copy`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`link`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`head`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the three parameters required with the `pushState` method (in order) when modifying a website's URL? \n\n```javascript\nhistory.pushState([???], \n       [???],[???])\n```\n",
    "text": "`body`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to modify a website URL without a full page refresh?\n\n```javascript\nhistory.???([data], \n            [title], [url]);\n```\n",
    "text": "`pushState`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to modify a website URL without a full page refresh?\n\n```javascript\nhistory.???([data], \n            [title], [url]);\n```\n",
    "text": "`modURL`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to modify a website URL without a full page refresh?\n\n```javascript\nhistory.???([data], \n            [title], [url]);\n```\n",
    "text": "`changeRoute`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to modify a website URL without a full page refresh?\n\n```javascript\nhistory.???([data], \n            [title], [url]);\n```\n",
    "text": "`push`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`history`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`forward`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`navigation`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`previous`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`next`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move forwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`length`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`history`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`back`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`forward`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`go`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`navigation`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Move backwards once using the `History API`:\n\n```javascript\nwindow.???.???();\n```\n",
    "text": "`length`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assuming that the current window has no parent, what would the following check return? ???\n\n```javascript\nwindow === window.top\n```\n",
    "text": "True",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Assuming that the current window has no parent, what would the following check return? ???\n\n```javascript\nwindow === window.top\n```\n",
    "text": "False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assuming that the current window has no parent, what would the following check return? ???\n\n```javascript\nwindow === window.top\n```\n",
    "text": "Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assuming that the current window has no parent, what would the following check return? ???\n\n```javascript\nwindow === window.top\n```\n",
    "text": "Undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assume current window has no parent. What will the output of the following check be?\n\n```javascript\nwindow === window.top // ???\n```\n",
    "text": "`true`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Assume current window has no parent. What will the output of the following check be?\n\n```javascript\nwindow === window.top // ???\n```\n",
    "text": "`false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assume current window has no parent. What will the output of the following check be?\n\n```javascript\nwindow === window.top // ???\n```\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "beforeunload",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "onbeforeunload",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "onback",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "back",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "exit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "leave",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "onback",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "onexit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the event fired when a user leaves the webpage?\n\n???\n\nWhat is the name of the event listener triggered before a user leaves the webpage?\n\n???\n",
    "text": "onleave",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "window",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "onbeforeunload",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "beforeunload",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "ifbackpressed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "dom",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "global",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing event listener such that it will be automatically triggered when the user leaves the page:\n\n```javascript\n???.??? = function() {\n  alert(\"Your work will be lost.\");\n};\n```\n",
    "text": "events",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`Blob`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`stringify`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`Instance`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`slice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`config`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the blob constructor to create a blob: \n\n```javascript\nvar debug = {hello: \"Enki\"};\n\nvar blob = new ???([\n    JSON.???(debug, null, 2)],\n    {type : 'application/json'});\n```\n",
    "text": "`Class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method should be used to create a subset of a blob?\n\n```javascript\nvar blob = instanceOfBlob.???([\n start, [, end [, contentType]]\n]);\n```\n",
    "text": "`slice`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method should be used to create a subset of a blob?\n\n```javascript\nvar blob = instanceOfBlob.???([\n start, [, end [, contentType]]\n]);\n```\n",
    "text": "`subset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method should be used to create a subset of a blob?\n\n```javascript\nvar blob = instanceOfBlob.???([\n start, [, end [, contentType]]\n]);\n```\n",
    "text": "`splice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method should be used to create a subset of a blob?\n\n```javascript\nvar blob = instanceOfBlob.???([\n start, [, end [, contentType]]\n]);\n```\n",
    "text": "`concat`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method should be used to create a subset of a blob?\n\n```javascript\nvar blob = instanceOfBlob.???([\n start, [, end [, contentType]]\n]);\n```\n",
    "text": "`stringify`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "FileReader",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "readAsArrayBuffer",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "fReader",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "file-reader",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "read",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "interpret",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `file` object is read as an array buffer?\n\n```javascript\nvar reader = new ???();\nreader.???(file);\n```\n",
    "text": "readAsArray",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of the `FileReader` class can be used to read data as an array buffer?\n\n```javascript\nconst reader = new FileReader()\nreader.???()\n```\n",
    "text": "readAsArrayBuffer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method of the `FileReader` class can be used to read data as an array buffer?\n\n```javascript\nconst reader = new FileReader()\nreader.???()\n```\n",
    "text": "readAsBuffer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of the `FileReader` class can be used to read data as an array buffer?\n\n```javascript\nconst reader = new FileReader()\nreader.???()\n```\n",
    "text": "readTypedArray",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of the `FileReader` class can be used to read data as an array buffer?\n\n```javascript\nconst reader = new FileReader()\nreader.???()\n```\n",
    "text": "readArray",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of the `FileReader` class can be used to read data as an array buffer?\n\n```javascript\nconst reader = new FileReader()\nreader.???()\n```\n",
    "text": "readBuffer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which FileReader's function is called after `readAsDataURL()` is completed?\n\n???\n",
    "text": "`onload`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which FileReader's function is called after `readAsDataURL()` is completed?\n\n???\n",
    "text": "`onend`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which FileReader's function is called after `readAsDataURL()` is completed?\n\n???\n",
    "text": "`oncomplete`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which FileReader's function is called after `readAsDataURL()` is completed?\n\n???\n",
    "text": "`readAsDataURL`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The URL returned by the `readAsDataURL` function is\n\n???\n",
    "text": "a base64 encoded string",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The URL returned by the `readAsDataURL` function is\n\n???\n",
    "text": "an SVG's code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The URL returned by the `readAsDataURL` function is\n\n???\n",
    "text": "a link to file's location",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`result`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`encoding`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`reader`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`file`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`readAsText`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`readFile`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`openFile`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    reader.onload = function(e) {\n       var text = reader.???;\n    }\n    reader.readAsText(file, ???);\n",
    "text": "`onload`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`reader`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`readAsText`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`onload`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`read`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`readText`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`readFile`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Read from a text file:\n\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    ???.???(file,encoding);\n",
    "text": "`file`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`localStorage`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`getItem`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`local`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`storage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`localStore`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`Window.localStorage`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the data from local storage:\n\n```javascript\nvar localData = ???\n               .???(\"data\");\n```\n",
    "text": "`item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`localStorage`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`setItem`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`createItem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`removeItem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`clear`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`getItem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `localStorage` item with key `awesome` and value `enki`:\n\n```javascript\n???.???('awesome', 'enki');\n```\n",
    "text": "`newItem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "getBattery",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "battery",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "addEventListener",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "'levelChange'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "logBatteryLevel",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "addListener",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "bat",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "'level'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "'change'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The async `getBattery` method of the Battery API returns a `battery` object. Fill in the gaps in the following snippet such that you log each level change in the device's battery via an event listener:\n\n```javascript\nnavigator.???()\n  .then((battery) => {\n    ???.???(\n      ???, () => {\n        console.log(battery.level * 100)\n      }\n    )\n  })\n```\n",
    "text": "BatteryAPI",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "navigator",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "getBattery",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "then",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "battery",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "batteryApi",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "now",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the battery API, fill in the missing gaps of the following code snippet such that the battery level is outputed properly:\n\n```javascript\n???.???\n  .then((battery) => {\n    console.log(battery.level)\n  })\n```\n",
    "text": "start",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "geolocation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "getCurrentPosition",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "coordinate",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "latitude",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "pos.coordinate",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "longitude",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "pos.latitude",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "pos.longitude",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "geoLocation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "getPosition",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "coord",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "watchPosition",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps in the following code snippet. Using the geolocation API exposed by the browser and assuming you have all the permissions needed, get the current device position and log the latitude and longitude.\n\n```javascript\nnavigator.???.???(\n  function(pos) {\n    const lat = pos.???.???,\n    const long = ???.???\n    console.log(lat, long)\n  }\n)\n```\n",
    "text": "getLocation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "geolocation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "watchPosition",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "device",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "permission",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "position",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "detect",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "watch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "listen",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing bits of the following snippet such that, using the Geolocation API, you listen on the position changes of the device:\n\n```javascript\nnavigator.???.???(\n  function (pos) {\n    console.log('new position', pos)\n})\n```\n",
    "text": "onChange",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "Notification",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "permissions",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "\"granted\"",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "new Notification",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "\"Hello from Enki\"",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "Notif",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "access",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "throw Notification",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "return Notification",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "return Notif",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "new Notif",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code snippet such that it will send the user a notification with the text \"Hello from Enki\" only if the permissions are already granted:\n\n```javascript\nif (???.??? === ???)\n{\n  ???(???)\n}\n```\n",
    "text": "throw Notif",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "Notification",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "requestPermission",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "request",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "permission",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "requestAccess",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "access",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "grantAccess",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method exposed by the Notifications API can be used to ask for user permissions with regard to sending notifications?\n\n```javascript\n???.???()\n```\n",
    "text": "Notif",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a visibleState property value? ???\n",
    "text": "rawview",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a visibleState property value? ???\n",
    "text": "hidden",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a visibleState property value? ???\n",
    "text": "visible",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a visibleState property value? ???\n",
    "text": "prerender",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a visibleState property value? ???\n",
    "text": "unloaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`addEventListener`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`visibilitychange`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`newEventListener`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`newListener`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`change`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to add an event listener for a visibility change:\n\n```javascript\ndocument.???(\"???\", function() {\n```\n",
    "text": "`detectvisibility`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`navigator`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`vibrate`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`3000`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`300`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`device`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`object`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps to make the device vibrate for two seconds, pause for a second, then vibrate for three more seconds:\n\n```javascript\n???.???([2000, 1000,\n  ???]);\n```\n",
    "text": "`vibration`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`vibrate`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`500`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`0.5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`5000`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the Vibration API, make the device vibrate for half a second:\n\n```javascript\nnavigator.???(???);\n```\n",
    "text": "`vibration`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you view an element in fullscreen with the **HTML Fullscreen API** ?\n\n???\n",
    "text": "`requestFullscreen()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you view an element in fullscreen with the **HTML Fullscreen API** ?\n\n???\n",
    "text": "`viewFullScreen()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you view an element in fullscreen with the **HTML Fullscreen API** ?\n\n???\n",
    "text": "`viewScreen()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you view an element in fullscreen with the **HTML Fullscreen API** ?\n\n???\n",
    "text": "`applyFullscreen()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`context`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`blue`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`fillRect`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`canvas`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`rectangle`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`drawRectangle`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a 2d blue rectangle using `Canvas`:\n\n```javascript\nvar canvas = \n    document.getElementById(\"canvas\");\n// get the 2d context to draw in 2d\nvar context = canvas.getContext(\"2d\");\n\n// color and draw\n???.fillStyle = \"???\";\ncontext.???(20,20,100,200)\n```\n",
    "text": "`document`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the compulsory argument the `fetch()` takes? ???\n",
    "text": "The path to the resource you want to fetch.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the compulsory argument the `fetch()` takes? ???\n",
    "text": "The network name.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the compulsory argument the `fetch()` takes? ???\n",
    "text": "An int value stating the number of files to fetch.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which interface for fetching resources is more powerful?\n\n???\n",
    "text": "`fetch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which interface for fetching resources is more powerful?\n\n???\n",
    "text": "`XMLHttpRequest`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`navigator`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`mozConnection`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`webkitConnection`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`connection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`apiConnection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`statusConnection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Declare the connection and type:\n\n```javascript\nvar connection = ???.connection ||\n                 navigator.??? ||\n                 navigator.???;\nvar type = connection.type;\n```\n",
    "text": "`eventConnection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen for a change in the user connection:\n\n```javascript\n// assume connection is initialised\nconnection.addEventListener('???',\n  handlingFunction);\n```\n",
    "text": "`typechange`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Listen for a change in the user connection:\n\n```javascript\n// assume connection is initialised\nconnection.addEventListener('???',\n  handlingFunction);\n```\n",
    "text": "`type`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen for a change in the user connection:\n\n```javascript\n// assume connection is initialised\nconnection.addEventListener('???',\n  handlingFunction);\n```\n",
    "text": "`change`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen for a change in the user connection:\n\n```javascript\n// assume connection is initialised\nconnection.addEventListener('???',\n  handlingFunction);\n```\n",
    "text": "`update`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen for a change in the user connection:\n\n```javascript\n// assume connection is initialised\nconnection.addEventListener('???',\n  handlingFunction);\n```\n",
    "text": "`statusChange`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permissions.query();`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permissions.status();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permissions.log();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permission.status();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permission.log();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check the status of a permission? ???\n",
    "text": "`permission.query();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To what browser is the Permission API currently limited to?\n???\n",
    "text": "Chrome",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To what browser is the Permission API currently limited to?\n???\n",
    "text": "Safari",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To what browser is the Permission API currently limited to?\n???\n",
    "text": "Mozilla",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To what browser is the Permission API currently limited to?\n???\n",
    "text": "Internet Explorer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`draggable`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`ondragstart`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`dragstart`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`dragging`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`drag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`todrag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Set the elements attribute so it's allowed to be dragged and at the start of the \"drag\" event, the `handler_function` would be triggered.\n\n```html\n<div ???=\"true\"\n   ???=\"handler_function(event);\">\nThis is draggable\n</div>\n```\n",
    "text": "`startdrag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What global event handler must be added to an element so that it can be dragged and dropped?\n\n???\n",
    "text": "`ondragstart`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What global event handler must be added to an element so that it can be dragged and dropped?\n\n???\n",
    "text": "`draggable`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What global event handler must be added to an element so that it can be dragged and dropped?\n\n???\n",
    "text": "`dragstart_handler`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What global event handler must be added to an element so that it can be dragged and dropped?\n\n???\n",
    "text": "`dataTransfer`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What global event handler must be added to an element so that it can be dragged and dropped?\n\n???\n",
    "text": "`dragAndDrop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`addEventListener`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`dblclick`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`addListener`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`eventListener`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`double-click`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`double_click`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `double click` event:\n\n```javascript\nmyVar.???('???', myDoubleClickFunction);\n```\n",
    "text": "`doubleclick`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`addEventListener`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`click`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`dblclick`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`addClickListener`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a listener to a `click` event:\n\n```javascript\nmyVar.???(???,\n  myCLickFunction);\n```\n",
    "text": "`contextmenu`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Prompt the user with a message and input option:\n\n```javascript\n???(???, default);\n```\n",
    "text": "`prompt`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Prompt the user with a message and input option:\n\n```javascript\n???(???, default);\n```\n",
    "text": "`text`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Prompt the user with a message and input option:\n\n```javascript\n???(???, default);\n```\n",
    "text": "`alert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Prompt the user with a message and input option:\n\n```javascript\n???(???, default);\n```\n",
    "text": "`confirm`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`mediaDevices`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`getUserMedia`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`mediaStream`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`navigator`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`promise`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get and return the MediaStream object using the promise below: \n\n```javascript\nvar p = navigator.???.???({\n   audio: true,\n   video: true\n});\n```\n",
    "text": "`permission`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If permission is provided, what is the\npromise returned and resolved with? ???\n",
    "text": "The MediaStream object.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If permission is provided, what is the\npromise returned and resolved with? ???\n",
    "text": "A permission object.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If permission is provided, what is the\npromise returned and resolved with? ???\n",
    "text": "A promise object.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If permission is provided, what is the\npromise returned and resolved with? ???\n",
    "text": "Constraints for the media device.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Map the following array to return the square of each element:\n\n```javascript\nvar arr = [1,2,3,4,'map'].map(x => ???);\n// the result will be [1,4,9,16,???]\n```\n",
    "text": "x*x",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Map the following array to return the square of each element:\n\n```javascript\nvar arr = [1,2,3,4,'map'].map(x => ???);\n// the result will be [1,4,9,16,???]\n```\n",
    "text": "NaN",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Map the following array to return the square of each element:\n\n```javascript\nvar arr = [1,2,3,4,'map'].map(x => ???);\n// the result will be [1,4,9,16,???]\n```\n",
    "text": "x^2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Map the following array to return the square of each element:\n\n```javascript\nvar arr = [1,2,3,4,'map'].map(x => ???);\n// the result will be [1,4,9,16,???]\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Map the following array to return the square of each element:\n\n```javascript\nvar arr = [1,2,3,4,'map'].map(x => ???);\n// the result will be [1,4,9,16,???]\n```\n",
    "text": "x+x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You have to modify the elements of an array after a single,certain rule. The best way to do it is using ??? .\n",
    "text": "map()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You have to modify the elements of an array after a single,certain rule. The best way to do it is using ??? .\n",
    "text": "filter()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You have to modify the elements of an array after a single,certain rule. The best way to do it is using ??? .\n",
    "text": "splice()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar numbers = [0,1,2,3,4,5,6,7];\n// div3 contains all numbers\n// divisible with 3\nvar div3 = numbers.???( num =>\n  num%3 ???);\n```\n",
    "text": "filter",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar numbers = [0,1,2,3,4,5,6,7];\n// div3 contains all numbers\n// divisible with 3\nvar div3 = numbers.???( num =>\n  num%3 ???);\n```\n",
    "text": "== 0",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar numbers = [0,1,2,3,4,5,6,7];\n// div3 contains all numbers\n// divisible with 3\nvar div3 = numbers.???( num =>\n  num%3 ???);\n```\n",
    "text": "!= 0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar numbers = [0,1,2,3,4,5,6,7];\n// div3 contains all numbers\n// divisible with 3\nvar div3 = numbers.???( num =>\n  num%3 ???);\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`.filter`  can be used instead of ??? .\n",
    "text": "for and if",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`.filter`  can be used instead of ??? .\n",
    "text": "if",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`.filter`  can be used instead of ??? .\n",
    "text": "for and alert",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n        fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "floor",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n        fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "ceil",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n        fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "wall",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n       fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "floor",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n       fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "ceil",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have an array:\n\n    var fruits =[oranges, apples, banana];\n\n\n    How would you select a fruit at random\n    from the array fruits?\n\n    var index =\n    Math.???(Math.random()*\n       fruits.length);\n\n    console.log(\"the random fruit is\"\n      +fruits[index]);\n",
    "text": "wall",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "Array",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "push",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "apply",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "merge",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "arrayList",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "on",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "after",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose:\n\n```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n```\n\nMerge the two arrays in order:\n\n```javascript\n???.prototype.???\n.???(arrray1, arrray2);\n```\n",
    "text": "concat",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar a = [3, 1, 4]\nvar b = [2, 7, 1]\nconsole.log(a + b)\n```\n\n???\n",
    "text": "3,1,42,7,1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar a = [3, 1, 4]\nvar b = [2, 7, 1]\nconsole.log(a + b)\n```\n\n???\n",
    "text": "[3, 1, 4, 2, 7, 1]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar a = [3, 1, 4]\nvar b = [2, 7, 1]\nconsole.log(a + b)\n```\n\n???\n",
    "text": "[[3, 1, 4], [2, 7, 1]]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar a = [3, 1, 4]\nvar b = [2, 7, 1]\nconsole.log(a + b)\n```\n\n???\n",
    "text": "3, 1, 4, 2, 7, 1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the result of the following addition?\n\n```javascript\nconsole.log([3, 14] + [2, 71])\n```\n\n???\n",
    "text": "3,142,71",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "what is the result of the following addition?\n\n```javascript\nconsole.log([3, 14] + [2, 71])\n```\n\n???\n",
    "text": "3,14,2,71",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the result of the following addition?\n\n```javascript\nconsole.log([3, 14] + [2, 71])\n```\n\n???\n",
    "text": "[3,14,2,71]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the result of the following addition?\n\n```javascript\nconsole.log([3, 14] + [2, 71])\n```\n\n???\n",
    "text": "[5, 85]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "sort",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "function",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "Math",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "random",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "shuffle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "() =>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "arr",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "merge",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "prototype",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "Array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "call",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "apply",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "+=",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code such that it will shuffle an array using `sort` and `random`.\n\n```javascript\nvar arr = [3, 1, 4, 2, 7, 1]\narr.???(???() {\n  return ???.???() - 0.5\n});\n\n// arr = [4, 2, 7, 1, 1, 3]\n```\n",
    "text": "-0.5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will ???\n\n```javascript\nvar arr = [1,2,3,4,5,6,7];\narr.sort(function(){\n  return Math.random() - 0.5;\n});\n```\n",
    "text": "shuffle the array",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code will ???\n\n```javascript\nvar arr = [1,2,3,4,5,6,7];\narr.sort(function(){\n  return Math.random() - 0.5;\n});\n```\n",
    "text": "sort the array decreasingly",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will ???\n\n```javascript\nvar arr = [1,2,3,4,5,6,7];\narr.sort(function(){\n  return Math.random() - 0.5;\n});\n```\n",
    "text": "do nothing to the array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1,2,3]\ns.??? ; // s = [1,2,3,4]\ns.??? ; // s = [1,2,3]\n```\n",
    "text": "push(3)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1,2,3]\ns.??? ; // s = [1,2,3,4]\ns.??? ; // s = [1,2,3]\n```\n",
    "text": "push(4)",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1,2,3]\ns.??? ; // s = [1,2,3,4]\ns.??? ; // s = [1,2,3]\n```\n",
    "text": "pop()",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1,2,3]\ns.??? ; // s = [1,2,3,4]\ns.??? ; // s = [1,2,3]\n```\n",
    "text": "pop(4)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1,2,3]\ns.??? ; // s = [1,2,3,4]\ns.??? ; // s = [1,2,3]\n```\n",
    "text": "pop(3)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1]\ns.??? ; // s = [1,2]\ns.??? ; // s = [1,2,4]\n```\n",
    "text": "pop()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1]\ns.??? ; // s = [1,2]\ns.??? ; // s = [1,2,4]\n```\n",
    "text": "push(2)",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1]\ns.??? ; // s = [1,2]\ns.??? ; // s = [1,2,4]\n```\n",
    "text": "push(4)",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1]\ns.??? ; // s = [1,2]\ns.??? ; // s = [1,2,4]\n```\n",
    "text": "pop(2)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar s = [1,2];\ns.??? ; // s = [1]\ns.??? ; // s = [1,2]\ns.??? ; // s = [1,2,4]\n```\n",
    "text": "pop(4)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`length`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`myArray`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`myLength`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`-1`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`+0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`+1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`array`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`[0]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`.getLast`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you get the last value in the `myArray` array?\n\n    var myLength = myArray.???\n    var last = ???[??? ???];\n",
    "text": "`.tail`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`enkiArray`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`[0]`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`[1]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`array`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`getLast()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`getFirst()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`push`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that you get the first element of `enkiArray`:\n\n    var enkiArray = [1, 2, 3];\n    var firstElement = ??????;\n",
    "text": "`pop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the length of the array below?\n\n```javascript\nlet arr = [,,,]\nconsole.log(arr.length)\n```\n\n ???\n",
    "text": "3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "what is the length of the array below?\n\n```javascript\nlet arr = [,,,]\nconsole.log(arr.length)\n```\n\n ???\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the length of the array below?\n\n```javascript\nlet arr = [,,,]\nconsole.log(arr.length)\n```\n\n ???\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is the length of the array below?\n\n```javascript\nlet arr = [,,,]\nconsole.log(arr.length)\n```\n\n ???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar arr = [1,2,3];\narr.??? = 2; // arr = [1,2]\narr.length = 4; //arr = ???\n```\n",
    "text": "length",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar arr = [1,2,3];\narr.??? = 2; // arr = [1,2]\narr.length = 4; //arr = ???\n```\n",
    "text": "[1,2,undefined,undefined]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar arr = [1,2,3];\narr.??? = 2; // arr = [1,2]\narr.length = 4; //arr = ???\n```\n",
    "text": "size",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar arr = [1,2,3];\narr.??? = 2; // arr = [1,2]\narr.length = 4; //arr = ???\n```\n",
    "text": "[1,2,undefined,undefined,undefined]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar names = [\"John\",\"Mary\",\"Tom\"];\nnames.length = 4;\n// names = ???\nnames.length = 0;\n// names = ???\n```\n",
    "text": "[\"John\",\"Mary\",\"Tom\", undefined]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar names = [\"John\",\"Mary\",\"Tom\"];\nnames.length = 4;\n// names = ???\nnames.length = 0;\n// names = ???\n```\n",
    "text": "[ ]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar names = [\"John\",\"Mary\",\"Tom\"];\nnames.length = 4;\n// names = ???\nnames.length = 0;\n// names = ???\n```\n",
    "text": "[undefined,undefined,undefined, undefined]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar names = [\"John\",\"Mary\",\"Tom\"];\nnames.length = 4;\n// names = ???\nnames.length = 0;\n// names = ???\n```\n",
    "text": "[\"John\",\"Mary\",\"Tom\"]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`splice`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`2`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`slice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`remove`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`6`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the `4th` and `5th` elements from the array:\n\n    myArray.???(3, ???)\n",
    "text": "`delete`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`splice`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`0`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`remove`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you remove the first element in the array using `splice`?\n\n    myArray.???(???, ???);\n",
    "text": "`slice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "async",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "await",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "adjust",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "apply",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In ES7, it'll be possible to use the ??? keyword to create an async function. The ??? keyword works similarly to yield.\n",
    "text": "generator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What keyword is specific to **ES7 Async**?\n\n???\n",
    "text": "await",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What keyword is specific to **ES7 Async**?\n\n???\n",
    "text": "yield",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What keyword is specific to **ES7 Async**?\n\n???\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What keyword is specific to **ES7 Async**?\n\n???\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two functions are used to place a value onto a channel and to take a value from a channel? ???\n",
    "text": "`.put()` and `.take()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which two functions are used to place a value onto a channel and to take a value from a channel? ???\n",
    "text": "`.add()` and `.remove()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two functions are used to place a value onto a channel and to take a value from a channel? ???\n",
    "text": "`.add()` and `.take()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two functions are used to place a value onto a channel and to take a value from a channel? ???\n",
    "text": "`.put()` and `.remove()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does a **CSP Channel** use to handle the flow of data?\n\n???\n",
    "text": "Promises",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does a **CSP Channel** use to handle the flow of data?\n\n???\n",
    "text": "Generators",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does a **CSP Channel** use to handle the flow of data?\n\n???\n",
    "text": "`put()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does a **CSP Channel** use to handle the flow of data?\n\n???\n",
    "text": "`take()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does a **CSP Channel** use to handle the flow of data?\n\n???\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "concurrent",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "communicate",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "synchronous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "sequential",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "asynchronous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "fail",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "CSP (Communicating Sequential Processes) is a method for ??? processes to ??? during processing.\n",
    "text": "make system calls",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`csp`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`chan()`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`channel()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`generate()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`putAsync()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new csp channel:\n\n```javascript\nvar ch = ???.???();\n```\n",
    "text": "`takeAsync()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`co`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`yield`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`run`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`do`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`const`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`argv`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet where co is used to yield a promise: \n\n```javascript\n???(function *() {\n   var result = ??? Promise.resolve(true);\n}).catch(onerror);\n```\n",
    "text": "`env`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can **generator function** be `yield`ed by `co()`?\n\n???\n",
    "text": "`yes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can **generator function** be `yield`ed by `co()`?\n\n???\n",
    "text": "`no`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "single-threaded",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "run-to-completion",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "double-threaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "not threaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "run-to-crash",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JavaScript is ??? and therefore has ??? behaviour, this means that once the code in a function starts executing it has to finish before any code can run.\n",
    "text": "run-to-memoryfull",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the notion describing two or more tasks executed in the same period, but not necessarily in parallel?\n\n???\n",
    "text": "`concurrency`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the notion describing two or more tasks executed in the same period, but not necessarily in parallel?\n\n???\n",
    "text": "`parallelism`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the notion describing two or more tasks executed in the same period, but not necessarily in parallel?\n\n???\n",
    "text": "`asynchronous`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the notion describing two or more tasks executed in the same period, but not necessarily in parallel?\n\n???\n",
    "text": "`race condition`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "result",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "err",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "this",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps in the following function definition such that it can be used as an **error-first** callback function:\n\n```javascript\nfunction myCallback(error, result) {\n  if (???) {\n    console.log('error', error)\n  }\n  console.log('result', ???)\n}\n```\n",
    "text": "throw new Error(error)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true about *error-first callbacks*:\n\n???\n",
    "text": "First argument of the callback function is an error.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true about *error-first callbacks*:\n\n???\n",
    "text": "First argument of the main function is an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true about *error-first callbacks*:\n\n???\n",
    "text": "Errors are checked before the actual call",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can **Promises** do compared to callbacks?\n\n???\n",
    "text": "un-invert the control",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What can **Promises** do compared to callbacks?\n\n???\n",
    "text": "enforce control",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can **Promises** do compared to callbacks?\n\n???\n",
    "text": "call your callback earlier",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can **Promises** do compared to callbacks?\n\n???\n",
    "text": "call your callback more frequently",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following scenario:\n\nYou are relying on a third-party asynchronous function named `computeData` which you are calling at some point in your application. After this function finishes computing, you want to log the computed data and the time it took to compute. To achieve this, you can pass to `computeData` a second argument which should be a callback function.\n\n```javascript\nfunction logData(data, time) {\n  console.log('computed data:')\n  console.log(data)\n  console.log('time taken:')\n  console.log(time)\n}\n\ncomputeData(myData, logData)\n```\n\nWhat could happen is that the `computeData` function may forget to your call your `logData` function provided. One other potential problem is that `computeData` may call `logData` without passing the `time` argument. These are some examples of some consequences of a more general problem in async callback programming.\n\nWhat is the name of this dynamic?\n\n???\n",
    "text": "inversion of control",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following scenario:\n\nYou are relying on a third-party asynchronous function named `computeData` which you are calling at some point in your application. After this function finishes computing, you want to log the computed data and the time it took to compute. To achieve this, you can pass to `computeData` a second argument which should be a callback function.\n\n```javascript\nfunction logData(data, time) {\n  console.log('computed data:')\n  console.log(data)\n  console.log('time taken:')\n  console.log(time)\n}\n\ncomputeData(myData, logData)\n```\n\nWhat could happen is that the `computeData` function may forget to your call your `logData` function provided. One other potential problem is that `computeData` may call `logData` without passing the `time` argument. These are some examples of some consequences of a more general problem in async callback programming.\n\nWhat is the name of this dynamic?\n\n???\n",
    "text": "inversion of flow",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following scenario:\n\nYou are relying on a third-party asynchronous function named `computeData` which you are calling at some point in your application. After this function finishes computing, you want to log the computed data and the time it took to compute. To achieve this, you can pass to `computeData` a second argument which should be a callback function.\n\n```javascript\nfunction logData(data, time) {\n  console.log('computed data:')\n  console.log(data)\n  console.log('time taken:')\n  console.log(time)\n}\n\ncomputeData(myData, logData)\n```\n\nWhat could happen is that the `computeData` function may forget to your call your `logData` function provided. One other potential problem is that `computeData` may call `logData` without passing the `time` argument. These are some examples of some consequences of a more general problem in async callback programming.\n\nWhat is the name of this dynamic?\n\n???\n",
    "text": "un-inversion of control",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following scenario:\n\nYou are relying on a third-party asynchronous function named `computeData` which you are calling at some point in your application. After this function finishes computing, you want to log the computed data and the time it took to compute. To achieve this, you can pass to `computeData` a second argument which should be a callback function.\n\n```javascript\nfunction logData(data, time) {\n  console.log('computed data:')\n  console.log(data)\n  console.log('time taken:')\n  console.log(time)\n}\n\ncomputeData(myData, logData)\n```\n\nWhat could happen is that the `computeData` function may forget to your call your `logData` function provided. One other potential problem is that `computeData` may call `logData` without passing the `time` argument. These are some examples of some consequences of a more general problem in async callback programming.\n\nWhat is the name of this dynamic?\n\n???\n",
    "text": "callback hell",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following scenario:\n\nYou are relying on a third-party asynchronous function named `computeData` which you are calling at some point in your application. After this function finishes computing, you want to log the computed data and the time it took to compute. To achieve this, you can pass to `computeData` a second argument which should be a callback function.\n\n```javascript\nfunction logData(data, time) {\n  console.log('computed data:')\n  console.log(data)\n  console.log('time taken:')\n  console.log(time)\n}\n\ncomputeData(myData, logData)\n```\n\nWhat could happen is that the `computeData` function may forget to your call your `logData` function provided. One other potential problem is that `computeData` may call `logData` without passing the `time` argument. These are some examples of some consequences of a more general problem in async callback programming.\n\nWhat is the name of this dynamic?\n\n???\n",
    "text": "callback trust",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about naming your callback functions do you consider false?\n\n???\n",
    "text": "they can minimise the memory used by your application",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements about naming your callback functions do you consider false?\n\n???\n",
    "text": "they make your code more readable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about naming your callback functions do you consider false?\n\n???\n",
    "text": "they can help you avoid callback hell",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about naming your callback functions do you consider false?\n\n???\n",
    "text": "they can make your code more intuitive",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following pieces of code is the better piece of code, in terms of readabilty?\n\n???\n\n```javascript\n// Option 1\nsetTimeout(function() {\n   console.log('Hey!');\n   setTimeout(function() {\n      console.log('Hey, again!');\n   }, 1500);\n}, 1500);\n\n// Option 2\nfunction Hey() {\n  console.log('Hey!');\n  setTimeout(Hey_again, 1000);\n}\nfunction Hey_again() {\n  console.log('Hey, again!');\n}\nsetTimeout(Hey, 1000);\n```\n",
    "text": "Option 2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following pieces of code is the better piece of code, in terms of readabilty?\n\n???\n\n```javascript\n// Option 1\nsetTimeout(function() {\n   console.log('Hey!');\n   setTimeout(function() {\n      console.log('Hey, again!');\n   }, 1500);\n}, 1500);\n\n// Option 2\nfunction Hey() {\n  console.log('Hey!');\n  setTimeout(Hey_again, 1000);\n}\nfunction Hey_again() {\n  console.log('Hey, again!');\n}\nsetTimeout(Hey, 1000);\n```\n",
    "text": "Option 1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create the following promise to represent an error:\n\n```javascript\nreturn Promise.???(\n  new ???('Boo! :o')\n)\n```\n",
    "text": "`reject`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create the following promise to represent an error:\n\n```javascript\nreturn Promise.???(\n  new ???('Boo! :o')\n)\n```\n",
    "text": "`Error`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create the following promise to represent an error:\n\n```javascript\nreturn Promise.???(\n  new ???('Boo! :o')\n)\n```\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create the following promise to represent an error:\n\n```javascript\nreturn Promise.???(\n  new ???('Boo! :o')\n)\n```\n",
    "text": "`create`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create the following promise to represent an error:\n\n```javascript\nreturn Promise.???(\n  new ???('Boo! :o')\n)\n```\n",
    "text": "`exception`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`Promise`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`resolve`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`reject`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`send`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`return`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the shortcut notation for **Promises** in **ES6**:\n\n```javascript\nreturn ???.???('my value');\n```\n",
    "text": "`prom`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what order will these console.log() statements occur?\n\nIn what order will these `console.log()` statements occur?\n\n```javascript\nconst element = document.body;\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 1'));\n  console.log('Listener 1')\n})\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 2'));\n  console.log('Listener 2')\n})\n```\n\n ???\n",
    "text": "Listener 1; Microtask 1; Listener 2; Microtask 2;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In what order will these console.log() statements occur?\n\nIn what order will these `console.log()` statements occur?\n\n```javascript\nconst element = document.body;\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 1'));\n  console.log('Listener 1')\n})\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 2'));\n  console.log('Listener 2')\n})\n```\n\n ???\n",
    "text": "Listener 1; Listener 2; Microtask 1; Microtask 2;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what order will these console.log() statements occur?\n\nIn what order will these `console.log()` statements occur?\n\n```javascript\nconst element = document.body;\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 1'));\n  console.log('Listener 1')\n})\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 2'));\n  console.log('Listener 2')\n})\n```\n\n ???\n",
    "text": "Microtask 1; Listener 1; Microtask 2; Listener 2;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what order will these console.log() statements occur?\n\nIn what order will these `console.log()` statements occur?\n\n```javascript\nconst element = document.body;\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 1'));\n  console.log('Listener 1')\n})\n\nelement.addEventListener('click', () => {\n  Promise.resolve().then(() => console.log('Microtask 2'));\n  console.log('Listener 2')\n})\n```\n\n ???\n",
    "text": "Microtask 2; Listener 2; Microtask 1; Listener 1;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How to prevent the `shutdown` to happen?\n\n    let task = setTimeout(shutdown, 5000);\n    if (confirm('cancel shutdown?')) {\n      ???\n    }\n",
    "text": "`clearTimeout(task)`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How to prevent the `shutdown` to happen?\n\n    let task = setTimeout(shutdown, 5000);\n    if (confirm('cancel shutdown?')) {\n      ???\n    }\n",
    "text": "`task = null;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How to prevent the `shutdown` to happen?\n\n    let task = setTimeout(shutdown, 5000);\n    if (confirm('cancel shutdown?')) {\n      ???\n    }\n",
    "text": "`delete task;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What log is shown each second?\n\n    let t = setInterval(\n      (a, b) => {\n        ++a;\n        console.log(a + b);\n        // ???\n      },\n      1000, // delay\n      0,    // a\n      10    // b\n    );\n",
    "text": "`always 11`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What log is shown each second?\n\n    let t = setInterval(\n      (a, b) => {\n        ++a;\n        console.log(a + b);\n        // ???\n      },\n      1000, // delay\n      0,    // a\n      10    // b\n    );\n",
    "text": "`10 then 11 then 12`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What log is shown each second?\n\n    let t = setInterval(\n      (a, b) => {\n        ++a;\n        console.log(a + b);\n        // ???\n      },\n      1000, // delay\n      0,    // a\n      10    // b\n    );\n",
    "text": "`NaN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What log is shown each second?\n\n    let t = setInterval(\n      (a, b) => {\n        ++a;\n        console.log(a + b);\n        // ???\n      },\n      1000, // delay\n      0,    // a\n      10    // b\n    );\n",
    "text": "`11 then 12 then 13`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "parseFloat",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "isFinite",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "&&",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "finite",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "isInfinte",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "++",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "+",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "parse",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "'null'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "typeof",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if the argument is a number:\n\n```javascript\nfunction isNumber(x) {\n   var float = !isNan(???(x));\n   var finite = ???(x);\n   return float ??? ???;\n}\n```\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "isNaN",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "parseFloat",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "isFinite",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "isInfinite",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "typeof",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "isNum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code in order to check if the input is a number or not:\n\n```javascript\nfunction isNumber(n){\n  var float  = ! ???(???(n));\n  var finite = ???(n);\n  return float && finite;\n}\n```\n",
    "text": "isValud",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "addEventListener",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "load",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "naturalWidth",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "naturalHeight",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "height",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javascript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "onload",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "addEventListener",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "load",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "naturalWidth",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "naturalHeight",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "height",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "onLoad",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the load listener of `enkiImg` to get natural width and height:\n\n```javasscript\nenkiImg.???('???',\n function() {\n\tconsole.log('Width: ',\n this.???);\n\tconsole.log('Height: ',\n this.???);\n});\n```\n",
    "text": "onload",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nif(animal==='lion'){\n   run = true;\n}else{\n   run = false;\n}\n```\n\nHow would you express this using \na conditional operator?\n\n```javascript\nvar animal = 'lion';\nvar run = (animal === 'lion')? true:???;\n```\n",
    "text": "'false'",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\nif(animal==='lion'){\n   run = true;\n}else{\n   run = false;\n}\n```\n\nHow would you express this using \na conditional operator?\n\n```javascript\nvar animal = 'lion';\nvar run = (animal === 'lion')? true:???;\n```\n",
    "text": "'undefined'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nif(animal==='lion'){\n   run = true;\n}else{\n   run = false;\n}\n```\n\nHow would you express this using \na conditional operator?\n\n```javascript\nvar animal = 'lion';\nvar run = (animal === 'lion')? true:???;\n```\n",
    "text": "'null'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nif(animal==='lion'){\n   run = true;\n}else{\n   run = false;\n}\n```\n\nHow would you express this using \na conditional operator?\n\n```javascript\nvar animal = 'lion';\nvar run = (animal === 'lion')? true:???;\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "break",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "enkiLoop",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "loop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "yield",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "stop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Break `enkiLoop`:\n\n```javascript\nenkiLoop:\nfor(var i=0; i<5; i++) {\n if(condition) {\n   ??? ???\n }\n}\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code return? ???\n\n```javascript\nNaN === NaN\n```\n",
    "text": "False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code return? ???\n\n```javascript\nNaN === NaN\n```\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code return? ???\n\n```javascript\nNaN === NaN\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code return? ???\n\n```javascript\nNaN === NaN\n```\n",
    "text": "Undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "NaN",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "false",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will each of these output?\n\n```javascript\nconsole.log(Number(\"enki\")); // ???\nconsole.log(0/0 ===\n   Number(\"five\")); // ???\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "x: 0.39999999999999997",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "y: 0.5",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "x: 0.4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "x: 0.6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "y: 0.49999999999999997",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the following variable values?\n\n```javascript\nvar x = 0.6 - 0.2;\n???\nvar y = (0.2 * 10 + 0.3 * 10) / 10;\n???\n```\n",
    "text": "y: 0.50000000000000004",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//16 digits\nvar x = 9999999999999999;\nconsole.log(x);\n//x: ???\n```\n",
    "text": "10000000000000000 // 17 digits",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\n//16 digits\nvar x = 9999999999999999;\nconsole.log(x);\n//x: ???\n```\n",
    "text": "9999999999999999 //16 digits",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//16 digits\nvar x = 9999999999999999;\nconsole.log(x);\n//x: ???\n```\n",
    "text": "99999999999999999//17 digits",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nconsole.log(3 - false);\nconsole.log(3 + false);\nconsole.log(3 + true);\n```\n",
    "text": "`3, 3, 4`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nconsole.log(3 - false);\nconsole.log(3 + false);\nconsole.log(3 + true);\n```\n",
    "text": "`2, 4, 3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nconsole.log(3 - false);\nconsole.log(3 + false);\nconsole.log(3 + true);\n```\n",
    "text": "`3, 3, 3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nconsole.log(3 - false);\nconsole.log(3 + false);\nconsole.log(3 + true);\n```\n",
    "text": "`4, 2, 3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nconsole.log(3 - false);\nconsole.log(3 + false);\nconsole.log(3 + true);\n```\n",
    "text": "`2, 4, 4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the this code output?\n\n```javascript\nconsole.log(3 + false); // ???\nconsole.log(3 + true); // ???\n```\n",
    "text": "3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the this code output?\n\n```javascript\nconsole.log(3 + false); // ???\nconsole.log(3 + true); // ???\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What does the this code output?\n\n```javascript\nconsole.log(3 + false); // ???\nconsole.log(3 + true); // ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Unlike other languages, JavaScript doesn't differentiate between ???.\n",
    "text": "types of numbers.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Unlike other languages, JavaScript doesn't differentiate between ???.\n",
    "text": "data types.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Unlike other languages, JavaScript doesn't differentiate between ???.\n",
    "text": "data structures.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Unlike other languages, Javascript stores numbers as ???\n",
    "text": "double precision floating point",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Unlike other languages, Javascript stores numbers as ???\n",
    "text": "single precision floating point",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Unlike other languages, Javascript stores numbers as ???\n",
    "text": "long long",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Unlike other languages, Javascript stores numbers as ???\n",
    "text": "bigInt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code checks for ??? .\n\n```javascript\nmsg = 'Hello ' + (name || 'friend');\n```\n",
    "text": "All 3 of them",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code checks for ??? .\n\n```javascript\nmsg = 'Hello ' + (name || 'friend');\n```\n",
    "text": "Null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code checks for ??? .\n\n```javascript\nmsg = 'Hello ' + (name || 'friend');\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code checks for ??? .\n\n```javascript\nmsg = 'Hello ' + (name || 'friend');\n```\n",
    "text": "Empty string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar ar = [1,2,3,'5'];\ndelete ar[2]; // ar = ???\n// splice(startingPos,deleteCount)\nar.splice(2,2); // ar = ???\n```\n",
    "text": "[1,2,undefined,’5’]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar ar = [1,2,3,'5'];\ndelete ar[2]; // ar = ???\n// splice(startingPos,deleteCount)\nar.splice(2,2); // ar = ???\n```\n",
    "text": "[1,2]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar ar = [1,2,3,'5'];\ndelete ar[2]; // ar = ???\n// splice(startingPos,deleteCount)\nar.splice(2,2); // ar = ???\n```\n",
    "text": "[1,3,’5’]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar ar = [1,2,3,'5'];\ndelete ar[2]; // ar = ???\n// splice(startingPos,deleteCount)\nar.splice(2,2); // ar = ???\n```\n",
    "text": "[1,’5’]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet:\n\n```javascript\nvar ar = [1,2,3,'5'];\ndelete ar[2]; // ar = ???\n// splice(startingPos,deleteCount)\nar.splice(2,2); // ar = ???\n```\n",
    "text": "[1,2,3,’5’]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Let `var x = [1,4,6,8]` .\n\nAfter calling `splice(1,1)`  on x , it will contain ??? .\n",
    "text": "[1,6,8]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Let `var x = [1,4,6,8]` .\n\nAfter calling `splice(1,1)`  on x , it will contain ??? .\n",
    "text": "[4,6,8]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Let `var x = [1,4,6,8]` .\n\nAfter calling `splice(1,1)`  on x , it will contain ??? .\n",
    "text": "[1,undefined,6,8]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Choose the right operator for each step to end up with x equal to 7:\n\n```javascript\nvar x = 5;\nx ??? 4; // make x == 20\nx ??? 2; // then, make x == 10\nx ??? 3; // lastly, make x == 7\n```\n",
    "text": "*=",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Choose the right operator for each step to end up with x equal to 7:\n\n```javascript\nvar x = 5;\nx ??? 4; // make x == 20\nx ??? 2; // then, make x == 10\nx ??? 3; // lastly, make x == 7\n```\n",
    "text": "/=",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Choose the right operator for each step to end up with x equal to 7:\n\n```javascript\nvar x = 5;\nx ??? 4; // make x == 20\nx ??? 2; // then, make x == 10\nx ??? 3; // lastly, make x == 7\n```\n",
    "text": "-=",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Choose the right operator for each step to end up with x equal to 7:\n\n```javascript\nvar x = 5;\nx ??? 4; // make x == 20\nx ??? 2; // then, make x == 10\nx ??? 3; // lastly, make x == 7\n```\n",
    "text": "++",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Choose the right operator for each step to end up with x equal to 7:\n\n```javascript\nvar x = 5;\nx ??? 4; // make x == 20\nx ??? 2; // then, make x == 10\nx ??? 3; // lastly, make x == 7\n```\n",
    "text": "=>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`x = x + y` can be shortened using ??? \n",
    "text": "x += y",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`x = x + y` can be shortened using ??? \n",
    "text": "x ++ y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`x = x + y` can be shortened using ??? \n",
    "text": "x =+ y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What scope is the catch clause of a try/catch statement in? ???\n",
    "text": "block scoped.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What scope is the catch clause of a try/catch statement in? ???\n",
    "text": "function scoped.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Even though Javascript is function scoped, the variable in ??? is block scoped.\n",
    "text": "the catch clause",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Even though Javascript is function scoped, the variable in ??? is block scoped.\n",
    "text": "the try clause",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Even though Javascript is function scoped, the variable in ??? is block scoped.\n",
    "text": "a for loop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will make the debugger stop at its line?\n\n???\n",
    "text": "`debugger;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What statement will make the debugger stop at its line?\n\n???\n",
    "text": "`stop;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will make the debugger stop at its line?\n\n???\n",
    "text": "`break;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will make the debugger stop at its line?\n\n???\n",
    "text": "`debug;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you log variables into the console?\n\n    ???.???(myVar);\n",
    "text": "`console`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you log variables into the console?\n\n    ???.???(myVar);\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you log variables into the console?\n\n    ???.???(myVar);\n",
    "text": "`alert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you log variables into the console?\n\n    ???.???(myVar);\n",
    "text": "`debugger;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you log variables into the console?\n\n    ???.???(myVar);\n",
    "text": "`addVar`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`try`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`err`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`constructor`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`SyntaxError`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`e`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`EvalError`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`Error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the `try/catch` block will handle `SyntaxError`s:\n\n```javascript\n??? {\n    eval('3.14 + /2.71');\n} catch (???) {\n  if (err.??? == ???) {\n    //handling\n  }\n}\n```\n",
    "text": "`typeof`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`catch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`SyntaxError`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`EvalError`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`try`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`syntax`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet so that the `try/catch` block will handle `SyntaxError`:\n\n```javascript\ntry {\n  eval('5 + /3');\n} ??? (e) {\n  if(e.constructor == ???) {\n   //handle\n  }\n}\n```\n",
    "text": "`Error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`try`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`catch`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`finally`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`final`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`do`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`while`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following block in the code snippet such that the comments make sense:\n\n    ??? {\n       throw \"my error\";\n    } ??? (e) {\n       //exception is caught here\n    } ??? {\n       // will always run\n    }\n",
    "text": "`for`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing keyword for throwing an exception:\n\n    ??? \"my exception\"\n",
    "text": "`throw`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing keyword for throwing an exception:\n\n    ??? \"my exception\"\n",
    "text": "`raise`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing keyword for throwing an exception:\n\n    ??? \"my exception\"\n",
    "text": "`catch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing keyword for throwing an exception:\n\n    ??? \"my exception\"\n",
    "text": "`try`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing keyword for throwing an exception:\n\n    ??? \"my exception\"\n",
    "text": "`finally`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements do you consider false?\n\n???\n",
    "text": "you need HTML to test JavaScript",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements do you consider false?\n\n???\n",
    "text": "online JavaScript environments allow the use of external libraries",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements do you consider false?\n\n???\n",
    "text": "you can share your code easier through online JavaScript environments",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements do you consider false?\n\n???\n",
    "text": "online JavaScript environments can ease the proccess of testing out code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do online JavaScript environments allow the use of external libraries?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do online JavaScript environments allow the use of external libraries?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do online JavaScript environments allow the use of external libraries?\n\n???\n",
    "text": "only React and Angluar",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do online JavaScript environments allow the use of external libraries?\n\n???\n",
    "text": "only jQuery",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`x`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`case`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`'1'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`default`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`'5'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`one`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`A`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that `A` is logged to the `console`:\n\n```javascript\nvar x = 1;\nswitch (???) {\n  ??? ???:\n    console.log('A');\n}\n// A\n```\n",
    "text": "`'A'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nvar x = 10;\nswitch(x){\n  case '10':\n     console.log(\"Hi!\");\n}\n// ???\n```\n",
    "text": "`nothing`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nvar x = 10;\nswitch(x){\n  case '10':\n     console.log(\"Hi!\");\n}\n// ???\n```\n",
    "text": "`'Hi!'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nvar x = 10;\nswitch(x){\n  case '10':\n     console.log(\"Hi!\");\n}\n// ???\n```\n",
    "text": "`an error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`switch`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`case`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`default`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`break`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`if`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`else`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the basic syntax of the following `switch` statement:\n\n    ??? (checker) {\n       ???: \"1\" :\n            ...\n            break;\n       case: \"2\" :\n            ...\n            break;\n       ???:\n            ...\n    }\n",
    "text": "`if else`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`else`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`if`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`case`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`break`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`if else`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`else if`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`switch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`case`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write an `if/else` statement?\n\n    if (condition <= 0) {\n      ...\n    } ??? ??? (condition > 0) {\n      ...\n    }\n",
    "text": "`==`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`do`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`while`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`10`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`if`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`else`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`9`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of the following `do/while` loop such that `i` will be `10` at the end of it:\n\n    var i = 0;\n    ??? {\n      i++;\n    } ??? (i < ???)\n",
    "text": "`for`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`for`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`var`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`i++`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`while`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`do`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `for` loop such that it makes sense:\n\n    ??? (??? i = 0; i < 10; ???) {\n       console.log(i);\n    }\n",
    "text": "`i--`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Iterate through the elements of myArray:\n\n```javascript\nvar myArray = [1,2,\"3\",\"item\"];\n\n??? (var i ??? ???){\n  console.log(i);\n}\n```\n",
    "text": "`for`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Iterate through the elements of myArray:\n\n```javascript\nvar myArray = [1,2,\"3\",\"item\"];\n\n??? (var i ??? ???){\n  console.log(i);\n}\n```\n",
    "text": "`of`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Iterate through the elements of myArray:\n\n```javascript\nvar myArray = [1,2,\"3\",\"item\"];\n\n??? (var i ??? ???){\n  console.log(i);\n}\n```\n",
    "text": "`myArray`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Iterate through the elements of myArray:\n\n```javascript\nvar myArray = [1,2,\"3\",\"item\"];\n\n??? (var i ??? ???){\n  console.log(i);\n}\n```\n",
    "text": "`Array`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Iterate through the elements of myArray:\n\n```javascript\nvar myArray = [1,2,\"3\",\"item\"];\n\n??? (var i ??? ???){\n  console.log(i);\n}\n```\n",
    "text": "`do`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To exit a loop, you can use the ??? keyword.\n",
    "text": "break",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To exit a loop, you can use the ??? keyword.\n",
    "text": "stop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To exit a loop, you can use the ??? keyword.\n",
    "text": "finish",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To exit a loop, you can use the ??? keyword.\n",
    "text": "end",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "Array",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "arguments",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "argv",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "args",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "argvs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following `returnArgs` function should an array containing the arguments with which it is called. Complete the missing gaps such that it works as intended:\n\n```javascript\nfunction returnArgs() {\n  return ???.prototype\n    .slice.call(???)\n}\n```\n",
    "text": "new Array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "arguments",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "slice",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "splice",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "argv",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "args",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "sort",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Turn the arguments of a method into a array:\n\n```javascript\nfunction myArray() {\n  var a = ???;\n  a = Array.prototype.???.call(a);\n  return a;\n}\n```\n",
    "text": "toArray",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function mult(x, y){\n      var z = x * x;\n    }\n\n    console.log(mult(2,3));\n    ???\n",
    "text": "`undefined`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What would the following snippet print?\n\n    function mult(x, y){\n      var z = x * x;\n    }\n\n    console.log(mult(2,3));\n    ???\n",
    "text": "`4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function mult(x, y){\n      var z = x * x;\n    }\n\n    console.log(mult(2,3));\n    ???\n",
    "text": "`9`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function mult(x, y){\n      var z = x * x;\n    }\n\n    console.log(mult(2,3));\n    ???\n",
    "text": "`6`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function mult(x, y){\n      var z = x * x;\n    }\n\n    console.log(mult(2,3));\n    ???\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function add(x, y){\n      var sum = x + y;\n    }\n\n    console.log(add(2,3));\n    ???\n",
    "text": "`undefined`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What would the following snippet print?\n\n    function add(x, y){\n      var sum = x + y;\n    }\n\n    console.log(add(2,3));\n    ???\n",
    "text": "`5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function add(x, y){\n      var sum = x + y;\n    }\n\n    console.log(add(2,3));\n    ???\n",
    "text": "`false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What would the following snippet print?\n\n    function add(x, y){\n      var sum = x + y;\n    }\n\n    console.log(add(2,3));\n    ???\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In JavaScript, objects are passed into a function as a ???.\n",
    "text": "reference",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In JavaScript, objects are passed into a function as a ???.\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In JavaScript, objects are passed into a function as a ???.\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In JavaScript, objects are passed into a function as a ???.\n",
    "text": "json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n    function changeProp(obj){\n      obj.name = \"John\";\n    }\n\n    var per = { name : \"Alex\"};\n    changeProp(per);\n    console.log(per.name);\n    // ???\n",
    "text": "John",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet output?\n\n    function changeProp(obj){\n      obj.name = \"John\";\n    }\n\n    var per = { name : \"Alex\"};\n    changeProp(per);\n    console.log(per.name);\n    // ???\n",
    "text": "Alex",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n    function changeProp(obj){\n      obj.name = \"John\";\n    }\n\n    var per = { name : \"Alex\"};\n    changeProp(per);\n    console.log(per.name);\n    // ???\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n    function changeProp(obj){\n      obj.name = \"John\";\n    }\n\n    var per = { name : \"Alex\"};\n    changeProp(per);\n    console.log(per.name);\n    // ???\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the output:\n\n    alert(foo()); // ???\n    var foo = function() { return 'Enki'; }\n",
    "text": "error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Give the output:\n\n    alert(foo()); // ???\n    var foo = function() { return 'Enki'; }\n",
    "text": "alerts 'Enki'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the output:\n\n    alert(foo()); // ???\n    function foo() { return 'Enki'; }\n",
    "text": "alerts 'Enki'",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Give the output:\n\n    alert(foo()); // ???\n    function foo() { return 'Enki'; }\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`Short circuit` the following code:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "name",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`Short circuit` the following code:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "||",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`Short circuit` the following code:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "&&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`Short circuit` the following code:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "==",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code to return a *valid* String as name or a default value:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "name",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code to return a *valid* String as name or a default value:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "||",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code to return a *valid* String as name or a default value:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "&&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code to return a *valid* String as name or a default value:\n\n```javascript\nfunction shortCir(name){\n  return ??? ??? 'John Doe';\n}\n```\n",
    "text": "==",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the `name` field used in a **function expression** for defining functions mandatory?\n\n???\n",
    "text": "no",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the `name` field used in a **function expression** for defining functions mandatory?\n\n???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the `name` field used in a **function expression** for defining functions mandatory?\n\n???\n",
    "text": "only on browsers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the `name` field used in a **function expression** for defining functions mandatory?\n\n???\n",
    "text": "only in older JavaScript versions",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following anonymous function:\n\n```javascript\nvar cube = ???(x) {\n   return x * x * x;\n};\n```\n",
    "text": "function",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following anonymous function:\n\n```javascript\nvar cube = ???(x) {\n   return x * x * x;\n};\n```\n",
    "text": "let",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following anonymous function:\n\n```javascript\nvar cube = ???(x) {\n   return x * x * x;\n};\n```\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following anonymous function:\n\n```javascript\nvar cube = ???(x) {\n   return x * x * x;\n};\n```\n",
    "text": "{}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When can a scenario occur where calling functions do not exist? ???\n",
    "text": "When scripts are shared between different parts of a website.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When can a scenario occur where calling functions do not exist? ???\n",
    "text": "When functions haven't been declared properly.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When can a scenario occur where calling functions do not exist? ???\n",
    "text": "When scripts haven't been passed or imported properly.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `if` statement to check if a function exists:\n\n```javascript\nif(??? myFunction === ???){\n  myFunction();\n}\n```\n",
    "text": "typeof",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the `if` statement to check if a function exists:\n\n```javascript\nif(??? myFunction === ???){\n  myFunction();\n}\n```\n",
    "text": "”function”",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the `if` statement to check if a function exists:\n\n```javascript\nif(??? myFunction === ???){\n  myFunction();\n}\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `if` statement to check if a function exists:\n\n```javascript\nif(??? myFunction === ???){\n  myFunction();\n}\n```\n",
    "text": "!",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `if` statement to check if a function exists:\n\n```javascript\nif(??? myFunction === ???){\n  myFunction();\n}\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following code? ???\n\n```javascript\nvar multiply = function times(x, y) {\n   return x * y;\n};\n```\n",
    "text": "A function expression of a function named `times` assigned to the variable `multiply`.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the following code? ???\n\n```javascript\nvar multiply = function times(x, y) {\n   return x * y;\n};\n```\n",
    "text": "A function `times` being declared.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following code? ???\n\n```javascript\nvar multiply = function times(x, y) {\n   return x * y;\n};\n```\n",
    "text": "Function expression of an anonymous function.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following?\n\n```javascript\nvar multiply = function(x, y) {\n   return x * y;\n}\n```\n\n???\n",
    "text": "function expression of an anonymous function",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the following?\n\n```javascript\nvar multiply = function(x, y) {\n   return x * y;\n}\n```\n\n???\n",
    "text": "function defined with `function` constructor",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following?\n\n```javascript\nvar multiply = function(x, y) {\n   return x * y;\n}\n```\n\n???\n",
    "text": "function expression of a `function` named `mult`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following?\n\n```javascript\nvar multiply = function(x, y) {\n   return x * y;\n}\n```\n\n???\n",
    "text": "all",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the following?\n\n```javascript\nvar multiply = function(x, y) {\n   return x * y;\n}\n```\n\n???\n",
    "text": "none",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`var`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`function`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`return`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`console.log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`fn`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the function expression in the following code snippet such that it makes sense:\n\n    ??? x = ??? add(x, y, z){\n        ??? x + y + z;\n    }\n    console.log(x(1, 2, 3)); \n",
    "text": "`()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "%",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "return number/2",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "return",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "return NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "return number%2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "return null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "returns undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "/",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `naturalHalf` function, given an input number, will return `undefined` for every odd number and the number's half for each even number:\n\n```javascript\nfunction naturalHalf(number) {\n  if (number ??? 2 == 0) {\n    ???\n  }\n  ???\n}\n```\n",
    "text": "number",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "Enki",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "true",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the output of the following `foo` calls:\n\n```javascript\nfunction foo(num) {\n  if (num === 1) {\n    return;\n  }\n  if (num === 2) {\n    return 'Enki';\n  }\n}\nfoo(1); // = ???\nfoo(2); // = ???\nfoo(3) === foo(1); // = ???\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A use case of the IIFE pattern is to wrap the whole code in an IIFE and pass in the ??? object. This could be given an alias of ???. Global public properties could then be made accessible.\n",
    "text": "`window` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A use case of the IIFE pattern is to wrap the whole code in an IIFE and pass in the ??? object. This could be given an alias of ???. Global public properties could then be made accessible.\n",
    "text": "`global` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A use case of the IIFE pattern is to wrap the whole code in an IIFE and pass in the ??? object. This could be given an alias of ???. Global public properties could then be made accessible.\n",
    "text": "`modal` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A use case of the IIFE pattern is to wrap the whole code in an IIFE and pass in the ??? object. This could be given an alias of ???. Global public properties could then be made accessible.\n",
    "text": "`new` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A use case of the IIFE pattern is to wrap the whole code in an IIFE and pass in the ??? object. This could be given an alias of ???. Global public properties could then be made accessible.\n",
    "text": "`returned`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`function`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`()`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`{}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`(`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the syntax of an **IIFE** ?\n\n```javascript\n(??? () {\n}???);\n```\n",
    "text": "`call`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`bind`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`thisArg`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`p2`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`tie`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`next`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`this`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`param`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`function`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to return a new function with its `this` being equal to `thisArg`:\n\n```javascript\n???(???, [p1, [???, [...]]])\n```\n",
    "text": "`combine`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to make a function be always called with a **particular** `this` value?\n\n???\n",
    "text": "`bind()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What can be used to make a function be always called with a **particular** `this` value?\n\n???\n",
    "text": "`push()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to make a function be always called with a **particular** `this` value?\n\n???\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to make a function be always called with a **particular** `this` value?\n\n???\n",
    "text": "`return`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to make a function be always called with a **particular** `this` value?\n\n???\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method will change the `this` context of a JavaScript function call?\n???\n",
    "text": "`.call(obj)`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method will change the `this` context of a JavaScript function call?\n???\n",
    "text": "`.context(obj)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method will change the `this` context of a JavaScript function call?\n???\n",
    "text": "`.this = ___`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method will change the `this` context of a JavaScript function call?\n???\n",
    "text": "`.object()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the .???() method will change the ??? context of a JavaScript function call\n",
    "text": "`call`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the .???() method will change the ??? context of a JavaScript function call\n",
    "text": "`this`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using the .???() method will change the ??? context of a JavaScript function call\n",
    "text": "`context`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the .???() method will change the ??? context of a JavaScript function call\n",
    "text": "`scope`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "this",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "Window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "navigator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "bind",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the context default to when executing a function in strict mode? ???\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "this",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "Window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "navigator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "history",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "bind",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What represent the **context** of a function in Javascript?\n\n???\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The ??? method lets you invoke the method using an array as an argument whereas the ??? method require explicit parameters.\n",
    "text": "`.apply`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The ??? method lets you invoke the method using an array as an argument whereas the ??? method require explicit parameters.\n",
    "text": "`.call`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What must be used so explicit arguments are required?\n\n```javascript\nfunction.???(obj, 1, 2, 3);\n```\n",
    "text": "`call`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What must be used so explicit arguments are required?\n\n```javascript\nfunction.???(obj, 1, 2, 3);\n```\n",
    "text": "`apply`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `currObj` is not supplied, what is it set to by default? ???\n",
    "text": "The global object.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If `currObj` is not supplied, what is it set to by default? ???\n",
    "text": "Equal to null.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `currObj` is not supplied, what is it set to by default? ???\n",
    "text": "The previous object.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `currObj` is not supplied, what is it set to by default? ???\n",
    "text": "The boolean false.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the object and the arguments of the function?\n\n```javascript\ncallObject.call(null, 4, 2);\n```\n\n???\n",
    "text": "Object: null, Arguments: 4,2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the object and the arguments of the function?\n\n```javascript\ncallObject.call(null, 4, 2);\n```\n\n???\n",
    "text": "Object: 4, Arguments 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the object and the arguments of the function?\n\n```javascript\ncallObject.call(null, 4, 2);\n```\n\n???\n",
    "text": "Object: 4, Arguments: null, 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the object and the arguments of the function?\n\n```javascript\ncallObject.call(null, 4, 2);\n```\n\n???\n",
    "text": "This gives an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "global",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "test",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "test2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "document",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "inline",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the variable scopes in the following code:\n\n```javascript\nvar flag = true; //flag is ???\n\nfunction test() {\n   var x;\n   function test2() { // test2 is in ???\n      var y;\n   }\n}\n```\n",
    "text": "project",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find each variable scope in the following code:\n\n```javascript\nvar a = 1; // a is in global\nvar b = 2; // b is in ???\nfunction foo(){ // foo is in global\n  var a = 2; // a is in foo\n  function fee(){ // fee is in ???\n  var b = 3; // b is in ???\n  }\n}\n```\n",
    "text": "global",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Find each variable scope in the following code:\n\n```javascript\nvar a = 1; // a is in global\nvar b = 2; // b is in ???\nfunction foo(){ // foo is in global\n  var a = 2; // a is in foo\n  function fee(){ // fee is in ???\n  var b = 3; // b is in ???\n  }\n}\n```\n",
    "text": "foo",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Find each variable scope in the following code:\n\n```javascript\nvar a = 1; // a is in global\nvar b = 2; // b is in ???\nfunction foo(){ // foo is in global\n  var a = 2; // a is in foo\n  function fee(){ // fee is in ???\n  var b = 3; // b is in ???\n  }\n}\n```\n",
    "text": "fee",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Find each variable scope in the following code:\n\n```javascript\nvar a = 1; // a is in global\nvar b = 2; // b is in ???\nfunction foo(){ // foo is in global\n  var a = 2; // a is in foo\n  function fee(){ // fee is in ???\n  var b = 3; // b is in ???\n  }\n}\n```\n",
    "text": "local",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A polyfill provides... ???\n",
    "text": "technology that a developer expects the browser to provide natively.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A polyfill provides... ???\n",
    "text": "new features.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A polyfill provides... ???\n",
    "text": "all HTML tags.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A polyfill is a downloadable code that provides \n\n??? .\n",
    "text": "support for older browsers",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A polyfill is a downloadable code that provides \n\n??? .\n",
    "text": "new features",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A polyfill is a downloadable code that provides \n\n??? .\n",
    "text": "all HTML tags",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "width",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "prototype",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "setWidth",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return this",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "Rectangle",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "length",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "this",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "setLength",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return r",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "r",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that the log statements on the last lines will print the commented output.\n\n```javascript\nvar Rectangle = function() {\n  this.??? = null\n  this.length = null\n}\n\nRectangle.???\n  .??? = function(width) {\n    this.width = width\n    ???\n }\n\n???.prototype\n  .setLength = function(length)  {\n    this.??? = length\n    return ???\n  }\n\nconst r = (new Rectangle())\n  .setWidth(20)\n  .setLength(30)\n\nconsole.log(r.length) // 30\nconsole.log(r.width) //20\n```\n",
    "text": "return width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is method chaining typically enabled?\n\n???\n",
    "text": "Implementing methods that return `this`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How is method chaining typically enabled?\n\n???\n",
    "text": "No need for implementation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is method chaining typically enabled?\n\n???\n",
    "text": "Updating the object to allow this",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to output “I enjoy studying”:\n\n```javascript\nfunction Hobby(hobby){\n   this.hobby = hobby;\n}\nHobby.???.??? = function(){\n   console.log(\"I enjoy \" + this.hobby);\n}\n \nfunction MyHobby(hobby){\n   this.hobby = hobby;\n}\n   \n???.prototype = new Hobby();\nvar student = new MyHobby(\"studying\");\nstudent.sayHobby();\n```\n",
    "text": "prototype",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet to output “I enjoy studying”:\n\n```javascript\nfunction Hobby(hobby){\n   this.hobby = hobby;\n}\nHobby.???.??? = function(){\n   console.log(\"I enjoy \" + this.hobby);\n}\n \nfunction MyHobby(hobby){\n   this.hobby = hobby;\n}\n   \n???.prototype = new Hobby();\nvar student = new MyHobby(\"studying\");\nstudent.sayHobby();\n```\n",
    "text": "sayHobby",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet to output “I enjoy studying”:\n\n```javascript\nfunction Hobby(hobby){\n   this.hobby = hobby;\n}\nHobby.???.??? = function(){\n   console.log(\"I enjoy \" + this.hobby);\n}\n \nfunction MyHobby(hobby){\n   this.hobby = hobby;\n}\n   \n???.prototype = new Hobby();\nvar student = new MyHobby(\"studying\");\nstudent.sayHobby();\n```\n",
    "text": "MyHobby",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippet to output “I enjoy studying”:\n\n```javascript\nfunction Hobby(hobby){\n   this.hobby = hobby;\n}\nHobby.???.??? = function(){\n   console.log(\"I enjoy \" + this.hobby);\n}\n \nfunction MyHobby(hobby){\n   this.hobby = hobby;\n}\n   \n???.prototype = new Hobby();\nvar student = new MyHobby(\"studying\");\nstudent.sayHobby();\n```\n",
    "text": "studying",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to output “I enjoy studying”:\n\n```javascript\nfunction Hobby(hobby){\n   this.hobby = hobby;\n}\nHobby.???.??? = function(){\n   console.log(\"I enjoy \" + this.hobby);\n}\n \nfunction MyHobby(hobby){\n   this.hobby = hobby;\n}\n   \n???.prototype = new Hobby();\nvar student = new MyHobby(\"studying\");\nstudent.sayHobby();\n```\n",
    "text": "printHobby",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An object in JavaScript that can be inherited from is called ???.\n",
    "text": "prototype",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "An object in JavaScript that can be inherited from is called ???.\n",
    "text": "variable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An object in JavaScript that can be inherited from is called ???.\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return when ran? ???\n\n```javascript\nvar str = \"if(flag){2*8;} else{-2*8;}\";\nvar flag = false;\nvar b = eval(str);\n```\n",
    "text": "-16",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following JS code return when ran? ???\n\n```javascript\nvar str = \"if(flag){2*8;} else{-2*8;}\";\nvar flag = false;\nvar b = eval(str);\n```\n",
    "text": "16",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return when ran? ???\n\n```javascript\nvar str = \"if(flag){2*8;} else{-2*8;}\";\nvar flag = false;\nvar b = eval(str);\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return when ran? ???\n\n```javascript\nvar str = \"if(flag){2*8;} else{-2*8;}\";\nvar flag = false;\nvar b = eval(str);\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Evaluating javascript code passed as a string is done by ???\n",
    "text": "eval()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Evaluating javascript code passed as a string is done by ???\n",
    "text": "evil()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Evaluating javascript code passed as a string is done by ???\n",
    "text": "(string).toJS()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the correct method for outputting information to the console? ???\n",
    "text": "`console.log();`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is the correct method for outputting information to the console? ???\n",
    "text": "`console.write();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the correct method for outputting information to the console? ???\n",
    "text": "`console.print();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the correct method for outputting information to the console? ???\n",
    "text": "`console.println();`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`console`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`log`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`print`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`system`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`output`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`show`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Log a message in the `console`:\n\n```javascript\n???.???(\"my message\");\n```\n",
    "text": "`warn`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used in *JavaScript* for **single line** comments?\n\n???\n",
    "text": "//",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What syntax is used in *JavaScript* for **single line** comments?\n\n???\n",
    "text": "`/* */`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used in *JavaScript* for **single line** comments?\n\n???\n",
    "text": "`#`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following line of code **valid**?\n\n```javascript\nvar 777jackpot = \"jackpot\";\n// line is ???\n```\n",
    "text": "not valid",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following line of code **valid**?\n\n```javascript\nvar 777jackpot = \"jackpot\";\n// line is ???\n```\n",
    "text": "valid",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following is a valid comment?\n\n```javascript\n(1. // first comment\n(2. <!-- second comment\n(3. /* third comment */\n```\n\n ???\n",
    "text": "1, 2 & 3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "which of the following is a valid comment?\n\n```javascript\n(1. // first comment\n(2. <!-- second comment\n(3. /* third comment */\n```\n\n ???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following is a valid comment?\n\n```javascript\n(1. // first comment\n(2. <!-- second comment\n(3. /* third comment */\n```\n\n ???\n",
    "text": "1 & 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following is a valid comment?\n\n```javascript\n(1. // first comment\n(2. <!-- second comment\n(3. /* third comment */\n```\n\n ???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which scope are `var`s defined in?\n\n???\n",
    "text": "function",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which scope are `var`s defined in?\n\n???\n",
    "text": "global",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which scope are `var`s defined in?\n\n???\n",
    "text": "window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which scope are `var`s defined in?\n\n???\n",
    "text": "strict",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "var",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "variable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "const",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "int",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What operator is used to declare a variable in the *function scope*?\n\n```javascript\n??? answer = 42;\n```\n",
    "text": "double",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "`<script`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "src",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "enki.js",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": ">",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "`</script>`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "/>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "`<script />`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps in the following HTML snippet such that JavaScript code contained by an `enki.js` file will be ran via a script tag:\n\n```html\n??? ???=\"???\" ??? ???\n```\n",
    "text": "`<script>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "`<script>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "`</script>`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "`<script/>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "/>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "`<script`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing HTML tags to make the JavaScript code run directly on the web page.\n\n```html\n???\nconsole.log(\"enki\");\n???\n```\n",
    "text": "src=",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a server's backend be written in JavaScript?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can a server's backend be written in JavaScript?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a server's backend be written in JavaScript?\n\n???\n",
    "text": "depends on the operating system",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why was **JavaScript** originally developed?\n\n???\n",
    "text": "To add functionality to web pages",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Why was **JavaScript** originally developed?\n\n???\n",
    "text": "To create databases",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why was **JavaScript** originally developed?\n\n???\n",
    "text": "To enhance Java",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why was **JavaScript** originally developed?\n\n???\n",
    "text": "To replace HTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "68",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "-28",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "192",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "-68",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code output? ???\n\n```javascript\nvar a = 20;\nvar b = 4;\nvar c = 12;\n\nvar x = a - (-b * c);\nconsole.log(x);\n```\n",
    "text": "-192",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The processing of operations starts with ??? operator if no brackets are used.\n",
    "text": "left-most",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The processing of operations starts with ??? operator if no brackets are used.\n",
    "text": "right-most",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The processing of operations starts with ??? operator if no brackets are used.\n",
    "text": "middle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is **JavaScript** related to **Java**?\n\n???\n",
    "text": "They are not related",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How is **JavaScript** related to **Java**?\n\n???\n",
    "text": "JavaScript has its origins in Java",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is **JavaScript** related to **Java**?\n\n???\n",
    "text": "They are basically the same",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is **JavaScript** related to **Java**?\n\n???\n",
    "text": "Java has its origins in JavaScript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first version of JavaScript was developed by ??? in only 10 days.\n",
    "text": "Brendan Eich",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The first version of JavaScript was developed by ??? in only 10 days.\n",
    "text": "Bjarne Stroustrup",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first version of JavaScript was developed by ??? in only 10 days.\n",
    "text": "James Gosling",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first version of JavaScript was developed by ??? in only 10 days.\n",
    "text": "Linus Torvalds",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is EcmaScipt?\n\n???\n",
    "text": "a standard that drives JavaScript development",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is EcmaScipt?\n\n???\n",
    "text": "a JavaScript dialect",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is EcmaScipt?\n\n???\n",
    "text": "the same as JavaScript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is EcmaScipt?\n\n???\n",
    "text": "a JavaScript extension",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following came first ?\n\n???\n",
    "text": "JavaScript",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one of the following came first ?\n\n???\n",
    "text": "EcmaScript-262",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following came first ?\n\n???\n",
    "text": "EcmaScript 2016",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`use`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`strict`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`mode`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`str`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`let`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`var`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`strict-mode`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`enable`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you enable **strict mode** in EcmaScript 5?\n\n    \"??? ???\";\n",
    "text": "`on`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 1423 to base 2\n console.log((1423).toString(???));\n// convert \"ad23e1\" from base 16 to base 10\nconsole.log(???(\"ad23e1\",???));\n```\n",
    "text": "2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 1423 to base 2\n console.log((1423).toString(???));\n// convert \"ad23e1\" from base 16 to base 10\nconsole.log(???(\"ad23e1\",???));\n```\n",
    "text": "parseInt",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 1423 to base 2\n console.log((1423).toString(???));\n// convert \"ad23e1\" from base 16 to base 10\nconsole.log(???(\"ad23e1\",???));\n```\n",
    "text": "16",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 1423 to base 2\n console.log((1423).toString(???));\n// convert \"ad23e1\" from base 16 to base 10\nconsole.log(???(\"ad23e1\",???));\n```\n",
    "text": "10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 1423 to base 2\n console.log((1423).toString(???));\n// convert \"ad23e1\" from base 16 to base 10\nconsole.log(???(\"ad23e1\",???));\n```\n",
    "text": "”base 10”",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 132 to base 16\nconsole.log((132).toString(???));\n// convert \"ead2\" from base 15 to base 10\nconsole.log(???(\"ef2\",???));\n```\n",
    "text": "16",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 132 to base 16\nconsole.log((132).toString(???));\n// convert \"ead2\" from base 15 to base 10\nconsole.log(???(\"ef2\",???));\n```\n",
    "text": "parseInt",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 132 to base 16\nconsole.log((132).toString(???));\n// convert \"ead2\" from base 15 to base 10\nconsole.log(???(\"ef2\",???));\n```\n",
    "text": "15",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 132 to base 16\nconsole.log((132).toString(???));\n// convert \"ead2\" from base 15 to base 10\nconsole.log(???(\"ef2\",???));\n```\n",
    "text": "10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n// convert 132 to base 16\nconsole.log((132).toString(???));\n// convert \"ead2\" from base 15 to base 10\nconsole.log(???(\"ef2\",???));\n```\n",
    "text": "”base 10”",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The output of the following snippet is ???\n\n    console.log((1.3 + 2.3) == 3.6);\n",
    "text": "false",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The output of the following snippet is ???\n\n    console.log((1.3 + 2.3) == 3.6);\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Instead of comparing two floating numbers, the best way to avoid *inaccuracies* is to ??? the numbers and compare the result to ???.\n",
    "text": "substract",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Instead of comparing two floating numbers, the best way to avoid *inaccuracies* is to ??? the numbers and compare the result to ???.\n",
    "text": "third expected value",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Instead of comparing two floating numbers, the best way to avoid *inaccuracies* is to ??? the numbers and compare the result to ???.\n",
    "text": "sum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is 0.1 + 0.2?\n\nWhat will be the value of x?\n\n```javascript\nvar x = 0.2 + 0.1;\nconsole.log(x);\n```\n\n ???\n",
    "text": "0.30000000000000004",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "what is 0.1 + 0.2?\n\nWhat will be the value of x?\n\n```javascript\nvar x = 0.2 + 0.1;\nconsole.log(x);\n```\n\n ???\n",
    "text": "0.3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is 0.1 + 0.2?\n\nWhat will be the value of x?\n\n```javascript\nvar x = 0.2 + 0.1;\nconsole.log(x);\n```\n\n ???\n",
    "text": "0.2999999999999999",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what is 0.1 + 0.2?\n\nWhat will be the value of x?\n\n```javascript\nvar x = 0.2 + 0.1;\nconsole.log(x);\n```\n\n ???\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "Number",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "isNaN",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "isNotNaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "Math",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "validate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "check",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code to check if variable `z` is *not a number*.\n\n```javascript\nvar z = NaN\n???.???(z) // true\n```\n",
    "text": "is",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet outputs ???\n\n```javascript\nconsole.log(typeof NaN);\n```\n",
    "text": "number",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code snippet outputs ???\n\n```javascript\nconsole.log(typeof NaN);\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet outputs ???\n\n```javascript\nconsole.log(typeof NaN);\n```\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet outputs ???\n\n```javascript\nconsole.log(typeof NaN);\n```\n",
    "text": "Infinite",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "is NaN a number?\n\nWhat is the output of this line?\n\n```javascript\nconsole.log(typeof(NaN));\n```\n\n???\n",
    "text": "number",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "is NaN a number?\n\nWhat is the output of this line?\n\n```javascript\nconsole.log(typeof(NaN));\n```\n\n???\n",
    "text": "object",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "is NaN a number?\n\nWhat is the output of this line?\n\n```javascript\nconsole.log(typeof(NaN));\n```\n\n???\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "is NaN a number?\n\nWhat is the output of this line?\n\n```javascript\nconsole.log(typeof(NaN));\n```\n\n???\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following function call?\n\n```javascript\nconsole.log(parseInt(\"abc\",10));\n# ???\n```\n",
    "text": "`NaN`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the following function call?\n\n```javascript\nconsole.log(parseInt(\"abc\",10));\n# ???\n```\n",
    "text": "`Error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following function call?\n\n```javascript\nconsole.log(parseInt(\"abc\",10));\n# ???\n```\n",
    "text": "`10`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method would you use to parse the following string so that it doesn't return `NaN`:\n\n    ???(\"0.2\", 10);\n",
    "text": "`parseFloat`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method would you use to parse the following string so that it doesn't return `NaN`:\n\n    ???(\"0.2\", 10);\n",
    "text": "`parseInt`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method would you use to parse the following string so that it doesn't return `NaN`:\n\n    ???(\"0.2\", 10);\n",
    "text": "`parseString`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method would you use to parse the following string so that it doesn't return `NaN`:\n\n    ???(\"0.2\", 10);\n",
    "text": "`parseDouble`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar test = {\n  prop1: 1,\n  prop2: 2\n}\n// set prop1 to undefined\ntest.prop1 = ???;\n//remove prop2\n??? ;\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar test = {\n  prop1: 1,\n  prop2: 2\n}\n// set prop1 to undefined\ntest.prop1 = ???;\n//remove prop2\n??? ;\n```\n",
    "text": "delete test.prop2",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar test = {\n  prop1: 1,\n  prop2: 2\n}\n// set prop1 to undefined\ntest.prop1 = ???;\n//remove prop2\n??? ;\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n```javascript\nvar test = {\n  prop1: 1,\n  prop2: 2\n}\n// set prop1 to undefined\ntest.prop1 = ???;\n//remove prop2\n??? ;\n```\n",
    "text": "delete prop2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code snippet?\n\n```javascript\nvar obj = { one: 1 }\nobj.one = undefined;\nconsole.log(obj);\n// ???\n```\n",
    "text": "`{ one: undefined }`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following code snippet?\n\n```javascript\nvar obj = { one: 1 }\nobj.one = undefined;\nconsole.log(obj);\n// ???\n```\n",
    "text": "`{ one: null }`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code snippet?\n\n```javascript\nvar obj = { one: 1 }\nobj.one = undefined;\nconsole.log(obj);\n// ???\n```\n",
    "text": "`{ }`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return? ???\n\n```javascript\nenki = new Object();\nenki.practiceQuestion = 'true';\n\nfunction tricky() {\n   enki.newQuestion = enki.practiceQuestion;\n   delete enki.practiceQuestion;\n}\n\nenki.hasOwnProperty('practiceQuestion');\nenki.hasOwnProperty('magicPowers');\ntricky();\nenki.hasOwnProperty('practiceQuestion');\n```\n",
    "text": "True, False, False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following JS code return? ???\n\n```javascript\nenki = new Object();\nenki.practiceQuestion = 'true';\n\nfunction tricky() {\n   enki.newQuestion = enki.practiceQuestion;\n   delete enki.practiceQuestion;\n}\n\nenki.hasOwnProperty('practiceQuestion');\nenki.hasOwnProperty('magicPowers');\ntricky();\nenki.hasOwnProperty('practiceQuestion');\n```\n",
    "text": "True, False, True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return? ???\n\n```javascript\nenki = new Object();\nenki.practiceQuestion = 'true';\n\nfunction tricky() {\n   enki.newQuestion = enki.practiceQuestion;\n   delete enki.practiceQuestion;\n}\n\nenki.hasOwnProperty('practiceQuestion');\nenki.hasOwnProperty('magicPowers');\ntricky();\nenki.hasOwnProperty('practiceQuestion');\n```\n",
    "text": "True, True, False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code return? ???\n\n```javascript\nenki = new Object();\nenki.practiceQuestion = 'true';\n\nfunction tricky() {\n   enki.newQuestion = enki.practiceQuestion;\n   delete enki.practiceQuestion;\n}\n\nenki.hasOwnProperty('practiceQuestion');\nenki.hasOwnProperty('magicPowers');\ntricky();\nenki.hasOwnProperty('practiceQuestion');\n```\n",
    "text": "False, True, True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`obj.hasOwnProperty('prop')` returns false if\n\n ???\n",
    "text": "obj hasn’t got ‘prop’ as property",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`obj.hasOwnProperty('prop')` returns false if\n\n ???\n",
    "text": "obj has the property",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`obj.hasOwnProperty('prop')` returns false if\n\n ???\n",
    "text": "obj has the property and its value is null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When do you need to quote object properties names in older JavaScript engines?\n\n???\n",
    "text": "when the name is a special keyword",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When do you need to quote object properties names in older JavaScript engines?\n\n???\n",
    "text": "always",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When do you need to quote object properties names in older JavaScript engines?\n\n???\n",
    "text": "never",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When do you need to quote object properties names in older JavaScript engines?\n\n???\n",
    "text": "when the property type is \"string\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When do you need to quote object properties names in older JavaScript engines?\n\n???\n",
    "text": "only when the property name is \"delete\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "'typeof':",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "'beagle'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "typeof",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "type of",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "beagle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "'name'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "'typeof'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you rewrite the commented object property in order to avoid `Syntax Error` with old JS engines?\n\n```javascript\nvar dog = {\n  name: 'Max',\n  age: '5',\n  // typeof: 'beagle'\n  ??? ???\n}\n```\n",
    "text": "typeof:",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n    var car = {\n      model: \"AwsomeCar\",\n      color: \"blue\",\n      noDoors: 4\n    };\n    var test = \"model\";\n\nWould the following line print \"model\"?\n\n    console.log(car.test); // ???\n",
    "text": "no",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following object:\n\n    var car = {\n      model: \"AwsomeCar\",\n      color: \"blue\",\n      noDoors: 4\n    };\n    var test = \"model\";\n\nWould the following line print \"model\"?\n\n    console.log(car.test); // ???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line adds a new property to an object that looks like this:\n\n    var per = {\n      firstName = \"John\",\n      lastName = \"Smith\"\n    };\n    ???\n",
    "text": "`per.age = 40;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line adds a new property to an object that looks like this:\n\n    var per = {\n      firstName = \"John\",\n      lastName = \"Smith\"\n    };\n    ???\n",
    "text": "`var per.age = 40;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line adds a new property to an object that looks like this:\n\n    var per = {\n      firstName = \"John\",\n      lastName = \"Smith\"\n    };\n    ???\n",
    "text": "`per[age] = 40;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line adds a new property to an object that looks like this:\n\n    var per = {\n      firstName = \"John\",\n      lastName = \"Smith\"\n    };\n    ???\n",
    "text": "`per.addNewProperty(age,40);`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "Superhero",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "superpowers",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "greet",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "function",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "hello",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "console",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "log",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "Flash",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "superhero",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following constructor function such that the code below it works as intended:\n\n```javascript\nfunction ???(name) {\n  this.name = ???;\n  this.??? = {\n    ???: ???() {\n      console.log('Hello there')\n    }\n  }\n}\n\nconst flash = new Superhero('Flash')\nflash.superpowers.greet()\n// Hello there\n```\n",
    "text": "powers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can invoke an object's method by writing:\n\n???\n",
    "text": "ob.methodName();",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can invoke an object's method by writing:\n\n???\n",
    "text": "ob.methodName;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can invoke an object's method by writing:\n\n???\n",
    "text": "methodName(ob);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`#`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`random`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`toString`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`+`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`generate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`hex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`toHex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`stringHex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` colour:\n\n```javascript\n'???' + Math.???()\n            .???(16)\n            .substr(-6);\n```\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`Math`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`random`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`hex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`Number`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`int`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a random `hex` color:\n\n```javascript\n'#' + ???.???()\n         .toString(16)\n         .substr(-6);\n```\n",
    "text": "`Hex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nfunction currency(n) {\n   n = parseFloat(n);\n   return isNaN(n) ? \n         false : n.toFixed(3);\n}\nconsole.log(\n         currency('10.93719'));\n```\n",
    "text": "10.937",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nfunction currency(n) {\n   n = parseFloat(n);\n   return isNaN(n) ? \n         false : n.toFixed(3);\n}\nconsole.log(\n         currency('10.93719'));\n```\n",
    "text": "10.9372",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nfunction currency(n) {\n   n = parseFloat(n);\n   return isNaN(n) ? \n         false : n.toFixed(3);\n}\nconsole.log(\n         currency('10.93719'));\n```\n",
    "text": "10.938",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nfunction currency(n) {\n   n = parseFloat(n);\n   return isNaN(n) ? \n         false : n.toFixed(3);\n}\nconsole.log(\n         currency('10.93719'));\n```\n",
    "text": "10.9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nfunction currency(n) {\n   n = parseFloat(n);\n   return isNaN(n) ? \n         false : n.toFixed(3);\n}\nconsole.log(\n         currency('10.93719'));\n```\n",
    "text": "11",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this output?\n\n```javascript\nfunction currency(n){\n  n = parseFloat(n);\n  return isNaN(n) ? false : n.toFixed(2);\n}\nconsole.log(currency('1234.567'));\n\n???\n```\n",
    "text": "1234.57",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does this output?\n\n```javascript\nfunction currency(n){\n  n = parseFloat(n);\n  return isNaN(n) ? false : n.toFixed(2);\n}\nconsole.log(currency('1234.567'));\n\n???\n```\n",
    "text": "1234.56",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does this output?\n\n```javascript\nfunction currency(n){\n  n = parseFloat(n);\n  return isNaN(n) ? false : n.toFixed(2);\n}\nconsole.log(currency('1234.567'));\n\n???\n```\n",
    "text": "12",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`console.log((\"0044742323412\").slice(-3));`  \nOutputs ??? , while\n`console.log((32410000).slice(-5));`\n\noutputs ??? .\n",
    "text": "412",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`console.log((\"0044742323412\").slice(-3));`  \nOutputs ??? , while\n`console.log((32410000).slice(-5));`\n\noutputs ??? .\n",
    "text": "throws an error",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`console.log((\"0044742323412\").slice(-3));`  \nOutputs ??? , while\n`console.log((32410000).slice(-5));`\n\noutputs ??? .\n",
    "text": "10000",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`console.log((\"0044742323412\").slice(-3));`  \nOutputs ??? , while\n`console.log((32410000).slice(-5));`\n\noutputs ??? .\n",
    "text": "004",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`console.log((\"123\").slice(-4));` \n\n outputs ???\n",
    "text": "123",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`console.log((\"123\").slice(-4));` \n\n outputs ???\n",
    "text": "0123",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`console.log((\"123\").slice(-4));` \n\n outputs ???\n",
    "text": "0001",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n//convert the number to length 3\nconsole.log((12.4513).???(3);\n//convert the number to have length 3 \n//after the decimal point\nconsole.log((12.4513).???(3);\n```\n",
    "text": "toPrecision",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n//convert the number to length 3\nconsole.log((12.4513).???(3);\n//convert the number to have length 3 \n//after the decimal point\nconsole.log((12.4513).???(3);\n```\n",
    "text": "toFixed",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n//convert the number to length 3\nconsole.log((12.4513).???(3);\n//convert the number to have length 3 \n//after the decimal point\nconsole.log((12.4513).???(3);\n```\n",
    "text": "dec",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet:\n\n```javascript\n//convert the number to length 3\nconsole.log((12.4513).???(3);\n//convert the number to have length 3 \n//after the decimal point\nconsole.log((12.4513).???(3);\n```\n",
    "text": "length",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below as to get the result commented:\n\n```javascript\nvar pi = 3.141592;\nconsole.log(pi.???(2));\n// 3.14\n```\n",
    "text": "`toFixed`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below as to get the result commented:\n\n```javascript\nvar pi = 3.141592;\nconsole.log(pi.???(2));\n// 3.14\n```\n",
    "text": "`toPrecision`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the return value of the following line?\n\n```javascript\nMath.max.apply(null, [5,8,2]);\n// ???\n```\n",
    "text": "`8`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the return value of the following line?\n\n```javascript\nMath.max.apply(null, [5,8,2]);\n// ???\n```\n",
    "text": "`NaN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the return value of the following line?\n\n```javascript\nMath.max.apply(null, [5,8,2]);\n// ???\n```\n",
    "text": "`-Infinity`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the return value of the following line?\n\n```javascript\nMath.max.apply(null, [5,8,2]);\n// ???\n```\n",
    "text": "`5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "15",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "7",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "-1",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "0",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "-15",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "1.5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "7.1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "-2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet output?\n\n```javascript\nconsole.log(~~15); // ???\nconsole.log(~~\"7.08\"); // ???\nconsole.log(~~\"-1.92\"); // ???\nconsole.log(~~{}); // ???\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will output:\n\n```javascript\nconsole.log( ~~12.34 ); // ???\nconsole.log( ~~\"56.78\" ); // ???\nconsole.log( ~~\"Sunny\" ); // ???\n```\n",
    "text": "12",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code will output:\n\n```javascript\nconsole.log( ~~12.34 ); // ???\nconsole.log( ~~\"56.78\" ); // ???\nconsole.log( ~~\"Sunny\" ); // ???\n```\n",
    "text": "56",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The following code will output:\n\n```javascript\nconsole.log( ~~12.34 ); // ???\nconsole.log( ~~\"56.78\" ); // ???\nconsole.log( ~~\"Sunny\" ); // ???\n```\n",
    "text": "0",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The following code will output:\n\n```javascript\nconsole.log( ~~12.34 ); // ???\nconsole.log( ~~\"56.78\" ); // ???\nconsole.log( ~~\"Sunny\" ); // ???\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will output:\n\n```javascript\nconsole.log( ~~12.34 ); // ???\nconsole.log( ~~\"56.78\" ); // ???\nconsole.log( ~~\"Sunny\" ); // ???\n```\n",
    "text": "”56”",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the code in order for it to run without using `with` :\n\n```javascript\nvar a, x;\n  \n/* with (Math) { \n  x = random();\n  a = exp(x);\n} */\nx = ??? ;\na = ??? ;\n```\n",
    "text": "Math.random()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Change the code in order for it to run without using `with` :\n\n```javascript\nvar a, x;\n  \n/* with (Math) { \n  x = random();\n  a = exp(x);\n} */\nx = ??? ;\na = ??? ;\n```\n",
    "text": "Math.exp(x)",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Change the code in order for it to run without using `with` :\n\n```javascript\nvar a, x;\n  \n/* with (Math) { \n  x = random();\n  a = exp(x);\n} */\nx = ??? ;\na = ??? ;\n```\n",
    "text": "Math.exp()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the code in order for it to run without using `with` :\n\n```javascript\nvar a, x;\n  \n/* with (Math) { \n  x = random();\n  a = exp(x);\n} */\nx = ??? ;\na = ??? ;\n```\n",
    "text": "Math.random(x)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A downside of using `with` is that ???\n",
    "text": "you can make global variables by mistake.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A downside of using `with` is that ???\n",
    "text": "it shortens code.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A downside of using `with` is that ???\n",
    "text": "you don’t have to repeat object references.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "Date",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "2019",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "11",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "15",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "2018",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "12",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "13",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "14",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "date",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "D",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps to create a date on the 15 December 2019\n\n```javascript\nvar date = new ???(???, ???, ???)\nconsole.log(date)\n// Sun Dec 15 2019 00:00:00 GMT+0000 (GMT)\n```\n",
    "text": "DateTime",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code snippet print?\n\n```javascript\nvar date = new Date(2016, 1, 5);\nconsole.log(date);\n// Tue ??? ??? 2016\n// 00:00:00 GMT-700\n```\n",
    "text": "Feb",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following code snippet print?\n\n```javascript\nvar date = new Date(2016, 1, 5);\nconsole.log(date);\n// Tue ??? ??? 2016\n// 00:00:00 GMT-700\n```\n",
    "text": "5",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will the following code snippet print?\n\n```javascript\nvar date = new Date(2016, 1, 5);\nconsole.log(date);\n// Tue ??? ??? 2016\n// 00:00:00 GMT-700\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code snippet print?\n\n```javascript\nvar date = new Date(2016, 1, 5);\nconsole.log(date);\n// Tue ??? ??? 2016\n// 00:00:00 GMT-700\n```\n",
    "text": "Jan",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code snippet print?\n\n```javascript\nvar date = new Date(2016, 1, 5);\nconsole.log(date);\n// Tue ??? ??? 2016\n// 00:00:00 GMT-700\n```\n",
    "text": "Dec",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how does JavaScript's Date object work?\n\n```javascript\nconsole.log(new Date(2016, 5, 31));\n```\n\n???\n",
    "text": "July 1 2016",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "how does JavaScript's Date object work?\n\n```javascript\nconsole.log(new Date(2016, 5, 31));\n```\n\n???\n",
    "text": "June 31 2016",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how does JavaScript's Date object work?\n\n```javascript\nconsole.log(new Date(2016, 5, 31));\n```\n\n???\n",
    "text": "May 31 2016",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how does JavaScript's Date object work?\n\n```javascript\nconsole.log(new Date(2016, 5, 31));\n```\n\n???\n",
    "text": "June 1 2016",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`+`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`Date`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`=`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`typeof`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`milliseconds`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is missing from the following code snippet for getting the current time in milliseconds? \n\n```javascript\n???new ???();\n```\n",
    "text": "`mseconds`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the current time in milliseconds(since 1 Jan 1970):\n\n    var time = Date.???;\n",
    "text": "now();",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get the current time in milliseconds(since 1 Jan 1970):\n\n    var time = Date.???;\n",
    "text": "getMillis();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the current time in milliseconds(since 1 Jan 1970):\n\n    var time = Date.???;\n",
    "text": "getMilliseconds();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Make `hi` run every 2 seconds:\n\n```javascript\nfunction hi(){\n  alert(\"Hi!\");\n}\nvar loop = ???\n   .???(hi,???);\n```\n",
    "text": "window",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Make `hi` run every 2 seconds:\n\n```javascript\nfunction hi(){\n  alert(\"Hi!\");\n}\nvar loop = ???\n   .???(hi,???);\n```\n",
    "text": "setInterval",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Make `hi` run every 2 seconds:\n\n```javascript\nfunction hi(){\n  alert(\"Hi!\");\n}\nvar loop = ???\n   .???(hi,???);\n```\n",
    "text": "2000",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Make `hi` run every 2 seconds:\n\n```javascript\nfunction hi(){\n  alert(\"Hi!\");\n}\nvar loop = ???\n   .???(hi,???);\n```\n",
    "text": "200",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Make `hi` run every 2 seconds:\n\n```javascript\nfunction hi(){\n  alert(\"Hi!\");\n}\nvar loop = ???\n   .???(hi,???);\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "This code ??? run:\n\n```javascript\nfunction foo(){\n  var localVariable = 'lVar';\n  return function bar(){\n     return localVariable;\n  }\n}\nfoo()();\n```\n",
    "text": "will",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "This code ??? run:\n\n```javascript\nfunction foo(){\n  var localVariable = 'lVar';\n  return function bar(){\n     return localVariable;\n  }\n}\nfoo()();\n```\n",
    "text": "will not",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A *closure* is created when you ???.\n",
    "text": "nest a function inside another",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A *closure* is created when you ???.\n",
    "text": "declare a function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A *closure* is created when you ???.\n",
    "text": "call a function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will output ???\n\n```javascript\ns = \"enki\";\nconsole.log(s);\nvar s;\n```\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code will output ???\n\n```javascript\ns = \"enki\";\nconsole.log(s);\nvar s;\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code will output ???\n\n```javascript\ns = \"enki\";\nconsole.log(s);\nvar s;\n```\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nconsole.log(v);\nvar v = \"enki\";\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nconsole.log(v);\nvar v = \"enki\";\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nconsole.log(v);\nvar v = \"enki\";\n```\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following functions print? ???\n\n    var e = 1;\n    function run(){\n        console.log(e);\n        var e = 4;\n    }\n    run();\n\n    var c = 1;\n    function calc() {\n        console.log(c*c);\n        c = 4;\n    }\n    calc();\n",
    "text": "`run: undefined, calc: 1`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following functions print? ???\n\n    var e = 1;\n    function run(){\n        console.log(e);\n        var e = 4;\n    }\n    run();\n\n    var c = 1;\n    function calc() {\n        console.log(c*c);\n        c = 4;\n    }\n    calc();\n",
    "text": "`run: 1, calc: 1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following functions print? ???\n\n    var e = 1;\n    function run(){\n        console.log(e);\n        var e = 4;\n    }\n    run();\n\n    var c = 1;\n    function calc() {\n        console.log(c*c);\n        c = 4;\n    }\n    calc();\n",
    "text": "`run: 4, calc: 1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following functions print? ???\n\n    var e = 1;\n    function run(){\n        console.log(e);\n        var e = 4;\n    }\n    run();\n\n    var c = 1;\n    function calc() {\n        console.log(c*c);\n        c = 4;\n    }\n    calc();\n",
    "text": "`run: 4, calc: 4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following functions print? ???\n\n    var e = 1;\n    function run(){\n        console.log(e);\n        var e = 4;\n    }\n    run();\n\n    var c = 1;\n    function calc() {\n        console.log(c*c);\n        c = 4;\n    }\n    calc();\n",
    "text": "`run: undefined, calc: undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will this print\n\n```javascript\nvar a = 1;\nfunction go(){\n    console.log(a);\n    var a = 2;\n}\ngo();\n// ???\n```\n",
    "text": "`undefined`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will this print\n\n```javascript\nvar a = 1;\nfunction go(){\n    console.log(a);\n    var a = 2;\n}\ngo();\n// ???\n```\n",
    "text": "`1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will this print\n\n```javascript\nvar a = 1;\nfunction go(){\n    console.log(a);\n    var a = 2;\n}\ngo();\n// ???\n```\n",
    "text": "`2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet do?\n\n```javascript\nvar x = 'foo';\n(function bar() {\n {\n   var x = 5\n }\n console.log(x)\n})()\n```\n\n???\n",
    "text": "log 5",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet do?\n\n```javascript\nvar x = 'foo';\n(function bar() {\n {\n   var x = 5\n }\n console.log(x)\n})()\n```\n\n???\n",
    "text": "log 'foo'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet do?\n\n```javascript\nvar x = 'foo';\n(function bar() {\n {\n   var x = 5\n }\n console.log(x)\n})()\n```\n\n???\n",
    "text": "raise an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet do?\n\n```javascript\nvar x = 'foo';\n(function bar() {\n {\n   var x = 5\n }\n console.log(x)\n})()\n```\n\n???\n",
    "text": "can't be compiled",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the `alert()` method?\n\n```javascript\nvar a = 1;\nfunction bar() {\n  if(2 === 2) {\n    var a = 0;\n  }\n  alert(a); // ???\n}\n```\n",
    "text": "0",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the output of the `alert()` method?\n\n```javascript\nvar a = 1;\nfunction bar() {\n  if(2 === 2) {\n    var a = 0;\n  }\n  alert(a); // ???\n}\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the `alert()` method?\n\n```javascript\nvar a = 1;\nfunction bar() {\n  if(2 === 2) {\n    var a = 0;\n  }\n  alert(a); // ???\n}\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the `alert()` method?\n\n```javascript\nvar a = 1;\nfunction bar() {\n  if(2 === 2) {\n    var a = 0;\n  }\n  alert(a); // ???\n}\n```\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the `alert()` method?\n\n```javascript\nvar a = 1;\nfunction bar() {\n  if(2 === 2) {\n    var a = 0;\n  }\n  alert(a); // ???\n}\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assuming the scopes specified in the comments, does the snippet use **non-strict** or **strict** mode?\n\n```javascript\nfunction bar(foo){\n    foo = \"hello\"; // local scope\n    baz = \"world\"; // global scope\n}\n```\n\n???\n",
    "text": "`non-strict`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Assuming the scopes specified in the comments, does the snippet use **non-strict** or **strict** mode?\n\n```javascript\nfunction bar(foo){\n    foo = \"hello\"; // local scope\n    baz = \"world\"; // global scope\n}\n```\n\n???\n",
    "text": "`strict`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Non-strict mode allows the automate creation of a variable in ??? scope, while *strict mode* would throw an error if the ??? variable is not declared.\n",
    "text": "global",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Non-strict mode allows the automate creation of a variable in ??? scope, while *strict mode* would throw an error if the ??? variable is not declared.\n",
    "text": "local",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Non-strict mode allows the automate creation of a variable in ??? scope, while *strict mode* would throw an error if the ??? variable is not declared.\n",
    "text": "strict",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **hoisting** mean?\n\n???\n",
    "text": "Variable declarations are processed before code is executed",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does **hoisting** mean?\n\n???\n",
    "text": "You must first declare variables before methods",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **hoisting** mean?\n\n???\n",
    "text": "A general rule for **linters**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **hoisting** mean?\n\n???\n",
    "text": "You can have multiple variables with the same name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JSON standards require strings to be ??? quoted. However some modern linters recommend using ??? quotes only in JavaScript.\n",
    "text": "double",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "JSON standards require strings to be ??? quoted. However some modern linters recommend using ??? quotes only in JavaScript.\n",
    "text": "single",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "JSON standards require strings to be ??? quoted. However some modern linters recommend using ??? quotes only in JavaScript.\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "JSON standard requires every string to be ??? quoted.\n",
    "text": "double",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "JSON standard requires every string to be ??? quoted.\n",
    "text": "single",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`\\n`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`+`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`\"`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`\\`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`\\r`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special character is used to add a `new line` to strings?\n\n```javascript\nvar myString = 'this will ???\n       be displayed on two lines';\n```\n",
    "text": "`\\t`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is correct ?\n\n```javascript\nvar company = \"Enki\";\nvar company = 'Enki';\n```\n\n???\n",
    "text": "both",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one of the following is correct ?\n\n```javascript\nvar company = \"Enki\";\nvar company = 'Enki';\n```\n\n???\n",
    "text": "first",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is correct ?\n\n```javascript\nvar company = \"Enki\";\nvar company = 'Enki';\n```\n\n???\n",
    "text": "second",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is correct ?\n\n```javascript\nvar company = \"Enki\";\nvar company = 'Enki';\n```\n\n???\n",
    "text": "none",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "<=",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "+=",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "+",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "=+",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "<",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": ">",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "++",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "join",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "concat",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "/",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the `squares` string will contain, one after the other, the square value of all numbers from `1` to `10`:\n\n```javascript\nvar squares = '';\nfor (var i = 1; i ??? 10; i ++) {\n  squares ??? i*i ??? ' '\n}\nconsole.log(squares)\n// \"1 4 9 16 25 36 49 64 81 100 \"\n```\n",
    "text": "%",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the more efficient way to build `HTML` strings in modern browsers?\n\n```bash\n1) + (plus operator)\n2) join()\n3) concat()\n```\n\n???\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the more efficient way to build `HTML` strings in modern browsers?\n\n```bash\n1) + (plus operator)\n2) join()\n3) concat()\n```\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the more efficient way to build `HTML` strings in modern browsers?\n\n```bash\n1) + (plus operator)\n2) join()\n3) concat()\n```\n\n???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What standard is used in ES2015 for multi line string variables? ???\n",
    "text": "Backticks",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What standard is used in ES2015 for multi line string variables? ???\n",
    "text": "Single quotes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What standard is used in ES2015 for multi line string variables? ???\n",
    "text": "Double quotes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What standard is used in ES2015 for multi line string variables? ???\n",
    "text": "No quotes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The new standard for multi-lined string is using ??? .\n",
    "text": "backticks",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The new standard for multi-lined string is using ??? .\n",
    "text": "single quotes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The new standard for multi-lined string is using ??? .\n",
    "text": "double quote",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to replace `+` with `%2B`:\n\n```javascript\nvar s = 'x+y+z=w';\ns=s.replace(???,'%2B');\nconsole.log(s); // x%2By%2Bz=w\n```\n",
    "text": "`/\\+/g`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to replace `+` with `%2B`:\n\n```javascript\nvar s = 'x+y+z=w';\ns=s.replace(???,'%2B');\nconsole.log(s); // x%2By%2Bz=w\n```\n",
    "text": "`\\\\+/g`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to replace `+` with `%2B`:\n\n```javascript\nvar s = 'x+y+z=w';\ns=s.replace(???,'%2B');\nconsole.log(s); // x%2By%2Bz=w\n```\n",
    "text": "`\\+/g`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to replace `+` with `%2B`:\n\n```javascript\nvar s = 'x+y+z=w';\ns=s.replace(???,'%2B');\nconsole.log(s); // x%2By%2Bz=w\n```\n",
    "text": "`/\\+/`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? is used to replace one or more occurrences of a substring with another string.\n",
    "text": "String.replace()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "??? is used to replace one or more occurrences of a substring with another string.\n",
    "text": "String.map()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? is used to replace one or more occurrences of a substring with another string.\n",
    "text": "String.change()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? is used to replace one or more occurrences of a substring with another string.\n",
    "text": "String.delete()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet return? ???\n\n```javascript\nvar str = \"Practicing my RegExp with Enki!\";\n\nvar containsEnki = /Enki/i;\ncontainsEnki.test(str);\n\nvar containsRegExp = /Regular Expressions/i;\ncontainsRegExp.test(str);\n```\n",
    "text": "True, False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet return? ???\n\n```javascript\nvar str = \"Practicing my RegExp with Enki!\";\n\nvar containsEnki = /Enki/i;\ncontainsEnki.test(str);\n\nvar containsRegExp = /Regular Expressions/i;\ncontainsRegExp.test(str);\n```\n",
    "text": "True, True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet return? ???\n\n```javascript\nvar str = \"Practicing my RegExp with Enki!\";\n\nvar containsEnki = /Enki/i;\ncontainsEnki.test(str);\n\nvar containsRegExp = /Regular Expressions/i;\ncontainsRegExp.test(str);\n```\n",
    "text": "False, True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet return? ???\n\n```javascript\nvar str = \"Practicing my RegExp with Enki!\";\n\nvar containsEnki = /Enki/i;\ncontainsEnki.test(str);\n\nvar containsRegExp = /Regular Expressions/i;\ncontainsRegExp.test(str);\n```\n",
    "text": "False, False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Matching a string with a RegEx is done by \n\n???\n",
    "text": "regex.test(string);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Matching a string with a RegEx is done by \n\n???\n",
    "text": "regex.match(string);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Matching a string with a RegEx is done by \n\n???\n",
    "text": "regex.check(string);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nfunction foo(num){\n  return num/2;\n}\nconsole.log(foo(\"sum\"));\n```\n",
    "text": "NaN",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nfunction foo(num){\n  return num/2;\n}\nconsole.log(foo(\"sum\"));\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code outputs ???\n\n```javascript\nfunction foo(num){\n  return num/2;\n}\nconsole.log(foo(\"sum\"));\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will this print?\n\n```javascript\nvar x = 0/0;\nconsole.log(x);\n// ???\n```\n",
    "text": "`NaN`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will this print?\n\n```javascript\nvar x = 0/0;\nconsole.log(x);\n// ???\n```\n",
    "text": "`undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will this print?\n\n```javascript\nvar x = 0/0;\nconsole.log(x);\n// ???\n```\n",
    "text": "`null`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "a",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "true",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "var",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "b",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "3.14",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "\"3.14\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "\"true\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "const",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "number",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "boolean",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "'3.14'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "One the first line declare a **boolean** variable named `a` that's true.\nOn the second line declare a **number** variable named `b` with the value equal to `3.14`.\n\n```javascript\nvar ??? = ???\n??? ??? = ???\n```\n",
    "text": "'true'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is considered true?\n\n???\n",
    "text": "The number type in JavaScript support both whole and decimal numbers",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is considered true?\n\n???\n",
    "text": "Boolean type has three options",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is considered true?\n\n???\n",
    "text": "You need the `Math` object to add numbers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is considered true?\n\n???\n",
    "text": "Boolean types use **Upper case**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you change a variable's type in JavaScript?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you change a variable's type in JavaScript?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you change a variable's type in JavaScript?\n\n???\n",
    "text": "only if you declare it again",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is **not** a primitive type:\n\n???\n",
    "text": "RegExp",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one of the following is **not** a primitive type:\n\n???\n",
    "text": "Symbol",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is **not** a primitive type:\n\n???\n",
    "text": "String",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following is **not** a primitive type:\n\n???\n",
    "text": "Number",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Not initializing a variable sets its value to ???.\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Not initializing a variable sets its value to ???.\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Not initializing a variable sets its value to ???.\n",
    "text": "the default one",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following statement evaluate to?\n\n    undefined == null\n    // ???\n",
    "text": "true",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following statement evaluate to?\n\n    undefined == null\n    // ???\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`false false true`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`false true false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`true false true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`true false false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`true true true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following code?\n\n```javascript\nconsole.log(\"\" == \"0\")\nconsole.log(\"\" === \"0\")\nconsole.log(\" \\t\\r\\n\" == 0)\n// ???\n```\n",
    "text": "`false true true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code output?\n\n```javascript\nconsole.log(0 == \"\");\nconsole.log(\"\\n\" == 0);\n// ???\n```\n",
    "text": "`true true`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following code output?\n\n```javascript\nconsole.log(0 == \"\");\nconsole.log(\"\\n\" == 0);\n// ???\n```\n",
    "text": "`true false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code output?\n\n```javascript\nconsole.log(0 == \"\");\nconsole.log(\"\\n\" == 0);\n// ???\n```\n",
    "text": "`false true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code output?\n\n```javascript\nconsole.log(0 == \"\");\nconsole.log(\"\\n\" == 0);\n// ???\n```\n",
    "text": "`false false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following return? ???\n\n```javascript\ntypeof new Date();\n```\n",
    "text": "An object",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following return? ???\n\n```javascript\ntypeof new Date();\n```\n",
    "text": "Null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following return? ???\n\n```javascript\ntypeof new Date();\n```\n",
    "text": "A date",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following return? ???\n\n```javascript\ntypeof new Date();\n```\n",
    "text": "Undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`typeof(new Array())`  returns ??? and nothing more specific.\n",
    "text": "object",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`typeof(new Array())`  returns ??? and nothing more specific.\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`typeof(new Array())`  returns ??? and nothing more specific.\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`typeof(new Array())`  returns ??? and nothing more specific.\n",
    "text": "Array()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet evaluate to?\n\n```javascript\nnull == undefined\n// ???\n```\n",
    "text": "false",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet evaluate to?\n\n```javascript\nnull == undefined\n// ???\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet evaluate to?\n\n```javascript\nnull == undefined\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet evaluate to?\n\n```javascript\nnull == false\n// ???\n```\n",
    "text": "false",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet evaluate to?\n\n```javascript\nnull == false\n// ???\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A null object is ???.\n",
    "text": "falsy",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A null object is ???.\n",
    "text": "truthy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A null object is ???.\n",
    "text": "neither falsy nor truthy.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An empty string is ???.\n",
    "text": "falsy",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "An empty string is ???.\n",
    "text": "truthy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An empty string is ???.\n",
    "text": "neither falsy nor truthy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "2",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "3",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "7",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['7','3','4','5','6','7']`\n\n```javascript\nlet ints = ['1','2','3','4','5','6','7'];\nints.copyWithin(???,???,???)\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "2",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "3",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "7",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code example to create an array that looks like this:\n`['1','2','1','2','5','6']`\n\n    let ints = ['1','2','3','4','5','6'];\n    ints.copyWithin(???,???,???)\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code do?\n\n```javascript\nvar enki = [\"e\", \"n\", \"k\", \"i\"]\n\nvar enkiIterator = enki.keys()\n\nconsole.log(enki[enkiIterator.next().value])\n// ???\n```\n",
    "text": "log e",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following code do?\n\n```javascript\nvar enki = [\"e\", \"n\", \"k\", \"i\"]\n\nvar enkiIterator = enki.keys()\n\nconsole.log(enki[enkiIterator.next().value])\n// ???\n```\n",
    "text": "log en",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code do?\n\n```javascript\nvar enki = [\"e\", \"n\", \"k\", \"i\"]\n\nvar enkiIterator = enki.keys()\n\nconsole.log(enki[enkiIterator.next().value])\n// ???\n```\n",
    "text": "raise an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following code do?\n\n```javascript\nvar enki = [\"e\", \"n\", \"k\", \"i\"]\n\nvar enkiIterator = enki.keys()\n\nconsole.log(enki[enkiIterator.next().value])\n// ???\n```\n",
    "text": "log undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "entries",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "next",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "value",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "1",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "second",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "[1, 1]",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "[1, 4]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "[0, 1]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "first",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "keys",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "iterator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "toIterator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "key",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that an iterator will be created from the given array and the code won't raise any errors. The last gap should be completed with the right output of the expression above:\n\n```javascript\nvar arr = [3, 1, 4]\n\nvar arrIt = arr.???()\n\nvar first = arrIt.???()\nconsole.log(first.value[0])\n// 0\nconsole.log(first.???[???])\n// 3\nvar second = arrIt.next()\nconsole.log(???.value)\n// ???\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`find`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`findIndex`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`fill`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`includes`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`filter`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`function (e) {return e % 4}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`function (e) {return e = 4}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Find the first number divisible by `4`:\n\n    let ints = ['6','2','5','6','5','8'];\n    ints.???(???)\n",
    "text": "`function (e) {return e == 4}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`find`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`findIndex`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`fill`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`includes`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`filter`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the array with the first number divisible by `2` and `3`:\n\n    let ints = []'2','5','4','5','6','5','8'];\n    ints.???(ints.???(???))\n",
    "text": "`function (e) {return e % 2 && e % 3}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "class",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "Rectangle",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "constructor",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "this",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "width",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "this.length",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "new",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "super",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "this.width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "myClass",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "new Class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "inherit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "inheritance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the class definition below such that the log statements at the end of the snippet hold true.\n\n```javascript\n??? ??? {\n  ???(width, length) {\n    ???.width = ???\n    ??? = length\n  }\n}\n\nconst myRec = ??? Rectangle(20, 30)\nconsole.log(myRec.width)\n// 20\nconsole.log(myRec.length)\n// 30\n```\n",
    "text": "data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you assign a variable passed to the constructor to a class?\n\n```javascript\nclass Sphere() {\n  constructor(radius) {\n    ??? = 4 / 3 * Math.PI *\n      Math.pow(radius, 3)\n  }\n}\n```\n",
    "text": "this.volume",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you assign a variable passed to the constructor to a class?\n\n```javascript\nclass Sphere() {\n  constructor(radius) {\n    ??? = 4 / 3 * Math.PI *\n      Math.pow(radius, 3)\n  }\n}\n```\n",
    "text": "const volume",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you assign a variable passed to the constructor to a class?\n\n```javascript\nclass Sphere() {\n  constructor(radius) {\n    ??? = 4 / 3 * Math.PI *\n      Math.pow(radius, 3)\n  }\n}\n```\n",
    "text": "let volume",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the class:\n\n```javascript\nclass Utils {\n  static NotFound404() {\n    return new Error({\n      statusCode: 404,\n      message: 'not found'\n    })\n  }\n}\n```\n\nWhich of the following method calls do you think is correct?\n\n```javascript\nthrow Utils.NotFound404() //1\nthrow (new Utils()).NotFound404() // 2\nthrow new Utils().NotFound404() // 3\nthrow Utils().NotFound404() // 4\n```\n\n???\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Given the class:\n\n```javascript\nclass Utils {\n  static NotFound404() {\n    return new Error({\n      statusCode: 404,\n      message: 'not found'\n    })\n  }\n}\n```\n\nWhich of the following method calls do you think is correct?\n\n```javascript\nthrow Utils.NotFound404() //1\nthrow (new Utils()).NotFound404() // 2\nthrow new Utils().NotFound404() // 3\nthrow Utils().NotFound404() // 4\n```\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the class:\n\n```javascript\nclass Utils {\n  static NotFound404() {\n    return new Error({\n      statusCode: 404,\n      message: 'not found'\n    })\n  }\n}\n```\n\nWhich of the following method calls do you think is correct?\n\n```javascript\nthrow Utils.NotFound404() //1\nthrow (new Utils()).NotFound404() // 2\nthrow new Utils().NotFound404() // 3\nthrow Utils().NotFound404() // 4\n```\n\n???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the class:\n\n```javascript\nclass Utils {\n  static NotFound404() {\n    return new Error({\n      statusCode: 404,\n      message: 'not found'\n    })\n  }\n}\n```\n\nWhich of the following method calls do you think is correct?\n\n```javascript\nthrow Utils.NotFound404() //1\nthrow (new Utils()).NotFound404() // 2\nthrow new Utils().NotFound404() // 3\nthrow Utils().NotFound404() // 4\n```\n\n???\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "class",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "Dog",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "extends",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "Animal",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "constructor",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "super",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "static",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "bark()",
    "correct": true,
    "correctIndex": 7
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "barks",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "bark(name)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "bark:",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "extend",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "Bark",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "super()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "parent",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following ES6 class:\n\n```javascript\nclass Animal {\n  constructor(name) {\n    this.name = name\n  }\n}\n```\n\nFill in the next snippet such that the `Dog` class is a child of the `Animal` class. In addition, this class should call its parent's constructor, given the same arguments and have a static method `bark` which will print \"Woof woof\".\n\n```javascript\n??? ??? ??? ???{\n  ???(name) {\n    ???(name)\n  }\n\n  ??? ??? {\n    console.log(\"Woof Woof\")\n  }\n}\n```\n",
    "text": "childOf",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "export",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "module.exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "exports.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "expose",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you expose a method in a ES6 module file?\n\n```javascript\n// myModule.js\n\nexport function myFunc() {\n  // function code here\n}\n\n??? myFunc\n```\n",
    "text": "import",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "import",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "as",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "from",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "like",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "imports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "export",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing keywords in the canonic ES6 module import syntax:\n\n```javascript\n??? module ???\n  moduleRename ??? 'path';\n```\n",
    "text": "exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "export",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "{ add",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "subtract }",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "import",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "as",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "as subtractTwo",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "from",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "subtract",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "modules.exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "{",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first snippet below represents the module file that should export two functions. The second represents the file in which the module functions are imported.\n\nFill in the gaps on both snippets such that the log statements hold true:\n\nUtilities module:\n\n```javascript\n// utils.js\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction subtract(x, y) {\n  return x - y;\n}\n\n??? ???, ???;\n```\n\nMain file:\n\n```javascript\n??? {\n  add ??? addTwo,\n  subtract ???\n} ??? 'utils'\n\nconsole.log(addTwo(2, 4))\n// 6\nconsole.log(subtractTwo(5, 3))\n// 2\n```\n",
    "text": "path",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "export",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "default",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "import",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "as",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "from",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "exposes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "default export",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "module.exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "export.log",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "path",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` file is exported properly and can be imported as shown:\n\nModule file:\n\n```javascript\n// logger.js\n??? ??? function log() {\n  console.log('My log')\n}\n```\n\nMain file:\n\n```javascript\n??? log ??? simpleLog\n  ??? 'logger'\n```\n",
    "text": "rename",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": ", b",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "[b, a]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "[, a]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "b",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": ", a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "[a]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "[b]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": "[a, b]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Swap `a` and `b` using ES6 destructuring:\n\n```javascript\nlet a = 'foo'\nlet b = 'bar'\n\n[a ???] = ???\nconsole.log(a) // bar\nconsole.log(b) // foo\n```\n",
    "text": ",",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "9",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "16",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "[9, 16]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "[16, 25]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "[9, 25]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "25",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements:\n\n```javascript\nfunction squareNums(nums) {\n  return nums.map(function(num) {\n    return num * num\n  })\n}\n\nconst [a, b] = squareNums([3, 4, 5])\nconsole.log(a)\n// ???\nconsole.log(b)\n// ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "'b'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "c",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "b",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "obj",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `a` at the end of the code execution?\n\n```javascript\nconst obj = {\n  a: 'b'\n}\n\nconst {a: b, c = 'a'} = obj\n// a = ???\n```\n",
    "text": "'a'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "a",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": ":",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "foo",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "bar",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "=",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "20",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "as",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": "==",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": ": foo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": ": bar",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the destructuring assignment such that the log statements are correct:\n\n```javascript\nconst obj = {\n  a: 3\n}\n\nconst {??? ??? ???,\n  ??? ??? ??? } = obj;\nconsole.log(foo)\n// 3\nconsole.log(bar)\n// 20\n```\n",
    "text": ": 20",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": "x,",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": ",",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": ",z",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": "x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": "y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": ",y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": "y,",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the variables will have the commented value:\n\n```javascript\nlet x, y, z;\n[??? ??? ???] = [5, 10, 15]\n// x == 5\nconsole.log(y)\n// y == undefined\nconsole.log(z)\n// z == 15\n```\n",
    "text": "z",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "10",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "30",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "20",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[20]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[10, 30]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[10, 20]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[20, 30]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[10, 20, 30]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[10]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the value of `x`, `y` and `z`?\n\n```javascript\nlet x, y, z;\n[x, ,z] = [10, 20, 30];\n// x = ???\n// y = ???\n// z = ???\n```\n",
    "text": "[30]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "x",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "\"y\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "\"x\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "3.14",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "Object",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nenki[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "{}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "x",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "\"y\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "\"x\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "3.14",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "Object",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nvar x = 3.14;\nvar enki = new Object();\nenki.x = x;\nekni[x + \"y\"] = 2;\n```\n\nConvert the code snippet above using the extended **ES6** object literal syntax:\n\n```javascript\nvar x = 3.14;\nvar enki  = {\n  x: ???,\n  [x + ???]: 2\n}\n```\n",
    "text": "{}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "var",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "=>",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "{}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": "=",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Give the equivalent using **ES6 Arrow Functions**:\n\n    // with ES5\n    var evens = odds.map(\n        function(n){return n + 1}\n      );\n\n    // with ES6\n    ??? evens = odds.map(n ??? n + 1);\n",
    "text": ">",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet return? ???\n\n```javascript\nconsole.log(Number.isFinite(Infinity));\nconsole.log(Number.isFinite(0.01));\nconsole.log((Number.isFinite('Enki!')));\n```\n",
    "text": "False, True, False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following JS code snippet return? ???\n\n```javascript\nconsole.log(Number.isFinite(Infinity));\nconsole.log(Number.isFinite(0.01));\nconsole.log((Number.isFinite('Enki!')));\n```\n",
    "text": "True, True, False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet return? ???\n\n```javascript\nconsole.log(Number.isFinite(Infinity));\nconsole.log(Number.isFinite(0.01));\nconsole.log((Number.isFinite('Enki!')));\n```\n",
    "text": "False, False, True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following JS code snippet return? ???\n\n```javascript\nconsole.log(Number.isFinite(Infinity));\nconsole.log(Number.isFinite(0.01));\nconsole.log((Number.isFinite('Enki!')));\n```\n",
    "text": "True, False, False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if a number is a **safe** integer using `Number`:\n\n???\n",
    "text": "isSafeInteger(number)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Check if a number is a **safe** integer using `Number`:\n\n???\n",
    "text": "isInteger(number)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Check if a number is a **safe** integer using `Number`:\n\n???\n",
    "text": "isFinite()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following JS code snippet? ???\n\n```javascript\nfunction* genFunc() {\n  yield 'E';\n  yield 'C';\n  yield 'M';\n  yield 'A';\n}\n\nlet genObj = genFunc();\ngenObj.next();\ngenObj.next();\nconsole.log(genObj.next().value);\n```\n",
    "text": "M",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the output of the following JS code snippet? ???\n\n```javascript\nfunction* genFunc() {\n  yield 'E';\n  yield 'C';\n  yield 'M';\n  yield 'A';\n}\n\nlet genObj = genFunc();\ngenObj.next();\ngenObj.next();\nconsole.log(genObj.next().value);\n```\n",
    "text": "A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following JS code snippet? ???\n\n```javascript\nfunction* genFunc() {\n  yield 'E';\n  yield 'C';\n  yield 'M';\n  yield 'A';\n}\n\nlet genObj = genFunc();\ngenObj.next();\ngenObj.next();\nconsole.log(genObj.next().value);\n```\n",
    "text": "E",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following JS code snippet? ???\n\n```javascript\nfunction* genFunc() {\n  yield 'E';\n  yield 'C';\n  yield 'M';\n  yield 'A';\n}\n\nlet genObj = genFunc();\ngenObj.next();\ngenObj.next();\nconsole.log(genObj.next().value);\n```\n",
    "text": "C",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following JS code snippet? ???\n\n```javascript\nfunction* genFunc() {\n  yield 'E';\n  yield 'C';\n  yield 'M';\n  yield 'A';\n}\n\nlet genObj = genFunc();\ngenObj.next();\ngenObj.next();\nconsole.log(genObj.next().value);\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nfunction* genFunc() {\n  yield 'a';\n  yield 'b';\n}\n\nlet genObj = genFunc();\ngenObj.next();\nconsole.log(genObj.next().value);\n// ???\n```\n",
    "text": "b",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nfunction* genFunc() {\n  yield 'a';\n  yield 'b';\n}\n\nlet genObj = genFunc();\ngenObj.next();\nconsole.log(genObj.next().value);\n// ???\n```\n",
    "text": "a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nfunction* genFunc() {\n  yield 'a';\n  yield 'b';\n}\n\nlet genObj = genFunc();\ngenObj.next();\nconsole.log(genObj.next().value);\n// ???\n```\n",
    "text": "undefine",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is used to send a value? ???\n",
    "text": "next",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is used to send a value? ???\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is used to send a value? ???\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is used to send a value? ???\n",
    "text": "yield",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will terminate a generator?\n\n???\n",
    "text": "return",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What statement will terminate a generator?\n\n???\n",
    "text": "yield",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will terminate a generator?\n\n???\n",
    "text": "next",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement will terminate a generator?\n\n???\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "function*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "generator",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "func",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "newgenerator`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a generator using generator function declaration:\n\n    ??? generator() { ··· } \n    let genObj = ???(); \n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "yield",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "next()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "pause",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "stop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "getFunc()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax is used to pause and resume a *generator function* ?\n\n???\n",
    "text": "*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "import",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "from",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "to",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "export",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "default",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `enki` class in another file :\n\n```javascript\n??? Enki ??? 'enki';\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction enki(){\n  let i = 3.14;\n  if (1 === 1){\n    let i = 10;\n  }\n  return i;\n}\n```\n\nWhat is the output?\n\n```javascript\nconsole.log(enki());\n// ???\n```\n",
    "text": "3.14",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction enki(){\n  let i = 3.14;\n  if (1 === 1){\n    let i = 10;\n  }\n  return i;\n}\n```\n\nWhat is the output?\n\n```javascript\nconsole.log(enki());\n// ???\n```\n",
    "text": "10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction enki(){\n  let i = 3.14;\n  if (1 === 1){\n    let i = 10;\n  }\n  return i;\n}\n```\n\nWhat is the output?\n\n```javascript\nconsole.log(enki());\n// ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`const` can be used to create ??? variables, whereas `let` can be used to create ??? variables. `const` and `let` can be used to create ???-scoped variables.\n",
    "text": "immutable",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`const` can be used to create ??? variables, whereas `let` can be used to create ??? variables. `const` and `let` can be used to create ???-scoped variables.\n",
    "text": "mutable",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`const` can be used to create ??? variables, whereas `let` can be used to create ??? variables. `const` and `let` can be used to create ???-scoped variables.\n",
    "text": "block",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What must be used to create a **constant, immutable** variable?\n\n???\n",
    "text": "const",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What must be used to create a **constant, immutable** variable?\n\n???\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What must be used to create a **constant, immutable** variable?\n\n???\n",
    "text": "let",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "let",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "add",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "has",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "addItem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "hasItem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to create a set, to add 'question' and to check whether the set consists of 'question':\n\n```javascript\n??? set = new Set();\nset.???('Question');\nset.???('Question');\n```\n",
    "text": "holds",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are **Sets** and **Maps** iterable?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Are **Sets** and **Maps** iterable?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "import",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "index",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "export",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "JS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "include",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the `foo` function from `index.js`:\n\n```javascript\n??? { foo } from '???';\n```\n",
    "text": "log",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "export",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "default",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "function",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "import",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "from",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "fn",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Export the `enki` function as default:\n\n```javascript\n??? ??? ??? enki() {\n  console.log('enki');\n}\n```\n",
    "text": "module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code return?\n\n    Math.sign(Infinity);\n    // ???\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following line of code return?\n\n    Math.sign(Infinity);\n    // ???\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code return?\n\n    Math.sign(Infinity);\n    // ???\n",
    "text": "-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code return?\n\n    Math.sign(Infinity);\n    // ???\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code return?\n\n    Math.sign(Infinity);\n    // ???\n",
    "text": "Math error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "-8",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "-2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "-9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation:\n\n```javascript\nMath.trunc(-8.2);\n```\n\n???\n",
    "text": "9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "revoke",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "revocable",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "switchoff",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "switch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "switchable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "turn_off",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a proxy which can be switched off:\n\n    let {proxy, ???} = \n        Proxy.???(target, handler);\n",
    "text": "end",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "handler & target",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "target & host",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "host & handler",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "name & proxy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "proxy & function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two parameters does proxies have?\n\n???\n",
    "text": "request & target",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following logs?\n\n```javascript\nvar handler = {\n  get: (target, name) =>\n    name in target ? target[name] : -4\n};\n\nvar obj = new Proxy({}, handler);\nobj.a = 5;\n\nconsole.log(obj.a) // ???\nconsole.log(obj.enki) // ???\n```\n",
    "text": "5",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following logs?\n\n```javascript\nvar handler = {\n  get: (target, name) =>\n    name in target ? target[name] : -4\n};\n\nvar obj = new Proxy({}, handler);\nobj.a = 5;\n\nconsole.log(obj.a) // ???\nconsole.log(obj.enki) // ???\n```\n",
    "text": "-4",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is the output of the following logs?\n\n```javascript\nvar handler = {\n  get: (target, name) =>\n    name in target ? target[name] : -4\n};\n\nvar obj = new Proxy({}, handler);\nobj.a = 5;\n\nconsole.log(obj.a) // ???\nconsole.log(obj.enki) // ???\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following logs?\n\n```javascript\nvar handler = {\n  get: (target, name) =>\n    name in target ? target[name] : -4\n};\n\nvar obj = new Proxy({}, handler);\nobj.a = 5;\n\nconsole.log(obj.a) // ???\nconsole.log(obj.enki) // ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following logs?\n\n```javascript\nvar handler = {\n  get: (target, name) =>\n    name in target ? target[name] : -4\n};\n\nvar obj = new Proxy({}, handler);\nobj.a = 5;\n\nconsole.log(obj.a) // ???\nconsole.log(obj.enki) // ???\n```\n",
    "text": "-Infinity",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that the function can have more than 3 parameters passed to it:\n\n```javascript\nfunction(a, b, c, ???) {\n  // function code\n}\n```\n",
    "text": "...rest",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet so that the function can have more than 3 parameters passed to it:\n\n```javascript\nfunction(a, b, c, ???) {\n  // function code\n}\n```\n",
    "text": "rest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that the function can have more than 3 parameters passed to it:\n\n```javascript\nfunction(a, b, c, ???) {\n  // function code\n}\n```\n",
    "text": "..rest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that the function can have more than 3 parameters passed to it:\n\n```javascript\nfunction(a, b, c, ???) {\n  // function code\n}\n```\n",
    "text": "__rest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that the function can have more than 3 parameters passed to it:\n\n```javascript\nfunction(a, b, c, ???) {\n  // function code\n}\n```\n",
    "text": "___rest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Store all parameters under `rest` in the function:\n\n```javascript\nfunction(??????) {\n\n}\n```\n",
    "text": "...",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Store all parameters under `rest` in the function:\n\n```javascript\nfunction(??????) {\n\n}\n```\n",
    "text": "rest",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Store all parameters under `rest` in the function:\n\n```javascript\nfunction(??????) {\n\n}\n```\n",
    "text": "param",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Store all parameters under `rest` in the function:\n\n```javascript\nfunction(??????) {\n\n}\n```\n",
    "text": "..",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Store all parameters under `rest` in the function:\n\n```javascript\nfunction(??????) {\n\n}\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nlet first = `Questions`;\nlet last = `Practice`;\n\nconsole.log(`Time for ${last} ${first}!`);\n```\n",
    "text": "Time for Practice Questions!",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nlet first = `Questions`;\nlet last = `Practice`;\n\nconsole.log(`Time for ${last} ${first}!`);\n```\n",
    "text": "Time for Questions Practice!",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nlet first = `Questions`;\nlet last = `Practice`;\n\nconsole.log(`Time for ${last} ${first}!`);\n```\n",
    "text": "Time for ${last} ${first}!",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet output? ???\n\n```javascript\nlet first = `Questions`;\nlet last = `Practice`;\n\nconsole.log(`Time for ${last} ${first}!`);\n```\n",
    "text": "Time for !",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of this:\n\n```javascript\n`Enki`.includes(`nk`)\n// ???\n```\n",
    "text": "true",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the result of this:\n\n```javascript\n`Enki`.includes(`nk`)\n// ???\n```\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of this:\n\n```javascript\n`Enki`.includes(`nk`)\n// ???\n```\n",
    "text": "(2,3)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of this:\n\n```javascript\n`Enki`.includes(`nk`)\n// ???\n```\n",
    "text": "(1,2)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "Symbol",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "foo",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "key",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "symbol",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "property",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "sym",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet where symbols are used as unique property keys: \n\n```javascript\nconst key = ???(); \nlet foo = {};\n???[???] = 'Enki';\n```\n",
    "text": "a_key",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a symbol with `enki` description:\n\n```javascript\nlet sym = ???(???);\n```\n",
    "text": "Symbol",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a symbol with `enki` description:\n\n```javascript\nlet sym = ???(???);\n```\n",
    "text": "\"enki\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a symbol with `enki` description:\n\n```javascript\nlet sym = ???(???);\n```\n",
    "text": "Sym",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a symbol with `enki` description:\n\n```javascript\nlet sym = ???(???);\n```\n",
    "text": "Object",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a symbol with `enki` description:\n\n```javascript\nlet sym = ???(???);\n```\n",
    "text": "property",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "$",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "pr",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "£",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "fn",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet using template strings:\n\n    function pr() {\n       return \"to practice my\";\n    } \n\n    console.log('Time ???{???()} Python!'); \n    // Time to practice my Python!\n",
    "text": "func",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "$",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "a",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "template",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "%",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "(",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "{",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": ")",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using string templating print the value of `a`:\n\n```javascript\nvar a = 'enki';\nconsole.log(`cool thing -> ???{???} `);\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "for",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "let",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "of",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "in",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "while",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax of `for-of` loop in **ES6**:\n\n```javascript\n??? (??? x ??? iterable) {\n  x = x + 2;\n  console.log(x);\n}\n```\n",
    "text": "const",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the * ES6 * code snippet below to make it equivalent to the ES5 code snippet just above it:\n\n    // ES5\n    console.log.apply(console, [1, 2, 3, 4, 5])\n\n    // ES6\n    console.log(1, ???[2, 3, 4], 5)\n",
    "text": "...",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the * ES6 * code snippet below to make it equivalent to the ES5 code snippet just above it:\n\n    // ES5\n    console.log.apply(console, [1, 2, 3, 4, 5])\n\n    // ES6\n    console.log(1, ???[2, 3, 4], 5)\n",
    "text": "spread",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the * ES6 * code snippet below to make it equivalent to the ES5 code snippet just above it:\n\n    // ES5\n    console.log.apply(console, [1, 2, 3, 4, 5])\n\n    // ES6\n    console.log(1, ???[2, 3, 4], 5)\n",
    "text": "...spread",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the * ES6 * code snippet below to make it equivalent to the ES5 code snippet just above it:\n\n    // ES5\n    console.log.apply(console, [1, 2, 3, 4, 5])\n\n    // ES6\n    console.log(1, ???[2, 3, 4], 5)\n",
    "text": "-spread",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the * ES6 * code snippet below to make it equivalent to the ES5 code snippet just above it:\n\n    // ES5\n    console.log.apply(console, [1, 2, 3, 4, 5])\n\n    // ES6\n    console.log(1, ???[2, 3, 4], 5)\n",
    "text": "_spread",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used instead of `.apply` to pass arguments from a dynamic array to a function?\n\n???\n",
    "text": "...",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What can be used instead of `.apply` to pass arguments from a dynamic array to a function?\n\n???\n",
    "text": "const",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used instead of `.apply` to pass arguments from a dynamic array to a function?\n\n???\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used instead of `.apply` to pass arguments from a dynamic array to a function?\n\n???\n",
    "text": "Object.assign",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nvar map = new Map();\nmap.set(0,\"1\");\nmap.set(1,\"0\");\n\nvar v = map.get(0);\nconsole.log(v);\n// ???\n```\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nvar map = new Map();\nmap.set(0,\"1\");\nmap.set(1,\"0\");\n\nvar v = map.get(0);\nconsole.log(v);\n// ???\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nvar map = new Map();\nmap.set(0,\"1\");\nmap.set(1,\"0\");\n\nvar v = map.get(0);\nconsole.log(v);\n// ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the output of the following snippet?\n\n```javascript\nvar map = new Map();\nmap.set(0,\"1\");\nmap.set(1,\"0\");\n\nvar v = map.get(0);\nconsole.log(v);\n// ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **a** strictly equal to?\n\n    const {a = 1} = {a: undefined}\n    // a === ???\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is **a** strictly equal to?\n\n    const {a = 1} = {a: undefined}\n    // a === ???\n",
    "text": "`0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **a** strictly equal to?\n\n    const {a = 1} = {a: undefined}\n    // a === ???\n",
    "text": "`null`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **a** strictly equal to?\n\n    const {a = 1} = {a: undefined}\n    // a === ???\n",
    "text": "`undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is **a** strictly equal to?\n\n    const {a = 1} = {a: undefined}\n    // a === ???\n",
    "text": "`NaN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nfunction bar(a = 1) {return a}\n//foo(null) === null\nconst {a = 1} = {a: null}\n// a === ???\n```\n",
    "text": "`null`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\nfunction bar(a = 1) {return a}\n//foo(null) === null\nconst {a = 1} = {a: null}\n// a === ???\n```\n",
    "text": "`undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nfunction bar(a = 1) {return a}\n//foo(null) === null\nconst {a = 1} = {a: null}\n// a === ???\n```\n",
    "text": "`1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "can you handle optional arguments in ES6?\n\n```javascript\n// given:\nfunction foo(x = 3) { return x + 4 }\n// evaluate:\nfoo(null)\n```\n\n ???\n",
    "text": "4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "can you handle optional arguments in ES6?\n\n```javascript\n// given:\nfunction foo(x = 3) { return x + 4 }\n// evaluate:\nfoo(null)\n```\n\n ???\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "can you handle optional arguments in ES6?\n\n```javascript\n// given:\nfunction foo(x = 3) { return x + 4 }\n// evaluate:\nfoo(null)\n```\n\n ???\n",
    "text": "7",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "can you handle optional arguments in ES6?\n\n```javascript\n// given:\nfunction foo(x = 3) { return x + 4 }\n// evaluate:\nfoo(null)\n```\n\n ???\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`update`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`index`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`insert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`const`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using an index variable, write directly to an element of a nested array:\n\n    object.???({$set:{\n      items:{[???]:{updated: true}}\n    }})\n",
    "text": "`new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`update`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`set`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`index`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`change`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`mod`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Update the second element of a nested array using **ES6** dynamic property keys:\n\n```javascript\nobject.???({\n  $???:{items:{2:{updated: true}}}\n})\n```\n",
    "text": "`value`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "Intl",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "Collator",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "Language",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "International",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "Languages",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "String",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `Collator` based on *German* language:\n\n```javascript\nvar i10nDE = new ???.???(\"de\");\n```\n",
    "text": "Compare",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "Collator",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "compare",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "check",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "sort",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "sign",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "after",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method can you use to compare the ordering of two characters in a specific language, using the `Collator` class?\n\n```javascript\nvar i10nSV = new Intl.???('sv');\n\nconsole.log(\n  i10nSV.???(\"ä\", \"z\")\n)\n// + 1\n```\n",
    "text": "before",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to get the base-10 numeric representation of a code point at a given position in a string?\n\n    for (let codePoint of '🌲🌲') {\n      console.log(codePoint.???(0));\n    }\n",
    "text": "`codePointAt`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to get the base-10 numeric representation of a code point at a given position in a string?\n\n    for (let codePoint of '🌲🌲') {\n      console.log(codePoint.???(0));\n    }\n",
    "text": "`codePoint`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to get the base-10 numeric representation of a code point at a given position in a string?\n\n    for (let codePoint of '🌲🌲') {\n      console.log(codePoint.???(0));\n    }\n",
    "text": "`codePointRep`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to get the base-10 numeric representation of a code point at a given position in a string?\n\n    for (let codePoint of '🌲🌲') {\n      console.log(codePoint.???(0));\n    }\n",
    "text": "`base10point`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are Javascript strings represented?\n\n???\n",
    "text": "UTF-16",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How are Javascript strings represented?\n\n???\n",
    "text": "UTF-8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are Javascript strings represented?\n\n???\n",
    "text": "UTF-32",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are Javascript strings represented?\n\n???\n",
    "text": "US-ASCII",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`WeakMap`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`iterable`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`weakmap`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`Weakmap`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`iterate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the syntax for a WeakMap below:\n\n    new ???([???])\n",
    "text": "`iterator`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are `WeakMap`s enumerable?\n\n???\n",
    "text": "`yes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Are `WeakMap`s enumerable?\n\n???\n",
    "text": "`no`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write a function that will take the array `planets` and output `[5, 6, 5, 7]`:\n\n    foo() => {\n      var planets = [\n        'Earth',\n        'Saturn',\n        'Pluto',\n        'Jupiter'\n      ];\n\n      return planets.map(??? => ???);\n    }\n",
    "text": "`planet`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write a function that will take the array `planets` and output `[5, 6, 5, 7]`:\n\n    foo() => {\n      var planets = [\n        'Earth',\n        'Saturn',\n        'Pluto',\n        'Jupiter'\n      ];\n\n      return planets.map(??? => ???);\n    }\n",
    "text": "`return planet.length`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write a function that will take the array `planets` and output `[5, 6, 5, 7]`:\n\n    foo() => {\n      var planets = [\n        'Earth',\n        'Saturn',\n        'Pluto',\n        'Jupiter'\n      ];\n\n      return planets.map(??? => ???);\n    }\n",
    "text": "`planet.length`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write a function that will take the array `planets` and output `[5, 6, 5, 7]`:\n\n    foo() => {\n      var planets = [\n        'Earth',\n        'Saturn',\n        'Pluto',\n        'Jupiter'\n      ];\n\n      return planets.map(??? => ???);\n    }\n",
    "text": "`{planet}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Filter out all of the odd numbers,\nsuch that only even numbers are present\nin the array.\n\n    var integers = [1,2,3,4,5,6,7,8,9];\n\n    integers.filter(???);\n",
    "text": "`(n) => {return n % 2 == 0}`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Filter out all of the odd numbers,\nsuch that only even numbers are present\nin the array.\n\n    var integers = [1,2,3,4,5,6,7,8,9];\n\n    integers.filter(???);\n",
    "text": "`n => {n % 2 === 0}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Filter out all of the odd numbers,\nsuch that only even numbers are present\nin the array.\n\n    var integers = [1,2,3,4,5,6,7,8,9];\n\n    integers.filter(???);\n",
    "text": "`n => n % 2 !== 0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Filter out all of the odd numbers,\nsuch that only even numbers are present\nin the array.\n\n    var integers = [1,2,3,4,5,6,7,8,9];\n\n    integers.filter(???);\n",
    "text": "`{n} => {n % 2 != 0}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Filter out all of the odd numbers,\nsuch that only even numbers are present\nin the array.\n\n    var integers = [1,2,3,4,5,6,7,8,9];\n\n    integers.filter(???);\n",
    "text": "`n => [return n % 2 === 0]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a counter that can successfully count up and down:\n\n    function Counter () {\n      this.counter = 0;\n      this.countUp = setInterval(???, 1000)\n      this.countDown = setInterval(???, 1000)\n    }\n\n    let count = new Counter();\n",
    "text": "`() => {this.counter++;}`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a counter that can successfully count up and down:\n\n    function Counter () {\n      this.counter = 0;\n      this.countUp = setInterval(???, 1000)\n      this.countDown = setInterval(???, 1000)\n    }\n\n    let count = new Counter();\n",
    "text": "`() => {this.counter--;}`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a counter that can successfully count up and down:\n\n    function Counter () {\n      this.counter = 0;\n      this.countUp = setInterval(???, 1000)\n      this.countDown = setInterval(???, 1000)\n    }\n\n    let count = new Counter();\n",
    "text": "`function() {this.counter++;}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a counter that can successfully count up and down:\n\n    function Counter () {\n      this.counter = 0;\n      this.countUp = setInterval(???, 1000)\n      this.countDown = setInterval(???, 1000)\n    }\n\n    let count = new Counter();\n",
    "text": "`function() {this.counter--;}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "number",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "=",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "0",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "default",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "n",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "int",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "const",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "let",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the next function definition such that the function call below is true:\n\n```javascript\nfunction cube(??? ??? ???) {\n  return number * number * number\n}\ncube() // 0\n```\n",
    "text": "-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be outputed?\n\n```javascript\nfunction square(a = 1) {\n  return a * a;\n}\n\nconsole.log(square());\n// ???\n```\n",
    "text": "1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be outputed?\n\n```javascript\nfunction square(a = 1) {\n  return a * a;\n}\n\nconsole.log(square());\n// ???\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be outputed?\n\n```javascript\nfunction square(a = 1) {\n  return a * a;\n}\n\nconsole.log(square());\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be outputed?\n\n```javascript\nfunction square(a = 1) {\n  return a * a;\n}\n\nconsole.log(square());\n// ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be outputed?\n\n```javascript\nfunction square(a = 1) {\n  return a * a;\n}\n\nconsole.log(square());\n// ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "sayHi()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "sayHello",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "()",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "sayHi: function()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "sayHello:",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "function()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function `sayHi` which is supposed to log the `Hi` message.\nLikewise, the `sayHello` function should log the `Hello` message.\n\nComplete the following snippet such that the both functions are defind within the object `return`ed, using method shorthand in both cases:\n\n```javascript\nreturn {\n ??? {\n   console.log('Hi')\n },\n ??? ??? {\n   console.log('Hello)\n }\n}\n```\n",
    "text": "sayHello: function()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "func",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "()",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "func:",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "function func()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "func()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following snippet such that it makes use of method shorthand:\n\n```javascript\nreturn {\n  ??? ??? {\n    ...\n  }\n}\n```\n",
    "text": "() =>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "{ foo: 'b' }",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "'b'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "'a'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "{ foo: 'a' }",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be logged by the following snippet:\n\n```javascript\nfunction bar() {\n  var foo = 'b'\n  this.foo = 'a'\n  return {\n    foo\n  }\n}\nconsole.log(bar())\n// ???\n```\n",
    "text": "foo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "prop",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "prop: prop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "prop: this.prop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "this.prop: prop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "this.prop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "'value'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gap such that the `prop` value is returned using property value shorthand:\n\n```javascript\nfunction foo() {\n  var prop = 'value'\n\n  return {\n    ???\n  }\n}\n```\n",
    "text": "prop: 'value'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following generator calls?\n\n```javascript\nfunction* myGen() {\n  while(true) {\n    try {\n      yield 'enki'\n    } catch(err) {\n      console.log('Error')\n    }\n  }\n}\n\nconst g = myGen()\ng.next()\n// { value: 'enki', done: false }\ng.throw('abc')\n// ???\n// ???\n```\n",
    "text": "Error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the following generator calls?\n\n```javascript\nfunction* myGen() {\n  while(true) {\n    try {\n      yield 'enki'\n    } catch(err) {\n      console.log('Error')\n    }\n  }\n}\n\nconst g = myGen()\ng.next()\n// { value: 'enki', done: false }\ng.throw('abc')\n// ???\n// ???\n```\n",
    "text": "{ value: 'enki', done: false}",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will be the output of the following generator calls?\n\n```javascript\nfunction* myGen() {\n  while(true) {\n    try {\n      yield 'enki'\n    } catch(err) {\n      console.log('Error')\n    }\n  }\n}\n\nconst g = myGen()\ng.next()\n// { value: 'enki', done: false }\ng.throw('abc')\n// ???\n// ???\n```\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following generator calls?\n\n```javascript\nfunction* myGen() {\n  while(true) {\n    try {\n      yield 'enki'\n    } catch(err) {\n      console.log('Error')\n    }\n  }\n}\n\nconst g = myGen()\ng.next()\n// { value: 'enki', done: false }\ng.throw('abc')\n// ???\n// ???\n```\n",
    "text": "Error('abc')",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following generator calls?\n\n```javascript\nfunction* myGen() {\n  while(true) {\n    try {\n      yield 'enki'\n    } catch(err) {\n      console.log('Error')\n    }\n  }\n}\n\nconst g = myGen()\ng.next()\n// { value: 'enki', done: false }\ng.throw('abc')\n// ???\n// ???\n```\n",
    "text": "abc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax should be used to catch errors within generators?\n\n???\n",
    "text": "try/catch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What syntax should be used to catch errors within generators?\n\n???\n",
    "text": "throw new Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax should be used to catch errors within generators?\n\n???\n",
    "text": "gen.catch()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax should be used to catch errors within generators?\n\n???\n",
    "text": "gen.throw()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax should be used to catch errors within generators?\n\n???\n",
    "text": "if/else",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "42",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "new Proxy",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "obj",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "proxyFn",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "proxy",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "Enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "Proxy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that the logs stand true:\n\n```javascript\nconst obj = {\n  enki: 'Enki'\n}\nconsole.log(obj.enki)\n// Enki\n\nconst proxyFn = {\n  ???: () => ???\n}\nconst proxy = ???(???, ???)\n\nconsole.log(???.enki)\n// 42\n```\n",
    "text": "get()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "42",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "obj",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "prop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "Proxy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing outputs of the `console.log` calls:\n\n```javascript\nconst proxyFn = {\n  get: (obj, prop) => 'enki'\n}\nconst obj = {\n  number: 42\n}\nconst proxy = new Proxy(obj, proxyFn)\n\nconsole.log(obj.number)\n// ???\nconsole.log(proxy.number)\n// ???\n```\n",
    "text": "Enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "3",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing output of the following code snippet:\n\n```javascript\nfunction* myGen() {\n  let toYield = 2\n  while(true) {\n    const i = yield toYield\n    if (i) {\n      toYield = i\n    }\n  }\n}\n\nlet z = myGen()\nz.next()\n// { value: ???, done: false}\nz.next(4)\n// { value: ???, done: false}\nz.next(3)\n// { value: ???, done: false}\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when you pass a value to the `next` call of a generator?\n\n???\n",
    "text": "it is assigned to the result of the `yield` statement",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What happens when you pass a value to the `next` call of a generator?\n\n???\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when you pass a value to the `next` call of a generator?\n\n???\n",
    "text": "it instantly returns an object of the form `{value: input, done: false}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when you pass a value to the `next` call of a generator?\n\n???\n",
    "text": "it will throw an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "Proxy",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "revokable",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "proxy",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "revokable",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "revoke",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "catch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "try",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "new Proxy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that log statements hold true:\n\n```javascript\nconst revocable = ???.???({}, {\n  ???: () => 42\n});\n\nconst proxy = revocable.???;\nconsole.log(proxy.enki)\n// 42\n\n???.???()\nconsole.log(proxy.enki)\n// TypeError\n```\n",
    "text": "get()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "deleteProperty",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "Proxy",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "obj",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "proxyFn",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "42",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "delete",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "deleteOwnProperty",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "proxy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippet such that, using a Proxy, the proprieties of `pObj` cannot be deleted via `delete` keyword:\n\n```javascript\nconst obj = {\n  enki: 42\n}\n\nconst proxyFn = {\n  ???: (obj, prop) => true\n}\nconst pObj = new ???(???, ???)\ndelete pObj.enki\nconsole.log(pObj)\n// { enki: 42 }\n```\n",
    "text": "function*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "function*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield*",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "return*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "myGen",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "done",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "next",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "await",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? myGen() {\n  ??? 4;\n  ??? [3,1];\n}\n\nvar x = myGen();\nx.next();\n// { value: 4, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 1, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "Promise.all",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "function*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield*",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "gen2()",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield 3",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield 2",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield 5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "yield 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "return 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "return 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "gen2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps such that the `next()` calls' output stand true:\n\n```javascript\n??? gen1() {\n  ??? 5;\n  ??? ???;\n}\n\nfunction* gen2() {\n  ???\n  ???\n}\n\nvar x = gen1();\nx.next();\n// { value: 5, done: false }\nx.next()\n// { value: 3, done: false }\nx.next()\n// { value: 2, done: false }\nx.next()\n// { value: undefined, done: true}\n```\n",
    "text": "return*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the assignment:\n\n```javascript\nconst enki = 42;\n```\n\nWhat will the following do?\n\n```javascript\nenki = 22;\n// ???\n```\n\nBut the following?\n\n```javascript\nif (true) {\n  const enki = 22;\n  // ???\n}\n```\n",
    "text": "throw an error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the assignment:\n\n```javascript\nconst enki = 42;\n```\n\nWhat will the following do?\n\n```javascript\nenki = 22;\n// ???\n```\n\nBut the following?\n\n```javascript\nif (true) {\n  const enki = 22;\n  // ???\n}\n```\n",
    "text": "assign 22 to enki within the if's scope",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the assignment:\n\n```javascript\nconst enki = 42;\n```\n\nWhat will the following do?\n\n```javascript\nenki = 22;\n// ???\n```\n\nBut the following?\n\n```javascript\nif (true) {\n  const enki = 22;\n  // ???\n}\n```\n",
    "text": "also throw an error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the assignment:\n\n```javascript\nconst enki = 42;\n```\n\nWhat will the following do?\n\n```javascript\nenki = 22;\n// ???\n```\n\nBut the following?\n\n```javascript\nif (true) {\n  const enki = 22;\n  // ???\n}\n```\n",
    "text": "re-assign 22 to enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following code valid? Why?\n\n???\n\n```javascript\nconst enki = 'enki';\n\nif (true) {\n   const enki = 'nk';\n}\n```\n",
    "text": "yes, because the second assignment is in a different scope",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following code valid? Why?\n\n???\n\n```javascript\nconst enki = 'enki';\n\nif (true) {\n   const enki = 'nk';\n}\n```\n",
    "text": "yes, because the value is changed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following code valid? Why?\n\n???\n\n```javascript\nconst enki = 'enki';\n\nif (true) {\n   const enki = 'nk';\n}\n```\n",
    "text": "no, because you can't redeclare a variable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following code valid? Why?\n\n???\n\n```javascript\nconst enki = 'enki';\n\nif (true) {\n   const enki = 'nk';\n}\n```\n",
    "text": "no, because the `if` block doesn't have it's own scope",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about ES6 do you consider false?\n\n???\n",
    "text": "ES6 is fully supported out-of-the-box by all browsers",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements about ES6 do you consider false?\n\n???\n",
    "text": "ES6 can be compiled to ES5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about ES6 do you consider false?\n\n???\n",
    "text": "ES6 introduces arrow functions",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about ES6 do you consider false?\n\n???\n",
    "text": "ES6 can help write more succint code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do browsers have support for ES6?\n\n???\n",
    "text": "Modern browsers only. A minority of older versions don't support it",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do browsers have support for ES6?\n\n???\n",
    "text": "ES6 is supported by any browser",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do browsers have support for ES6?\n\n???\n",
    "text": "Not at all. You need to compile your code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps with the output of the log statements:\n\n```javascript\nlet year = 2017\n{\n  let year = 2018\n  console.log(year)\n  // ???\n}\nconsole.log(year)\n// ???\n```\n",
    "text": "2018",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps with the output of the log statements:\n\n```javascript\nlet year = 2017\n{\n  let year = 2018\n  console.log(year)\n  // ???\n}\nconsole.log(year)\n// ???\n```\n",
    "text": "2017",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps with the output of the log statements:\n\n```javascript\nlet year = 2017\n{\n  let year = 2018\n  console.log(year)\n  // ???\n}\nconsole.log(year)\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps with the output of the log statements:\n\n```javascript\nlet year = 2017\n{\n  let year = 2018\n  console.log(year)\n  // ???\n}\nconsole.log(year)\n// ???\n```\n",
    "text": "year",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the log statement (considering it's run in a browser):\n\n```javascript\nlet enki = 'enki'\nconsole.log(window.enki)\n// ???\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the log statement (considering it's run in a browser):\n\n```javascript\nlet enki = 'enki'\nconsole.log(window.enki)\n// ???\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the log statement (considering it's run in a browser):\n\n```javascript\nlet enki = 'enki'\nconsole.log(window.enki)\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[0, 1, 2]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[1, 2, 3]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following snippet?\n\n```javascript\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[3, 3, 3]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the two log statements?\n\n```javascript\nvar varFuncs=[];\n\nfor (var i = 0; i < 3; i++) {\n   varFuncs.push(\n      function() {\n        console.log(i)\n      }\n   );\n}\n\nfor(func of varFuncs){\n   func();\n}\n// ???\n\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[3, 3, 3]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the two log statements?\n\n```javascript\nvar varFuncs=[];\n\nfor (var i = 0; i < 3; i++) {\n   varFuncs.push(\n      function() {\n        console.log(i)\n      }\n   );\n}\n\nfor(func of varFuncs){\n   func();\n}\n// ???\n\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[0, 1, 2]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is the output of the two log statements?\n\n```javascript\nvar varFuncs=[];\n\nfor (var i = 0; i < 3; i++) {\n   varFuncs.push(\n      function() {\n        console.log(i)\n      }\n   );\n}\n\nfor(func of varFuncs){\n   func();\n}\n// ???\n\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[4, 4, 4]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the two log statements?\n\n```javascript\nvar varFuncs=[];\n\nfor (var i = 0; i < 3; i++) {\n   varFuncs.push(\n      function() {\n        console.log(i)\n      }\n   );\n}\n\nfor(func of varFuncs){\n   func();\n}\n// ???\n\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[2, 2, 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the two log statements?\n\n```javascript\nvar varFuncs=[];\n\nfor (var i = 0; i < 3; i++) {\n   varFuncs.push(\n      function() {\n        console.log(i)\n      }\n   );\n}\n\nfor(func of varFuncs){\n   func();\n}\n// ???\n\nvar letFuncs = [];\nfor (let i = 0; i < 3; i++) {\n  letFuncs.push(\n    function() {\n      console.log(i)\n    }\n  )\n}\nfor (func of letFuncs) {\n  func()\n}\n// ???\n```\n",
    "text": "[1, 2, 3]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "function*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "yield",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "next()",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "isDone()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "done()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "() =>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the missing gaps of the following generator function:\n\n```javascript\n??? myGenerator() {\n  ??? 5;\n}\n\nconst gen = myGenerator();\ngen.next();\n// {value: 5, done: false}\ngen.???;\n// {value: undefined, done: true}\n```\n",
    "text": "generator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can generator functions maintain their execution context between method calls?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can generator functions maintain their execution context between method calls?\n\n???\n",
    "text": "No, because the memory needed would be to big",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can generator functions maintain their execution context between method calls?\n\n???\n",
    "text": "No, because of the JavaScript memory model",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can generator functions maintain their execution context between method calls?\n\n???\n",
    "text": "Only if the calls are done one after the other",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about iterators?\n\n???\n",
    "text": "Iterators work only on arrays",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is false about iterators?\n\n???\n",
    "text": "Iterators are special objects that go over a collection",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about iterators?\n\n???\n",
    "text": "Iterators can be manually implemented",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about iterators?\n\n???\n",
    "text": "Iterators remember the position while iterating",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method do iterators canonically make use of to advance the iteration?\n\n???\n",
    "text": "iterator.next()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method do iterators canonically make use of to advance the iteration?\n\n???\n",
    "text": "iterator.pop()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method do iterators canonically make use of to advance the iteration?\n\n???\n",
    "text": "iterator.get()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method do iterators canonically make use of to advance the iteration?\n\n???\n",
    "text": "iterator.advance()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method do iterators canonically make use of to advance the iteration?\n\n???\n",
    "text": "iterator.step()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "Symbol.iterator",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "Symbol()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "Iterator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "@@it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property does an object in JavaScript need to have in order to be used in a `for..of` syntax:\n\n```javascript\nconst x = {}\nx[???] = function() {...}\n\nfor (const y of x) {\n  // iterate\n}\n```\n",
    "text": "Symbol.match",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a JavaScript object, exposing a `next` that return `{value, done}` be iterated with the `for..of` syntax? Why?\n\n```javascript\nconst obj = {\n  next: () => {\n    value: 1,\n    done: true\n  }\n}\n\nfor (const y of obj) {\n  // ...\n}\n```\n\n???\n",
    "text": "No, because it has no iteration protocol implemented via `Symbol.iterator`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can a JavaScript object, exposing a `next` that return `{value, done}` be iterated with the `for..of` syntax? Why?\n\n```javascript\nconst obj = {\n  next: () => {\n    value: 1,\n    done: true\n  }\n}\n\nfor (const y of obj) {\n  // ...\n}\n```\n\n???\n",
    "text": "Yes, because it has the `next` function exposed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a JavaScript object, exposing a `next` that return `{value, done}` be iterated with the `for..of` syntax? Why?\n\n```javascript\nconst obj = {\n  next: () => {\n    value: 1,\n    done: true\n  }\n}\n\nfor (const y of obj) {\n  // ...\n}\n```\n\n???\n",
    "text": "No, because `done` must be at least one time `false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a JavaScript object, exposing a `next` that return `{value, done}` be iterated with the `for..of` syntax? Why?\n\n```javascript\nconst obj = {\n  next: () => {\n    value: 1,\n    done: true\n  }\n}\n\nfor (const y of obj) {\n  // ...\n}\n```\n\n???\n",
    "text": "Yes, because all objects are iterable by default",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "next",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "value, done",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "done",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "getAll",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "show",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "advance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following code expressing the iteration protocol in JavaScript:\n\n```javascript\nIterator {\n  ???(): {???}\n}\n```\n",
    "text": "isFinished",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not part of the iteration protocol?\n\n???\n",
    "text": "a method to get all the items at once (getAll)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not part of the iteration protocol?\n\n???\n",
    "text": "a method to advance the iteration (next)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not part of the iteration protocol?\n\n???\n",
    "text": "a way of telling when the iteration is done (done)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator work with any sequence of items?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can an iterator work with any sequence of items?\n\n???\n",
    "text": "Only objects",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator work with any sequence of items?\n\n???\n",
    "text": "All apart from strings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator work with any sequence of items?\n\n???\n",
    "text": "Only numbers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator be used to implement an infinite sequence?\n\n???\n",
    "text": "Yes, by never returning `done` as `true`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can an iterator be used to implement an infinite sequence?\n\n???\n",
    "text": "No, because an iterator must always have `done` equal to `true` at some point",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator be used to implement an infinite sequence?\n\n???\n",
    "text": "No, because the memory needed will kill any machine",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can an iterator be used to implement an infinite sequence?\n\n???\n",
    "text": "Yes, by making the `next` function recursive",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's required to make your JavaScript available to pre-ES6 browsers? ???\n",
    "text": "A transpiler or trans-compiler.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's required to make your JavaScript available to pre-ES6 browsers? ???\n",
    "text": "An Integrated Development Environment.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's required to make your JavaScript available to pre-ES6 browsers? ???\n",
    "text": "A bash terminal.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can **Generators** be polyfilled on top of **ES5** ?\n\n???\n",
    "text": "`no`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can **Generators** be polyfilled on top of **ES5** ?\n\n???\n",
    "text": "`yes`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`get`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`receiver?`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`Reflect`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`initProp`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`propDesc`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`defineProperty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits to implement functionality that is otherwise only available via operators:\n\n```javascript\nReflect.???(target, propertyKey, ???)\n```\n",
    "text": "`flag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits as to indicate success of an operation using ES6's `Reflect` object:\n\n    Reflect.???(???,  \n      propertyKey, propDesc);\n",
    "text": "`defineProperty`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing code bits as to indicate success of an operation using ES6's `Reflect` object:\n\n    Reflect.???(???,  \n      propertyKey, propDesc);\n",
    "text": "`target`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing code bits as to indicate success of an operation using ES6's `Reflect` object:\n\n    Reflect.???(???,  \n      propertyKey, propDesc);\n",
    "text": "`Reflect`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits as to indicate success of an operation using ES6's `Reflect` object:\n\n    Reflect.???(???,  \n      propertyKey, propDesc);\n",
    "text": "`bool`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing code bits as to indicate success of an operation using ES6's `Reflect` object:\n\n    Reflect.???(???,  \n      propertyKey, propDesc);\n",
    "text": "`initProp`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function in the following JS code snippet is in the *tail position*? ???\n\n```javascript\nconst env = () => foo() && test();\n```\n",
    "text": "`test()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which function in the following JS code snippet is in the *tail position*? ???\n\n```javascript\nconst env = () => foo() && test();\n```\n",
    "text": "`foo()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function in the following JS code snippet is in the *tail position*? ???\n\n```javascript\nconst env = () => foo() && test();\n```\n",
    "text": "`env`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function in the following JS code snippet is in the *tail position*? ???\n\n```javascript\nconst env = () => foo() && test();\n```\n",
    "text": "None of them...",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When does the ES6 **tail call optimisation** work?\n\n???\n",
    "text": "in strict mode",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When does the ES6 **tail call optimisation** work?\n\n???\n",
    "text": "in non-strict mode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "ArrayBuffer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "Int32Array",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "Int32",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "I32Arr",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "Array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What object is used to create a buffer for a typed array?\n\n???\n\nWhat object is used to create a view configured for 32-bit signed integers for a typed array?\n\n???\n",
    "text": "Buffer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are **Typed Arrays** made of ?\n\n???\n",
    "text": "buffers and views",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are **Typed Arrays** made of ?\n\n???\n",
    "text": "views and streams",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are **Typed Arrays** made of ?\n\n???\n",
    "text": "arrays and buffers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are **Typed Arrays** made of ?\n\n???\n",
    "text": "iterators and arrays",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "Promise",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "resolve",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "then",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "catch",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "then (res",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "then()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "catch()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "next",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "next(",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "finally",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "res",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following promise definition such that the logs stand true:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    ???('enki')\n  })\n  .???(res => console.log(res))\n  .then(res => console.log('says'))\n  .???(err => console.log('hey'))\n  .??? => console.log('hello'))\n// enki\n// says\n// hello\n```\n",
    "text": "reject",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Will the two `console.log` statements output the same number, or different numbers?\n\n```javascript\nconst p = new Promise(resolve => {\n  resolve(Math.random())\n})\n\n// do these 2 log different or same value?\np.then(console.log)\np.then(console.log)\n```\n\n???\n",
    "text": "Same",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Will the two `console.log` statements output the same number, or different numbers?\n\n```javascript\nconst p = new Promise(resolve => {\n  resolve(Math.random())\n})\n\n// do these 2 log different or same value?\np.then(console.log)\np.then(console.log)\n```\n\n???\n",
    "text": "Different",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "Promise",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "(resolve, reject)",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "resolve",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "then",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "catch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "reject",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "(reject)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "await",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "async",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "wait",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing words in the code such that the commented scenario stands true:\n\n```javascript\nconst p = new ???(\n  (???) => {\n    console.log('Hello')\n    setTimeout(() => {\n      ???('..from Enki!', 4000)\n    })\n  })\n  .???(res => {\n    console.log(res)\n  })\n\n// log 'Hello'\n// wait 4 seconds\n// log '..from Enki!'\n```\n",
    "text": "try",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "resolve",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "reject",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "return",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "throw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "catch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Promises take as input a function with two arguments. How are they called?\n\n```javascript\nconst p = new Promise(\n  function (???, ???) {\n    ...\n  }\n)\n```\n",
    "text": "then",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about promises do you consider false?\n\n???\n",
    "text": "Promises will block the execution thread of your application",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements about promises do you consider false?\n\n???\n",
    "text": "Promises tend to be more useful in complex scenarios where callback get out of control",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about promises do you consider false?\n\n???\n",
    "text": "Promises were available before standard JavaScript implementation via third-party libraries",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about promises do you consider false?\n\n???\n",
    "text": "Promises are used for asynchronous operations",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What problem do Promises try to solve?\n\n???\n",
    "text": "callbacks getting out of control in complex scenarios",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What problem do Promises try to solve?\n\n???\n",
    "text": "asynchronous calls stopping thread execution",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What problem do Promises try to solve?\n\n???\n",
    "text": "lack of any kind of support for asynchronous operation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What problem do Promises try to solve?\n\n???\n",
    "text": "too many libraries doing the same thing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['a', 'b', 'c']",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "'b'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "'a'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "'c'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['b', 'c', 'a']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['a', 'c', 'b']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['b', 'a', 'c']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['c', 'b', 'a']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following code snippet, what do you think will be the output of each method call?\n\n```javascript\nconst p1 = new Promise(resolve =>\n  setTimeout(() => resolve('a'), 5000))\nconst p2 = new Promise(resolve =>\n  setTimeout(() => resolve('b'), 500))\nconst p3 = new Promise(resolve =>\n  setTimeout(() => resolve('c'), 4000))\n\nPromise.all([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n\nPromise.race([p1, p2, p3])\n  .then(res => console.log(res))\n// ???\n```\n",
    "text": "['c', 'a', 'b']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.all",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.race",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.wait",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.reject",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.array",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.vector",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.first",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which static `Promise` method will resolve after all promises in the array supplied as input resolve?\n\n???\n\nWhich static `Promise` method will resolve when the first promise in the array supplied as input resolves?\n\n???\n",
    "text": "Promise.reject",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the second argument the `.then` method can take?\n\n???\n",
    "text": "a function that is triggered if there is an error in the promise",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the second argument the `.then` method can take?\n\n???\n",
    "text": "a number, which represents in `ms` how long the `.then` should wait before executing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the second argument the `.then` method can take?\n\n???\n",
    "text": "a number, which represents in `ms` how long the `.then` should wait before returning ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "Promise",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "then",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "catch",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "next",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "await",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "try",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "resolve",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following Promise definition:\n\n```javascript\nconst p = new ???(\n  (resolve, reject) => {\n    // do async operation\n  })\n  .???(res => {\n    // handle result if the operation was\n    // successful\n  })\n  .???(err => {\n    // handle errors\n  })\n```\n",
    "text": "reject",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "set",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "has",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "contains",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "contain",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "delete",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(4, 'enki')\n\nconsole.log(myMap.???(4))\n// enki\nconsole.log(myMap.???(4))\n// true\n```\n",
    "text": "clear",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "set",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "has",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "clear()",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "delete()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "contains",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "empty()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "set()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing method calls in the following snippets such that the logs hold:\n\n```javascript\nconst myMap = new Map()\n\nmyMap.???(???, 'enki')\nconsole.log(myMap)\n// Map(1) {1 => \"enki\"}\n\nconsole.log(myMap.???(4))\n// true\n\nmyMap.???\nconsole.log(myMap)\n// Map(0) {}\n```\n",
    "text": "add()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "-1",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "9",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "7",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "-2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following function calls return?\n\n```javascript\nconsole.log(Math.cbrt(27))\n// ???\n\nconsole.log(Math.sign(-22))\n// ???\n\nconsole.log(Math.trunc(4.522))\n// ???\n```\n",
    "text": "-22",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Math` method introduced in ES6 can be used to find the cubic root of a number?\n\n`Math.???`\n",
    "text": "cbrt",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What `Math` method introduced in ES6 can be used to find the cubic root of a number?\n\n`Math.???`\n",
    "text": "cubicRoot",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Math` method introduced in ES6 can be used to find the cubic root of a number?\n\n`Math.???`\n",
    "text": "cbRoot",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `Math` method introduced in ES6 can be used to find the cubic root of a number?\n\n`Math.???`\n",
    "text": "cubicrt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "7",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "8",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the last line of the following code?\n\n```javascript\nconst mySet = new Set()\nmySet.add(4)\nmySet.add(5)\nmySet.add(4)\nmySet.add(3)\nmySet.add(5)\nmySet.add(5)\nmySet.add(1)\n\nconsole.log(mySet.size)\n// ???\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "add",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "has",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "append",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "contains",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "is",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "contain",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "isIn",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to append an element to the `Set` data structure?\n\n???\n\nWhat method is used to check if an element is contained in the same data structure?\n\n???\n",
    "text": "push",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "...",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "arr1",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "...arr2",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "arr2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "...arr1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": ",",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "[arr1]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the function:\n\n```javascript\nfunction compute(a, b, c, d) {\n  return a + b * c + d;\n}\n```\n\nIf you have two arrays:\n\n```javascript\nconst arr1 = [2, 5]\nconst arr2 = [10, 30]\n```\n\nComplete the following function call such that the outputted value is correct:\n\n```javascript\nconsole.log(\n  compute(??????, ???)\n)\n// 82\n```\n",
    "text": "[arr2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "addNumbers(",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "...",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "arr1)",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "addNumbers",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "(...arr2)",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "arr2)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "addNumbers(...)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "addNumbers(arr1)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "arr2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that the log statements are correct:\n\n```javascript\nfunction addNumbers(a, b) {\n  return a + b\n}\nconst arr1 = [4, 5]\nconst arr2 = [5, 6]\n\nconsole.log(??? ??? ???)\n// 9\nconsole.log(??? ???)\n```\n",
    "text": "arr1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "...",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "initial",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": ",",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "4",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "...second",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "...initial",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": ", ,",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "second",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "final",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the array is properly filled in:\n\n```javascript\nconst initial = [1, 2, 3]\nconst second = [5, 6, 7]\nconst final = [?????? ??? ???, ???]\nconsole.log(final)\n// 1, 2, 3, 4, 5, 6, 7\n```\n",
    "text": "...final",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the value of the `final` array:\n\n```javascript\nlet initial = [3, 6, 2]\nconst final =\n  initial.concat(\n    [4, ...initial,...initial]\n    )\nconsole.log(final)\n// ???\n```\n",
    "text": "[3, 6, 2, 4, 3, 6, 2, 3, 6, 2]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the value of the `final` array:\n\n```javascript\nlet initial = [3, 6, 2]\nconst final =\n  initial.concat(\n    [4, ...initial,...initial]\n    )\nconsole.log(final)\n// ???\n```\n",
    "text": "[4, 3, 6, 2, 3, 6, 2, 3, 6, 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the value of the `final` array:\n\n```javascript\nlet initial = [3, 6, 2]\nconst final =\n  initial.concat(\n    [4, ...initial,...initial]\n    )\nconsole.log(final)\n// ???\n```\n",
    "text": "[3, 6, 2, 3, 6, 2, 4, 3, 6, 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the value of the `final` array:\n\n```javascript\nlet initial = [3, 6, 2]\nconst final =\n  initial.concat(\n    [4, ...initial,...initial]\n    )\nconsole.log(final)\n// ???\n```\n",
    "text": "[3, 6, 2, 2, 3, 6, 2, 4, 6, 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` statement makes sense:\n\n```javascript\nconsole.log(\n  String.???`A\\nB???\n)\n// A\\nB\n```\n",
    "text": "raw",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the `log` statement makes sense:\n\n```javascript\nconsole.log(\n  String.???`A\\nB???\n)\n// A\\nB\n```\n",
    "text": "`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the `log` statement makes sense:\n\n```javascript\nconsole.log(\n  String.???`A\\nB???\n)\n// A\\nB\n```\n",
    "text": "raw(",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` statement makes sense:\n\n```javascript\nconsole.log(\n  String.???`A\\nB???\n)\n// A\\nB\n```\n",
    "text": "`;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the `log` statement makes sense:\n\n```javascript\nconsole.log(\n  String.???`A\\nB???\n)\n// A\\nB\n```\n",
    "text": ")",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `String` method is used to get the literal value of the string (without applying characters such as `\\n`)?\n\n???\n",
    "text": "raw",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which `String` method is used to get the literal value of the string (without applying characters such as `\\n`)?\n\n???\n",
    "text": "literal",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `String` method is used to get the literal value of the string (without applying characters such as `\\n`)?\n\n???\n",
    "text": "format",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `String` method is used to get the literal value of the string (without applying characters such as `\\n`)?\n\n???\n",
    "text": "rawLiteral",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `String` method is used to get the literal value of the string (without applying characters such as `\\n`)?\n\n???\n",
    "text": "unformat",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "['Number ', ' is']",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "[2]",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "'Number'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "'is'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "['Number', 'is']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "[['Number', 'is'], 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "[0, 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "['Number', 'is', 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following tagged template function call:\n\n```javascript\nmyTag`Number ${2} is`\n```\n\nAnd it's definition:\n\n```javascript\nfunction myTag(strings, ...substitutions) {\n  ...\n}\n```\n\nWhat will `strings` and `substitutions` equal to?\n\n```javascript\nconsole.log(strings)\n// ???\nconsole.log(substitutions)\n// ???\n```\n",
    "text": "['Number ', ' is', 2]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "processNumber",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "`)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "processNumber(",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "processNumber()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "this.processNumber(",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "String.template(processNumber",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following function:\n\n```javascript\nfunction processNumber(strings, value) {\n  let ret = strings[0] + value;\n  if (value % 2 === 0) {\n    ret += ' is even'\n  } else {\n    ret += ' is odd'\n  }\n  return ret;\n}\n```\n\nHow would you call the the tagged template function such that the log statement is true?\n\n```javascript\nconst number = 2;\nconsole.log(\n ???`Number ${number}???\n)\n// Number 2 is even\n```\n",
    "text": "`))",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`${what}`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`${who}`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`#{who}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`%s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`$(who)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`#(who)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`#{what}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`%s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`$(what)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says \"Beam me up Scotty!\"\n\n```javascript\nlet what = \"Beam\" ;\nlet who = \"Scotty\";\n\nlet line = `??? me up ???!`;\n```\n",
    "text": "`#(what)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`${attr}`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`${attr2}`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`#{attr}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`%s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`$(attr)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`#(attr)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`#{attr2}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`%s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`$(attr2)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to assemble a template string that says `\"Stay Hungry Stay Foolish\"`.\n\n```javascript\nlet attr = \"Hungry\" ;\nlet attr2 = \"Foolish\";\n\nlet line = `Stay ??? Stay ???`;\n```\n",
    "text": "`#(attr2)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the new ES6 notation to write the binary number for `2` with the correct prefix:\n??? ??? ???\n",
    "text": "`b`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Use the new ES6 notation to write the binary number for `2` with the correct prefix:\n??? ??? ???\n",
    "text": "`0`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Use the new ES6 notation to write the binary number for `2` with the correct prefix:\n??? ??? ???\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Use the new ES6 notation to write the binary number for `2` with the correct prefix:\n??? ??? ???\n",
    "text": "`o`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use the new ES6 notation to write the binary number for `2` with the correct prefix:\n??? ??? ???\n",
    "text": "`2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method can be used to convert numbers to hex/bin/oct ?\n\n```javascript\n(3.14).???(8) //octal\n```\n",
    "text": "`toString`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method can be used to convert numbers to hex/bin/oct ?\n\n```javascript\n(3.14).???(8) //octal\n```\n",
    "text": "`convert`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method can be used to convert numbers to hex/bin/oct ?\n\n```javascript\n(3.14).???(8) //octal\n```\n",
    "text": "`parse`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method can be used to convert numbers to hex/bin/oct ?\n\n```javascript\n(3.14).???(8) //octal\n```\n",
    "text": "`rebase`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following two calls?\n\n```javascript\nconst enki = 'enki';\n\nisNaN(enki)\nNumber.isNaN(enki)\n// ???\n```\n",
    "text": "true, false",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following two calls?\n\n```javascript\nconst enki = 'enki';\n\nisNaN(enki)\nNumber.isNaN(enki)\n// ???\n```\n",
    "text": "false, true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following two calls?\n\n```javascript\nconst enki = 'enki';\n\nisNaN(enki)\nNumber.isNaN(enki)\n// ???\n```\n",
    "text": "false, false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following two calls?\n\n```javascript\nconst enki = 'enki';\n\nisNaN(enki)\nNumber.isNaN(enki)\n// ???\n```\n",
    "text": "true, true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isFinite",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "Number",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isInteger",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isNaN",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isReal",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "String",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isRatio",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "NaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing calls with methods introduced in ES6 such that all the statements are true:\n\n```javascript\nNumber.???(5) == true\n???.???(2.71) == false\nNumber.???(Number.NaN) == true\n```\n",
    "text": "isNotNaN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "EPSILON",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MIN_SAFE_INTEGER",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MAX_SAFE_INTEGER",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "E",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MIN_INTEGER",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MAX_INTEGER",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MIN_IEEE_INTEGER",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps with the `Number` constants' names introduced in ES6:\n\nSmallest value, smaller than `1` and bigger than `0` that can be represented as a number:\n\n```javascript\nNumber.???\n// 2.220446049250313e-16\n```\n\nSmallest and biggest IEEE-754 numbers:\n\n```javascript\nNumber.???\n//-9007199254740991\nNumber.???\n//9007199254740991\n```\n",
    "text": "MAX_IEEE_INTEGER",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isSafeInteger",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "MIN_SAFE_INTEGER",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "EPSILON",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isSafe",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isIeee",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isValid",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isFinite",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you check if a number can be represented in IEEE-754 format?\n\n```javascript\nNumber.???(Math.pow(2, 53))\n```\n",
    "text": "isInteger",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "String",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromCodePoint",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromCharCode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "Char",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "Number",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "Ascii",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromAsciiNumber",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromNumber",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromCode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromNumberCode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gap with a method introduced in ES6 such that the log statement is correct:\n\n```javascript\nconsole.log(???.???(70))\n// F\n```\n",
    "text": "fromNumberPoint",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What should go in the missing gap such that the log statement is correct?\n\n```javascript\nconsole.log(String.fromCharCode(90))\n// Z\nconsole.log(String.fromCodePoint(90))\n// ???\n```\n",
    "text": "Z",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What should go in the missing gap such that the log statement is correct?\n\n```javascript\nconsole.log(String.fromCharCode(90))\n// Z\nconsole.log(String.fromCodePoint(90))\n// ???\n```\n",
    "text": "z",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What should go in the missing gap such that the log statement is correct?\n\n```javascript\nconsole.log(String.fromCharCode(90))\n// Z\nconsole.log(String.fromCodePoint(90))\n// ???\n```\n",
    "text": "a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What should go in the missing gap such that the log statement is correct?\n\n```javascript\nconsole.log(String.fromCharCode(90))\n// Z\nconsole.log(String.fromCodePoint(90))\n// ???\n```\n",
    "text": "90.0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What should go in the missing gap such that the log statement is correct?\n\n```javascript\nconsole.log(String.fromCharCode(90))\n// Z\nconsole.log(String.fromCodePoint(90))\n// ???\n```\n",
    "text": "90",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "${",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "dayName",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "}",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "${dayNumber}",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "year",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "dayNumber",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "${dayName}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "${year}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the gaps such that the log is correct:\n\n```javascript\nconst dayName = 'Thursday'\nconst dayNumber = '12';\nconst year = '2018'\n\nconst str = `Today is:\n??? ??? ???\n???\n${???}\n`\n\nconsole.log(str)\n/*\nToday is:\nThursday\n12\n2018\n*/\n```\n",
    "text": "${dayNumber",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "${name}",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "{name}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "$name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "&{name}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "%{name}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "%name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the template literal syntax:\n\n```javascript\nvar name = 'Enki'\nconsole.log(`Hello from ???`)\n```\n",
    "text": "&name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "for",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "Symbol",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "'enki'",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "keyFor",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "\"Enki\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "sym1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "sym2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "access",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the logs are correct:\n\n```javascript\nconst sym1 = Symbol.???('enki')\nconst sym2 = ???.for(???)\n\nconsole.log(sym1 === sym2)\n// true\n\nconsole.log(Symbol.???(sym1))\n// \"enki\"\n```\n",
    "text": "key",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "true",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "\"enki\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "sym2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "register",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following expressions?\n\n```javascript\nconst sym1 = Symbol.for('enki')\nconst sym2 = Symbol.for('enki')\n\nconsole.log(sym1 === sym2)\n// ???\n\nconsole.log(Symbol.keyFor(sym1))\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "none",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1 and 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "2 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "2 and 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1 and 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "3 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1, 2 and 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1, 3 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1, 2 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "1, 2, 3 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following object:\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 'hello'\n```\n\nWhich of the following code snippets will return the symbol key when called?\n\n???\n",
    "text": "2, 3 and 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be returned by the following call?\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 1\nobj[Symbol()] = 2\n\nconsole.log(\n  Object.getOwnPropertyNames(obj)\n)\n// ???\n```\n",
    "text": "[]",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be returned by the following call?\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 1\nobj[Symbol()] = 2\n\nconsole.log(\n  Object.getOwnPropertyNames(obj)\n)\n// ???\n```\n",
    "text": "['Symbol()']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be returned by the following call?\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 1\nobj[Symbol()] = 2\n\nconsole.log(\n  Object.getOwnPropertyNames(obj)\n)\n// ???\n```\n",
    "text": "['Symbol(enki)']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be returned by the following call?\n\n```javascript\nconst obj = {}\nobj[Symbol('enki')] = 1\nobj[Symbol()] = 2\n\nconsole.log(\n  Object.getOwnPropertyNames(obj)\n)\n// ???\n```\n",
    "text": "['Symbol()', 'Symbol(enki)']",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "Symbol(enki)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "\"symbol\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "false",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "Enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "\"enki\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "Symbol(\"Enki\")",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "\"number\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be the output of the following statements ?\n\n```javascript\nconst sym1 = Symbol('enki')\nconsole.log(sym1)\n// ???\n\nconsole.log(typeof sym1)\n// ???\n\nconst sym2 = Symbol('enki')\nconsole.log(sym1 === sym2)\n// ???\n```\n",
    "text": "\"primitive\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you create a `Symbol` in ES6?\n\n```javascript\n// a\nconst sym = new Symbol('enki')\n\n// b\nconst sym = Symbol.create('enki')\n\n// c\nconst sym = Symbol('enki')\n\n// d\nconst sym = Symbol.new('enki')\n```\n\n???\n",
    "text": "c",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you create a `Symbol` in ES6?\n\n```javascript\n// a\nconst sym = new Symbol('enki')\n\n// b\nconst sym = Symbol.create('enki')\n\n// c\nconst sym = Symbol('enki')\n\n// d\nconst sym = Symbol.new('enki')\n```\n\n???\n",
    "text": "a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you create a `Symbol` in ES6?\n\n```javascript\n// a\nconst sym = new Symbol('enki')\n\n// b\nconst sym = Symbol.create('enki')\n\n// c\nconst sym = Symbol('enki')\n\n// d\nconst sym = Symbol.new('enki')\n```\n\n???\n",
    "text": "b",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you create a `Symbol` in ES6?\n\n```javascript\n// a\nconst sym = new Symbol('enki')\n\n// b\nconst sym = Symbol.create('enki')\n\n// c\nconst sym = Symbol('enki')\n\n// d\nconst sym = Symbol.new('enki')\n```\n\n???\n",
    "text": "d",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "Symbol",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "iterator",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "match",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "iterate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "symbol",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "Symbol(Symbol",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "iterator)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special `Symbol` is used internally to implement the iteration protocol?\n\n```javascript\nlet arr = ['a', 'b', 'c']\nlet it = arr[???.???]()\nconsole.log(it.next().value)\n// a\nconsole.log(it.next().value)\n// b\n```\n",
    "text": "iterate)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call to the Symbol Registry return?\n\n```javascript\nconsole.log(\n  Symbol.keyFor(Symbol.iterator)\n)\n// ???\n```\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following call to the Symbol Registry return?\n\n```javascript\nconsole.log(\n  Symbol.keyFor(Symbol.iterator)\n)\n// ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call to the Symbol Registry return?\n\n```javascript\nconsole.log(\n  Symbol.keyFor(Symbol.iterator)\n)\n// ???\n```\n",
    "text": "\"Iterator\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call to the Symbol Registry return?\n\n```javascript\nconsole.log(\n  Symbol.keyFor(Symbol.iterator)\n)\n// ???\n```\n",
    "text": "\"iterate\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call to the Symbol Registry return?\n\n```javascript\nconsole.log(\n  Symbol.keyFor(Symbol.iterator)\n)\n// ???\n```\n",
    "text": "\"internalIterator\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about Symbols?\n\n???\n",
    "text": "Symbols can be overwritten",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is false about Symbols?\n\n???\n",
    "text": "Symbols can be used as constants",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about Symbols?\n\n???\n",
    "text": "Symbols are immutable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is true about Symbols?\n\n???\n",
    "text": "Symbols are unique and immutable",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is true about Symbols?\n\n???\n",
    "text": "Symbols can be overwritten",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is true about Symbols?\n\n???\n",
    "text": "Symbols can't be used by libraries",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is true about Symbols?\n\n???\n",
    "text": "Symbols are unique and mutable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What kind of object is `process.env`?\n\n???\n",
    "text": "live",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What kind of object is `process.env`?\n\n???\n",
    "text": "plain JavaScript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What kind of object is `process.env`?\n\n???\n",
    "text": "static",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What kind of object is `process.env`?\n\n???\n",
    "text": "immutable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the followin scenarios do you think would perform better:\n\n```shell\n$ COPY=\"Enki\" node index.js\n```\n\n```javascript\n// index.js\n\n// A\nconst copy = process.env.COPY;\nfor (x = 0; i < 10; i++) {\n  console.log('I am ', copy);\n}\n\n// B\nfor (y = 0; y < 10; y++) {\n  console.log('I am ', process.env.COPY);\n}\n\n// both will print 'I am Enki' 9 times\n```\n\n???\n",
    "text": "A",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the followin scenarios do you think would perform better:\n\n```shell\n$ COPY=\"Enki\" node index.js\n```\n\n```javascript\n// index.js\n\n// A\nconst copy = process.env.COPY;\nfor (x = 0; i < 10; i++) {\n  console.log('I am ', copy);\n}\n\n// B\nfor (y = 0; y < 10; y++) {\n  console.log('I am ', process.env.COPY);\n}\n\n// both will print 'I am Enki' 9 times\n```\n\n???\n",
    "text": "B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the followin scenarios do you think would perform better:\n\n```shell\n$ COPY=\"Enki\" node index.js\n```\n\n```javascript\n// index.js\n\n// A\nconst copy = process.env.COPY;\nfor (x = 0; i < 10; i++) {\n  console.log('I am ', copy);\n}\n\n// B\nfor (y = 0; y < 10; y++) {\n  console.log('I am ', process.env.COPY);\n}\n\n// both will print 'I am Enki' 9 times\n```\n\n???\n",
    "text": "same performance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify an advantage of using monoliths in the following list?\n\n???\n\nWhat about one of using microservices?\n\n???\n",
    "text": "Common code is easily accessed.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you identify an advantage of using monoliths in the following list?\n\n???\n\nWhat about one of using microservices?\n\n???\n",
    "text": "Easy to reason about each component's job.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Can you identify an advantage of using monoliths in the following list?\n\n???\n\nWhat about one of using microservices?\n\n???\n",
    "text": "A lot of time has to be spent to properly design the system.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify an advantage of using monoliths in the following list?\n\n???\n\nWhat about one of using microservices?\n\n???\n",
    "text": "Hard to scale.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you point out the main reason for breaking up big projects into microservices?\n\n???\n",
    "text": "To lower complexity.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you point out the main reason for breaking up big projects into microservices?\n\n???\n",
    "text": "To decrease the number of dependencies.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you point out the main reason for breaking up big projects into microservices?\n\n???\n",
    "text": "To encourage the use of APIs.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you point out the main reason for breaking up big projects into microservices?\n\n???\n",
    "text": "To hire more developers.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify a property of microservices?\n\n```javascript\nWhich of the following properties defines microservices?\n```\n\n ???\n",
    "text": "Modularity",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you identify a property of microservices?\n\n```javascript\nWhich of the following properties defines microservices?\n```\n\n ???\n",
    "text": "Tight coupling",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify a property of microservices?\n\n```javascript\nWhich of the following properties defines microservices?\n```\n\n ???\n",
    "text": "Anonymity",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify a property of microservices?\n\n```javascript\nWhich of the following properties defines microservices?\n```\n\n ???\n",
    "text": "Low computational power",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you are using `npm`, where can you usually find the frozen versions of your packages?\n\n???\n",
    "text": "npm-shrinkwrap.json",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If you are using `npm`, where can you usually find the frozen versions of your packages?\n\n???\n",
    "text": "yarn-shrinkwrap.json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you are using `npm`, where can you usually find the frozen versions of your packages?\n\n???\n",
    "text": "package.json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you are using `npm`, where can you usually find the frozen versions of your packages?\n\n???\n",
    "text": "frozen-package.json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you remember what is tested by `nsp`'s ESlint plugin?\n\n???\n",
    "text": "insecure coding patterns",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you remember what is tested by `nsp`'s ESlint plugin?\n\n???\n",
    "text": "stack overflows",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you remember what is tested by `nsp`'s ESlint plugin?\n\n???\n",
    "text": "static typing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you remember what is tested by `nsp`'s ESlint plugin?\n\n???\n",
    "text": "typos",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can easily share common code between repositories by using\n\n???\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can easily share common code between repositories by using\n\n???\n",
    "text": "USB stick",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can easily share common code between repositories by using\n\n???\n",
    "text": "Dropbox",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can easily share common code between repositories by using\n\n???\n",
    "text": "git",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In other words, breaking up mixed code into self-contained components means\n\n???\n",
    "text": "modularizing it",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In other words, breaking up mixed code into self-contained components means\n\n???\n",
    "text": "fixing bugs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In other words, breaking up mixed code into self-contained components means\n\n???\n",
    "text": "encapsulating it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In other words, breaking up mixed code into self-contained components means\n\n???\n",
    "text": "designing it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is it that you usually use NPM for?\n\nWhat is usually shared on NPM?\n\n???\n",
    "text": "Bundled code",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is it that you usually use NPM for?\n\nWhat is usually shared on NPM?\n\n???\n",
    "text": "Cat pictures",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is it that you usually use NPM for?\n\nWhat is usually shared on NPM?\n\n???\n",
    "text": "Bug reports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is it that you usually use NPM for?\n\nWhat is usually shared on NPM?\n\n???\n",
    "text": "Database keys",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order for the brackets placement to be less prone to error and consistent throughout the project, it is recommended that you use style ??? in your code:\n\n```javascript\n// style A\nfunction A() {\n  return {\n    style: 'A',\n  };\n}\n\n// style B\n\nfunction B()         {\n  return             {\n    style: 'B'\n                     }\n                     }\n\n// style C\nfunction C()\n{\n  return\n  {\n    style: 'C',\n  };\n}\n```\n",
    "text": "A",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In order for the brackets placement to be less prone to error and consistent throughout the project, it is recommended that you use style ??? in your code:\n\n```javascript\n// style A\nfunction A() {\n  return {\n    style: 'A',\n  };\n}\n\n// style B\n\nfunction B()         {\n  return             {\n    style: 'B'\n                     }\n                     }\n\n// style C\nfunction C()\n{\n  return\n  {\n    style: 'C',\n  };\n}\n```\n",
    "text": "B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order for the brackets placement to be less prone to error and consistent throughout the project, it is recommended that you use style ??? in your code:\n\n```javascript\n// style A\nfunction A() {\n  return {\n    style: 'A',\n  };\n}\n\n// style B\n\nfunction B()         {\n  return             {\n    style: 'B'\n                     }\n                     }\n\n// style C\nfunction C()\n{\n  return\n  {\n    style: 'C',\n  };\n}\n```\n",
    "text": "C",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the JavaScript language feature acting upon the following return clause?\n\n```js\nfunction tictac() {\n  return\n  {\n    missing: 'toe',\n  };\n}\n```\n\n???\n",
    "text": "Automatic semicolon insertion",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the name of the JavaScript language feature acting upon the following return clause?\n\n```js\nfunction tictac() {\n  return\n  {\n    missing: 'toe',\n  };\n}\n```\n\n???\n",
    "text": "Scoping",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the JavaScript language feature acting upon the following return clause?\n\n```js\nfunction tictac() {\n  return\n  {\n    missing: 'toe',\n  };\n}\n```\n\n???\n",
    "text": "Automatic bracket placement",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the JavaScript language feature acting upon the following return clause?\n\n```js\nfunction tictac() {\n  return\n  {\n    missing: 'toe',\n  };\n}\n```\n\n???\n",
    "text": "Object property creation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nfunction pi() {\n  return\n  {\n    pi: 3.14\n  }\n}\nconsole.log(pi())\n```\n\n ???\n",
    "text": "undefined",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nfunction pi() {\n  return\n  {\n    pi: 3.14\n  }\n}\nconsole.log(pi())\n```\n\n ???\n",
    "text": "[object Object]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nfunction pi() {\n  return\n  {\n    pi: 3.14\n  }\n}\nconsole.log(pi())\n```\n\n ???\n",
    "text": "SyntaxError",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following snippet output?\n\n```javascript\nfunction pi() {\n  return\n  {\n    pi: 3.14\n  }\n}\nconsole.log(pi())\n```\n\n ???\n",
    "text": "[object Object]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true or false?\n\nESLint can be integrated with text editors and IDEs.\n\n???\n",
    "text": "True",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following statement true or false?\n\nESLint can be integrated with text editors and IDEs.\n\n???\n",
    "text": "False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A linter is, among others, ???\n",
    "text": "a set of rules for coding style",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A linter is, among others, ???\n",
    "text": "a set of rules concerning modularity",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A linter is, among others, ???\n",
    "text": "a Node.js extension",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A linter is, among others, ???\n",
    "text": "an offline Node.js compiler  ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`function`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`err`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`data`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`if (err)`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`else`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`log(data)`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`er`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`myData`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Implement a simple error-first callback function that will log the `err` if there is an error. Otherwise, it should log the data:\n\n```javascript\ndoSomethingWithCallback(???(???, ???) {\n  ??? {\n    console.log(err)\n  } ??? {\n    console.???\n  }\n})\n```\n",
    "text": "`fn`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the parameters of an error-first callback function?\n\n```javascript\nfunction(???, ???) {\n  // ...\n}\n```\n",
    "text": "`err`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the parameters of an error-first callback function?\n\n```javascript\nfunction(???, ???) {\n  // ...\n}\n```\n",
    "text": "`data`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the parameters of an error-first callback function?\n\n```javascript\nfunction(???, ???) {\n  // ...\n}\n```\n",
    "text": "`fileNotFound`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the parameters of an error-first callback function?\n\n```javascript\nfunction(???, ???) {\n  // ...\n}\n```\n",
    "text": "`log`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the parameters of an error-first callback function?\n\n```javascript\nfunction(???, ???) {\n  // ...\n}\n```\n",
    "text": "`null`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is required when you're handling a `JSON.parse` error in Node? \n\n???\n",
    "text": "a try/catch",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is required when you're handling a `JSON.parse` error in Node? \n\n???\n",
    "text": "an if statement",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is required when you're handling a `JSON.parse` error in Node? \n\n???\n",
    "text": "a loop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is required when you're handling a `JSON.parse` error in Node? \n\n???\n",
    "text": "an error message",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of function is `JSON.parse` ?\n\n???\n",
    "text": "synchronous",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of function is `JSON.parse` ?\n\n???\n",
    "text": "asynchronous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the correct declaration of a `try-catch` block? ???\n\n```javascript\n// Option A\ntry (\n   // code\n) catch {exception} (\n   // return exception\n);\n\n// Option B\ntry {\n   // code\n} catch {\n   // return exception\n}\n\n// Option C\ntry {\n   // code\n} catch (exception) {\n   // return exception\n}\n```\n",
    "text": "Option C",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is the correct declaration of a `try-catch` block? ???\n\n```javascript\n// Option A\ntry (\n   // code\n) catch {exception} (\n   // return exception\n);\n\n// Option B\ntry {\n   // code\n} catch {\n   // return exception\n}\n\n// Option C\ntry {\n   // code\n} catch (exception) {\n   // return exception\n}\n```\n",
    "text": "Option A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the correct declaration of a `try-catch` block? ???\n\n```javascript\n// Option A\ntry (\n   // code\n) catch {exception} (\n   // return exception\n);\n\n// Option B\ntry {\n   // code\n} catch {\n   // return exception\n}\n\n// Option C\ntry {\n   // code\n} catch (exception) {\n   // return exception\n}\n```\n",
    "text": "Option B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How must errors happen as to handle them with a `try-catch` block?\n\n???\n",
    "text": "synchronously",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How must errors happen as to handle them with a `try-catch` block?\n\n???\n",
    "text": "asynchronously",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "on",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "'uncaughtException'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "uncaughtException",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "listen",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "addEventListener",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "process",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "watch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "'exception'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you catch unhandled exceptions in your NodeJS code, using an event listener?\n\n```javascript\nprocess.???(???,\n  function(err) {\n    console.log('caught')\n  })\n```\n",
    "text": "exception",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "on",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "uncaughtException",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "uncaught",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "any",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "undefinedState",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so `uncaughtException`s are handled:\n\n```javascript\nprocess.???('???',\n  function(err) {\n     console.log('exception: ' + err);\n  }\n)\n```\n",
    "text": "listen",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? is used to combine errors. ??? is used to wrap errors.\n",
    "text": "VError",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "??? is used to combine errors. ??? is used to wrap errors.\n",
    "text": "WError",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "??? is used to combine errors. ??? is used to wrap errors.\n",
    "text": "Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two classes does the `node-verror` provide?\n\n???\n",
    "text": "VError & WError",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What two classes does the `node-verror` provide?\n\n???\n",
    "text": "VError & Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two classes does the `node-verror` provide?\n\n???\n",
    "text": "WError & Error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What two classes does the `node-verror` provide?\n\n???\n",
    "text": "VError & WrapError",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a callback to the object in case of an 'edit' event:\n\n```javascript\nsystem.file.???(\n  '???',\n  function(fileID, initials) {}\n)\n```\n",
    "text": "on",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to add a callback to the object in case of an 'edit' event:\n\n```javascript\nsystem.file.???(\n  '???',\n  function(fileID, initials) {}\n)\n```\n",
    "text": "edit",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to add a callback to the object in case of an 'edit' event:\n\n```javascript\nsystem.file.???(\n  '???',\n  function(fileID, initials) {}\n)\n```\n",
    "text": "event",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a callback to the object in case of an 'edit' event:\n\n```javascript\nsystem.file.???(\n  '???',\n  function(fileID, initials) {}\n)\n```\n",
    "text": "event=edit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a callback to the object in case of an 'edit' event:\n\n```javascript\nsystem.file.???(\n  '???',\n  function(fileID, initials) {}\n)\n```\n",
    "text": "callback",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is called to register a callback function to run when an event is triggered?\n???\n",
    "text": ".on",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is called to register a callback function to run when an event is triggered?\n???\n",
    "text": ".event",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is called to register a callback function to run when an event is triggered?\n???\n",
    "text": ".start",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\ntest.on(‘uncaughtException’, function(err)\n{\n  console.error(‘uncaught exception: ‘,\n                    err.stack || err);\n\n\n  closeApp(function(err) {\n    if (err)\n      // error closing down\n\n\n    test.exit(1);\n  });\n\n});\n```\n\nWhat event type is emitted by the `test` event emitter object?\n???\n",
    "text": "uncaughtException",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\ntest.on(‘uncaughtException’, function(err)\n{\n  console.error(‘uncaught exception: ‘,\n                    err.stack || err);\n\n\n  closeApp(function(err) {\n    if (err)\n      // error closing down\n\n\n    test.exit(1);\n  });\n\n});\n```\n\nWhat event type is emitted by the `test` event emitter object?\n???\n",
    "text": "eventFailure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\ntest.on(‘uncaughtException’, function(err)\n{\n  console.error(‘uncaught exception: ‘,\n                    err.stack || err);\n\n\n  closeApp(function(err) {\n    if (err)\n      // error closing down\n\n\n    test.exit(1);\n  });\n\n});\n```\n\nWhat event type is emitted by the `test` event emitter object?\n???\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when the event emitter emits an event with no attached listeners?\n???\n",
    "text": "Event is ignored.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What happens when the event emitter emits an event with no attached listeners?\n???\n",
    "text": "Event is thrown into the event loop.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What happens when the event emitter emits an event with no attached listeners?\n???\n",
    "text": "Event causes an error.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to add a one-time listener function to an event emitter?\n\n???\n",
    "text": ".once",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is used to add a one-time listener function to an event emitter?\n\n???\n",
    "text": ".first",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to add a one-time listener function to an event emitter?\n\n???\n",
    "text": ".instance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to define the callback function to catch an event just once:\n\n```javascript\ntest.???('uncaughtException',\n    function(err) {\n      // handler\n    }\n```\n",
    "text": "once",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to define the callback function to catch an event just once:\n\n```javascript\ntest.???('uncaughtException',\n    function(err) {\n      // handler\n    }\n```\n",
    "text": "on",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to define the callback function to catch an event just once:\n\n```javascript\ntest.???('uncaughtException',\n    function(err) {\n      // handler\n    }\n```\n",
    "text": "catch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to define the callback function to catch an event just once:\n\n```javascript\ntest.???('uncaughtException',\n    function(err) {\n      // handler\n    }\n```\n",
    "text": "one",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to define the callback function to catch an event just once:\n\n```javascript\ntest.???('uncaughtException',\n    function(err) {\n      // handler\n    }\n```\n",
    "text": "onOnce",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `this` refer to inside of a callback registered to listen to an event on an `EventEmitter`?\n???\n",
    "text": "The instance of `EventEmitter`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does `this` refer to inside of a callback registered to listen to an event on an `EventEmitter`?\n???\n",
    "text": "global",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `this` refer to inside of a callback registered to listen to an event on an `EventEmitter`?\n???\n",
    "text": "event",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `this` refer to inside of a callback registered to listen to an event on an `EventEmitter`?\n???\n",
    "text": "window",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is the delivery of events treated in Node?\n\n???\n",
    "text": "synchronously",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How is the delivery of events treated in Node?\n\n???\n",
    "text": "asynchronously",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is the delivery of events treated in Node?\n\n???\n",
    "text": "instantly",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How is the delivery of events treated in Node?\n\n???\n",
    "text": "random",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "urlencoded",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "false",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "parse",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "encoded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Parse `x-ww-form-urlencoded`:\n\n```javascript\napp.use(\n  bodyParser.???({\n   extended: ???\n}));\n```\n",
    "text": "json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "use",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "json",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "json()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "app",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "urlencoded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\n//parse application/json\napp.???(bodyParser.???());\n```\n",
    "text": "jsonParser",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "serveStatic",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "serve-static",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "expressHTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "express-html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "staticExpress",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "static-express",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "nodeHTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Require the requisite module used to deliver  HTML pages:\n\n```javascript\nvar ??? = require('???');\n```\n",
    "text": "node-html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What express module can be used to easily deliver HTML pages?\n???\n",
    "text": "serve-static",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What express module can be used to easily deliver HTML pages?\n???\n",
    "text": "express-html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What express module can be used to easily deliver HTML pages?\n???\n",
    "text": "easy-html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What express module can be used to easily deliver HTML pages?\n???\n",
    "text": "static-express",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What express module can be used to easily deliver HTML pages?\n???\n",
    "text": "node-html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which express module is designed as a development only error handling middleware?\n\n???\n",
    "text": "errorhandler",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which express module is designed as a development only error handling middleware?\n\n???\n",
    "text": "error-handler",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which express module is designed as a development only error handling middleware?\n\n???\n",
    "text": "error-handling",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which express module is designed as a development only error handling middleware?\n\n???\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "errorhandler",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "errorNotification",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "log",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you have a `errorNotification` method. Complete the snippet below as to make `errorhandler` constructor take the method as an argument for `log`:\n\n```javascript\napp.use(???({\n  log: ???});\n```\n",
    "text": "errorHandler",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "clearCookie",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "'my-rogue-cookie'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "send",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "'There is an error'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "503",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "404",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "eraseCookie",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "emptyCookie",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "cookie",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "myRogueCookie",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "back",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "respond",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the response object proposed by the Express library.\n\nHow would you clear the cookie `my-rogue-cookie`?\n\n```javascript\nres.???(???)\n```\n\nIf an error happened we would like to send a \"There is an error\" message to the client. Implement this, together with a **503** status code in the following snippet:\n\n```javascript\nres.???(???, ???)\n```\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "json",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "myJson",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "status",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "send",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "format",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "render",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "cookie",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "toJSON",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Send the given JSON file back to the client user Express's `response` object:\n\n```javascript\nvar myJson; // equal to json we want to send\n//...\nres.???(???);\n```\n",
    "text": "sendJSON",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "router",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "next",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "next()",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "callback()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "done()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "env",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the below code snippet:\n\n    ???.use(\n      function(req, res, ???) {\n        console.log(req.method, req.url);\n        ???;\n    });\n",
    "text": "app",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "res",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "send",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "use",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "req",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "app",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create `simple` route:\n\n```javascript\napp.???('/simple', function(req, res) {\n  ???.???('Simple route accessed!');\n```\n",
    "text": "router",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "require",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "cookie-session",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "cookies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "session",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "import",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the needed module for implementing sessions in **Express** with the help of cookies:\n\n    var cookieSess = ???('???');\n",
    "text": "cookie-express",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "'compression'",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "'express'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "use",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "compress()",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "compress",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "'compress'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "enable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you enable GZIP compression for express 4.0?\n\n```javascript\nconst compress = require(???)\nconst express = require(???)\n\n// ...\napp.???(???)\n```\n",
    "text": "allow",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply *gzip compression* for **Express 3.0**:\n\n```javascript\napp.???(express.???());\n```\n",
    "text": "use",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Apply *gzip compression* for **Express 3.0**:\n\n```javascript\napp.???(express.???());\n```\n",
    "text": "compress",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Apply *gzip compression* for **Express 3.0**:\n\n```javascript\napp.???(express.???());\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply *gzip compression* for **Express 3.0**:\n\n```javascript\napp.???(express.???());\n```\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply *gzip compression* for **Express 3.0**:\n\n```javascript\napp.???(express.???());\n```\n",
    "text": "apply",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "format",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "options",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "etc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "expressVersion",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which are the two parameters allowed in the `morgan` constructor?\n\n```javascript\nconst morgan = require('morgan')\n\n// ...\napp.use(morgan(???, ???))\n```\n",
    "text": "version",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "use",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "morgan",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "skip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "immediate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "express",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "install",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "make",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use `morgan` logger in express with `tiny` format:\n\n```javascript\napp.???(???('tiny'));\n```\n",
    "text": "logger",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "res",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "req",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "fetch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "this",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "sess",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "session",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "app",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "func",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.???('/', function(req, ???) {\n   sess = ???.session;\n}\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "req",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "session",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "res",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "sess",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "mySession",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you access sessions through the request object?\n\n```javascript\napp.get('/', function(req,res) {\n   mySession = ???.???;\n\n}\n```\n",
    "text": "request",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once the host is matched and the request sent to the handler, the `req.vhost` property will be populated with... ???\n",
    "text": "an object with numeric properties corresponding to every wildcard and hostname.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Once the host is matched and the request sent to the handler, the `req.vhost` property will be populated with... ???\n",
    "text": "an object for each wildcard and hostname.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once the host is matched and the request sent to the handler, the `req.vhost` property will be populated with... ???\n",
    "text": "an object per set of wildcards and hostnames.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once the host is matched and the request sent to the handler, the `req.vhost` property will be populated with... ???\n",
    "text": "a single hostname and a single wildcard.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "hostname",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "handler",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "app",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "connect",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What parameters does the `vhost` parameter need ?\n\n```javascript\nvhost(???, ???);\n```\n",
    "text": "req.vhost",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "fs",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "writeFile",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "'myFile'",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "'XXYYZ'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "{ encoding: 'xyz' }",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "FS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "FileSystem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "writeFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "write",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "new myFile()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "XXYYZ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "{ xyz: true }",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "{ xyz }",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose there is a custom file encoding named `xyz`.\n\nUsing the built-in File System module of NodeJS, how would you write \"XXYYZ\" to `myFile`? Remember you must manually set the encoding.\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???,\n  ???, (err) => {\n    console.log(err)\n  }\n```\n",
    "text": "customEncode(xyz)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "fs",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "writeFile",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "'enki.txt'",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "'hello'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "hello",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "enki.txt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "FileSystem",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the FileSystem module, write \"hello\" to `enki.txt`:\n\n```javascript\nconst fs = require('fs')\n\n???.???(???, ???)\n```\n",
    "text": "writeFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "writeFile",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "readFile",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "write",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "read",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "writeAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "readAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "writeFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` writes to a file asynchronously?\n\n???\n\nWhich method reads from a file asynchronously?\n\n???\n",
    "text": "readFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "asynchronous",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "fs",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "readFile",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "synchronous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "doesn't matter",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "path",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "file-system",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "readFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "read",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of methods are recommended to be used for file writing/reading so that program execution is never blocked?\n\n???\n\nWhich NodeJS module exposes methods for file writing and reading?\n\n???\n\nIn this module, which method is meant to read from files asynchronously?\n\n???\n",
    "text": "fileRead",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "require('fs')",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "fs",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "readFileSync",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "fileReader",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "FileReader",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "readFile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "readFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import the necessary module and fill in the gaps to read `file.txt` synchronously:\n\n```javascript\nconst fs = ???\n\n???.???('file.txt')\n```\n",
    "text": "readFileTxt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "writeFileSync",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "writeSyncFile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "writeSync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "write",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "writeFileAsync",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method of `fs` can be used to write from a file in a synchronous fashion?\n\n```javascript\nconst fs = require('fs')\n\nfs.???(file, data)\n```\n",
    "text": "writeFile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "enki.js",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "nodejs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the file `enki.js`:\n\n```javascript\n// enki.js\nconsole.log('Hello, Enki!')\n```\n\nHow would you run from the terminal interface the code in the file, using the NodeJS interpreter:\n\n```bash\n$ ??? ???\n# Hello, Enki!\n```\n",
    "text": "enkijs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "compile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "js",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "javascript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "java",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you run the code existing within `main.js`\n\n```bash\n$ ??? main.js\n# main.js is ran\n```\n",
    "text": "nodeJS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What file extension does `node` use?\n???\n",
    "text": ".js",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What file extension does `node` use?\n???\n",
    "text": ".javascript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What file extension does `node` use?\n???\n",
    "text": ".jscript",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is required to start Node?\n???\n",
    "text": "node",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command is required to start Node?\n???\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command is required to start Node?\n???\n",
    "text": "start",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to check you're using the latest NPM version:\n\n    npm install npm@???\n",
    "text": "latest -g",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to check you're using the latest NPM version:\n\n    npm install npm@???\n",
    "text": "latest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to check you're using the latest NPM version:\n\n    npm install npm@???\n",
    "text": "latest -v",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to install a package from NPM:\n\n    > npm ??? <package>\n",
    "text": "install",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to install a package from NPM:\n\n    > npm ??? <package>\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to install a package from NPM:\n\n    > npm ??? <package>\n",
    "text": "download",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following print?\n\n```bash\n$ node\n> 3 + 7 * 3 - 4\n```\n\n???\n",
    "text": "20",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following print?\n\n```bash\n$ node\n> 3 + 7 * 3 - 4\n```\n\n???\n",
    "text": "command not found: 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following print?\n\n```bash\n$ node\n> 3 + 7 * 3 - 4\n```\n\n???\n",
    "text": "26",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following print?\n\n```bash\n$ node\n> 3 + 7 * 3 - 4\n```\n\n???\n",
    "text": "-10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does REPL stand for?\n???\n",
    "text": "Read, Eval, Print, Loop",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does REPL stand for?\n???\n",
    "text": "Read, Equal, Process, Loop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does REPL stand for?\n???\n",
    "text": "Reiterate, Else, Print, Loop",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can Node be used to create?\n???\n",
    "text": "server-side applications",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What can Node be used to create?\n???\n",
    "text": "client-side applications",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is Node synchronous or asynchronous?\n???\n",
    "text": "asynchronous",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is Node synchronous or asynchronous?\n???\n",
    "text": "synchronous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following JavaScript code? ???\n\n```javascript\nmodule.exports = ['a', 'k', 'K', 'y', 'a'];\n\nvar test = require('./other.js');\n\nconsole.log(test[2]);\nconsole.log(test[4]);\nconsole.log(test[3]);\nconsole.log(test[0]);\nconsole.log(test[1]);\n```\n",
    "text": "Kayak",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the output of the following JavaScript code? ???\n\n```javascript\nmodule.exports = ['a', 'k', 'K', 'y', 'a'];\n\nvar test = require('./other.js');\n\nconsole.log(test[2]);\nconsole.log(test[4]);\nconsole.log(test[3]);\nconsole.log(test[0]);\nconsole.log(test[1]);\n```\n",
    "text": "kayak",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following JavaScript code? ???\n\n```javascript\nmodule.exports = ['a', 'k', 'K', 'y', 'a'];\n\nvar test = require('./other.js');\n\nconsole.log(test[2]);\nconsole.log(test[4]);\nconsole.log(test[3]);\nconsole.log(test[0]);\nconsole.log(test[1]);\n```\n",
    "text": "kayaK",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following JavaScript code? ???\n\n```javascript\nmodule.exports = ['a', 'k', 'K', 'y', 'a'];\n\nvar test = require('./other.js');\n\nconsole.log(test[2]);\nconsole.log(test[4]);\nconsole.log(test[3]);\nconsole.log(test[0]);\nconsole.log(test[1]);\n```\n",
    "text": "ayakK",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the output of the following JavaScript code? ???\n\n```javascript\nmodule.exports = ['a', 'k', 'K', 'y', 'a'];\n\nvar test = require('./other.js');\n\nconsole.log(test[2]);\nconsole.log(test[4]);\nconsole.log(test[3]);\nconsole.log(test[0]);\nconsole.log(test[1]);\n```\n",
    "text": "yakaK",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`exports` is a helper for?\n???\n",
    "text": "module.exports",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`exports` is a helper for?\n???\n",
    "text": "module.imports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`exports` is a helper for?\n???\n",
    "text": "module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`exports` is a helper for?\n???\n",
    "text": "imports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "require",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "myModule",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "hello()",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "hello",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "req",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "import",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "myFile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following local node module:\n\n```javascript\n// myModule.js\nmodule.exports = {\n  hello: function() {\n    console.log('Hello from Enki')\n  }\n}\n```\n\nHow would you import and use it in your application?\n\n```javascript\n// main.js\nvar myModule = ???('./myModule.js')\n\n???.???\n```\n\nRunning `$ node myModule` should log \"Hello from Enki\".\n",
    "text": "myLocalModule",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following module types must have its path specified when requiring it?\n\n???\n",
    "text": "local",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following module types must have its path specified when requiring it?\n\n???\n",
    "text": "core",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What must be used when exporting an anonymous function?\n???\n",
    "text": "module.exports",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What must be used when exporting an anonymous function?\n???\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What must be used when exporting an anonymous function?\n???\n",
    "text": "exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to export the named function:\n\n```javascript\n// module.js\nexports.foo = function() {\n\n  console.log('Named!');\n\n}\n\n// main.js\nvar foo = require('./module.js'???;\nfoo();\n```\n",
    "text": ").foo",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to export the named function:\n\n```javascript\n// module.js\nexports.foo = function() {\n\n  console.log('Named!');\n\n}\n\n// main.js\nvar foo = require('./module.js'???;\nfoo();\n```\n",
    "text": ")",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to export the named function:\n\n```javascript\n// module.js\nexports.foo = function() {\n\n  console.log('Named!');\n\n}\n\n// main.js\nvar foo = require('./module.js'???;\nfoo();\n```\n",
    "text": ").module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to export the named function:\n\n```javascript\n// module.js\nexports.foo = function() {\n\n  console.log('Named!');\n\n}\n\n// main.js\nvar foo = require('./module.js'???;\nfoo();\n```\n",
    "text": ").exports",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is included in all JavaScript files by default?\n???\n",
    "text": "module.exports",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is included in all JavaScript files by default?\n???\n",
    "text": "module.module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is included in all JavaScript files by default?\n???\n",
    "text": "module.object",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to import `module.js`:\n\n    var mod = ???('./module.js');\n",
    "text": "require",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to import `module.js`:\n\n    var mod = ???('./module.js');\n",
    "text": "export",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to import `module.js`:\n\n    var mod = ???('./module.js');\n",
    "text": "load",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about node modules do you consider false?\n\n???\n",
    "text": "using modules will increase the performance of you application",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements about node modules do you consider false?\n\n???\n",
    "text": "using modules can reduce the amount of code per file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about node modules do you consider false?\n\n???\n",
    "text": "using modules can make your code easier to maintain and code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where are third party Node.js modules installed to?\n???\n",
    "text": "node_modules",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Where are third party Node.js modules installed to?\n???\n",
    "text": "local_modules",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where are third party Node.js modules installed to?\n???\n",
    "text": "libraries",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where are third party Node.js modules installed to?\n???\n",
    "text": "libs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what will be the stack trace of the following snippet?\n\n```javascript\nconst throw_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      throw new Error('throw_example');\n    }, 0);\n  });\n};\n\nconst reject_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('reject_example'));\n    }, 0);\n  });\n};\n\nconst main = async () => {\n  try {\n    await reject_example();\n    await throw_example();\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nmain();\n```\n\n???\n",
    "text": "No error shown, only the message `reject_example`.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you identify what will be the stack trace of the following snippet?\n\n```javascript\nconst throw_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      throw new Error('throw_example');\n    }, 0);\n  });\n};\n\nconst reject_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('reject_example'));\n    }, 0);\n  });\n};\n\nconst main = async () => {\n  try {\n    await reject_example();\n    await throw_example();\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nmain();\n```\n\n???\n",
    "text": "An exception with the message `throw_example`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what will be the stack trace of the following snippet?\n\n```javascript\nconst throw_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      throw new Error('throw_example');\n    }, 0);\n  });\n};\n\nconst reject_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('reject_example'));\n    }, 0);\n  });\n};\n\nconst main = async () => {\n  try {\n    await reject_example();\n    await throw_example();\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nmain();\n```\n\n???\n",
    "text": "An exception with the message `reject_example`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what will be the stack trace of the following snippet?\n\n```javascript\nconst throw_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      throw new Error('throw_example');\n    }, 0);\n  });\n};\n\nconst reject_example = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('reject_example'));\n    }, 0);\n  });\n};\n\nconst main = async () => {\n  try {\n    await reject_example();\n    await throw_example();\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nmain();\n```\n\n???\n",
    "text": "No error shown, only the message `throw_example`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For correctness and consistency, when writing an asynchronous function, errors raised should be ???\n",
    "text": "returned",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For correctness and consistency, when writing an asynchronous function, errors raised should be ???\n",
    "text": "thrown",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For correctness and consistency, when writing an asynchronous function, errors raised should be ???\n",
    "text": "discarded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what a successful system recovery implies?\n\n???\n",
    "text": "Allowing a request to fail and reverting the state changes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you identify what a successful system recovery implies?\n\n???\n",
    "text": "Allowing a request to fail",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what a successful system recovery implies?\n\n???\n",
    "text": "Restarting the system",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what a successful system recovery implies?\n\n???\n",
    "text": "Fixing the programmer error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify what a successful system recovery implies?\n\n???\n",
    "text": "Handling the programmer error properly",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Programmer error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Service outage",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Fixing the bug",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Handling the programmer error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Operational error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Drawing an analogy between a disease and a server crashing, which of the following statements are equivalent?\n\n```javascript\nCause\n???\n\nSymptoms\n???\n\nTreatment\n???\n```\n",
    "text": "Enclosing the code inside a `try/catch` block",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify type of error most likely depicted in the following snippet?\n\n```javascript\nimport http from 'http';\n...\n// create the request header\nhttp.request({host: test.com,\n  port: 80,\n  path: '/signup',\n  method: 'POST'\n  }, (res, err) => err && console.log(err))\n  // add the data\n    .write(\n      'username': 'enki',\n      'password': 'enki'\n    );\n```\n\n???\n",
    "text": "Handled operational error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you identify type of error most likely depicted in the following snippet?\n\n```javascript\nimport http from 'http';\n...\n// create the request header\nhttp.request({host: test.com,\n  port: 80,\n  path: '/signup',\n  method: 'POST'\n  }, (res, err) => err && console.log(err))\n  // add the data\n    .write(\n      'username': 'enki',\n      'password': 'enki'\n    );\n```\n\n???\n",
    "text": "Unhandled operational error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify type of error most likely depicted in the following snippet?\n\n```javascript\nimport http from 'http';\n...\n// create the request header\nhttp.request({host: test.com,\n  port: 80,\n  path: '/signup',\n  method: 'POST'\n  }, (res, err) => err && console.log(err))\n  // add the data\n    .write(\n      'username': 'enki',\n      'password': 'enki'\n    );\n```\n\n???\n",
    "text": "Handled programmer error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you identify type of error most likely depicted in the following snippet?\n\n```javascript\nimport http from 'http';\n...\n// create the request header\nhttp.request({host: test.com,\n  port: 80,\n  path: '/signup',\n  method: 'POST'\n  }, (res, err) => err && console.log(err))\n  // add the data\n    .write(\n      'username': 'enki',\n      'password': 'enki'\n    );\n```\n\n???\n",
    "text": "Unhandled programmer error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A programmer error is\n\n???\n",
    "text": "a problem where the program unexpectedly crashes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A programmer error is\n\n???\n",
    "text": "a problem where the program expectedly crashes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A programmer error is\n\n???\n",
    "text": "a problem with the server configuration",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A programmer error is\n\n???\n",
    "text": "a problem on the client",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A programmer error is\n\n???\n",
    "text": "an unhandled exception",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "new Enki",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "return new Enki",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "Enki.createWithNumber",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "Enki",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "createWithNumberString",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "Enki.createWithNumberString",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "return new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "Enki()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "create",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "factory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps of the following snippets. First you need to define you `Enki` factory which exposes `createWithNumber` and `createWithString`:\n\n```javascript\n// myFactory.js\n\nfunction Enki(number) {\n  this.number = number\n}\n\nfunction createWithNumber(number) {\n  console.log('created with number')\n  return ???(number)\n}\n\nfunction createWithNumberString(str) {\n  console.log('created with number string')\n  ???(Number(str))\n}\n\nmodule.exports = {\n  createWithNumber: createWithNumber,\n  createWithNumberString:\n   createWithNumberString,\n}\n```\n\nHow would you use this factory?\n\n```javascript\n// main.js\nvar Enki = require('./myFactory.js')\n\nconst e1 = ???(42)\nconst e2 = ???.???('55')\n```\n",
    "text": "init",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about the factory design pattern do you consider false?\n\n???\n",
    "text": "factory methods need to return multiple instances of the object in one call",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements about the factory design pattern do you consider false?\n\n???\n",
    "text": "factories begin to be useful when working with complex constructors",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about the factory design pattern do you consider false?\n\n???\n",
    "text": "specific methods will create objects instead of the constructor",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements about the factory design pattern do you consider false?\n\n???\n",
    "text": "factory methods will call the constructor themselves",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "__filename",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "__dirname",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "dirname",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "filename",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "pathname",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the path of the code being executed:\n\n```javascript\nconsole.log(???);\n```\n",
    "text": "__pathname",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "process",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "argv",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "env",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "platform",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "__filename",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "args",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get command line arguments:\n\n```javascript\nconsole.log(???.???);\n```\n",
    "text": "console",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Describe the Middleware/pipeline design pattern:\n\nthe ??? of one unit is the ??? for the next one.\n",
    "text": "output",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Describe the Middleware/pipeline design pattern:\n\nthe ??? of one unit is the ??? for the next one.\n",
    "text": "input",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Describe the Middleware/pipeline design pattern:\n\nthe ??? of one unit is the ??? for the next one.\n",
    "text": "error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Describe the Middleware/pipeline design pattern:\n\nthe ??? of one unit is the ??? for the next one.\n",
    "text": "prototype",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "middleware/pipeline",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "factory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "process-nexttick",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "builder",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "singleton",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "prototype",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which design pattern can you observe in the following snippet which archives `raw.txt`?\n\n```javascript\nfs.createReadStream('raw.txt')\n  .pipe(zlib.createGzip())\n  .pipe(fs.createWriteStream('raw.gz'))\n```\n\n???\n",
    "text": "waterfall",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "nextTick",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "compute",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "nextProcess",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "computation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "calc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below which allows the execution of a CPU intensive task to be interleaved with other events:\n\n```javascript\nfunction compute() {\n   // lots of calculations...\n   process.???(???);\n}\ncompute();\n```\n",
    "text": "event",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to replicate the basic behaviour of `setTimeout(fn, 0)`?\n\n???\n",
    "text": "process.nextTick()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What can be used to replicate the basic behaviour of `setTimeout(fn, 0)`?\n\n???\n",
    "text": "process.next()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What can be used to replicate the basic behaviour of `setTimeout(fn, 0)`?\n\n???\n",
    "text": "process.nextTick(0)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When handling errors in Node, which class is it best practice to use?\n\n???\n",
    "text": "Error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When handling errors in Node, which class is it best practice to use?\n\n???\n",
    "text": "node-error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When handling errors in Node, which class is it best practice to use?\n\n???\n",
    "text": "Node-error",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When handling errors in Node, which class is it best practice to use?\n\n???\n",
    "text": "nodeerror",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one would be a conventional property name for error handling?\n\n???\n",
    "text": "localHostname",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one would be a conventional property name for error handling?\n\n???\n",
    "text": "host",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one would be a conventional property name for error handling?\n\n???\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one would be a conventional property name for error handling?\n\n???\n",
    "text": "localName",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "cluster",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "fork()",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "init()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "worker",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Initiate a new worker process.\n\n```javascript\n???.???;\n```\n",
    "text": "worker()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Identify if the code is executed by the master process:\n\n```javascript\nvar cluster = require('cluster');\nif(cluster.???){\n};\n```\n",
    "text": "isMaster",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Identify if the code is executed by the master process:\n\n```javascript\nvar cluster = require('cluster');\nif(cluster.???){\n};\n```\n",
    "text": "master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Identify if the code is executed by the master process:\n\n```javascript\nvar cluster = require('cluster');\nif(cluster.???){\n};\n```\n",
    "text": "notChild",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Identify if the code is executed by the master process:\n\n```javascript\nvar cluster = require('cluster');\nif(cluster.???){\n};\n```\n",
    "text": "child",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "child_process",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "spawn",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "create-child",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "create",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the JS code snippet to create a child process:\n\n```javascript\nvar spawn =\n  require('???').???;\n```\n",
    "text": "new-process",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What module is required to spawn child processes?\n???\n",
    "text": "child_process",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What module is required to spawn child processes?\n???\n",
    "text": "child_processes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What module is required to spawn child processes?\n???\n",
    "text": "spawn_process",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What module is required to spawn child processes?\n???\n",
    "text": "child-cpu",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "worker",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "message",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "call",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "child",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "action",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "change",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to listen for messages in the *master* from a *worker*:\n\n```javascript\n???.on('???', function(message) {\n   console.log(message);\n});\n```\n",
    "text": "running",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet should send a string message from the **master** process to a **worker**. Complete the gaps in order to accomplish this functionality:\n\n```javascript\n???.???('From master to worker..');\n```\n",
    "text": "worker",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The following code snippet should send a string message from the **master** process to a **worker**. Complete the gaps in order to accomplish this functionality:\n\n```javascript\n???.???('From master to worker..');\n```\n",
    "text": "send",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The following code snippet should send a string message from the **master** process to a **worker**. Complete the gaps in order to accomplish this functionality:\n\n```javascript\n???.???('From master to worker..');\n```\n",
    "text": "on",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet should send a string message from the **master** process to a **worker**. Complete the gaps in order to accomplish this functionality:\n\n```javascript\n???.???('From master to worker..');\n```\n",
    "text": "master",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The following code snippet should send a string message from the **master** process to a **worker**. Complete the gaps in order to accomplish this functionality:\n\n```javascript\n???.???('From master to worker..');\n```\n",
    "text": "process",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code do? ???\n\n```javascript\nif (cluster.isMaster) { ... }\n```\n",
    "text": "Identifies the master process.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following line of code do? ???\n\n```javascript\nif (cluster.isMaster) { ... }\n```\n",
    "text": "Sets the master process.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following line of code do? ???\n\n```javascript\nif (cluster.isMaster) { ... }\n```\n",
    "text": "Sets the master process to null.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "cluster.fork();",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "master.fork();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "cluster.new();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "master.new();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "cluster.process();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used by the master process to initiate new worker processes? ???\n",
    "text": "master.process();",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "cluster",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "workers",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "worker",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "isMaster",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "fromMaster",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "getWorkers()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `cluster` to be the master cluster, how would you get all child worker objects?\n\n```javascript\n// ...\nvar workers = ???.???\n```\n",
    "text": "allWorkers()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "isConnected",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "process",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "connected",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "worker",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "isIPC",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following JS code snippet to check if a worked is connected to its master via its IPC channel:\n\n```javascript\nif (worker.???()) {\n   process.send('Worker connected!');\n}\n```\n",
    "text": "send",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is considered to be safer to use in the following case to retrieve a list of files chosen by a user?\n\n```javascript\nvar path = \"user input\";\nchild_process.???('ls', ['-l'\n, path], function (err, data) {\n    console.log(data);\n});\n```\n",
    "text": "spawn",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is considered to be safer to use in the following case to retrieve a list of files chosen by a user?\n\n```javascript\nvar path = \"user input\";\nchild_process.???('ls', ['-l'\n, path], function (err, data) {\n    console.log(data);\n});\n```\n",
    "text": "execFiles",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is considered to be safer to use in the following case to retrieve a list of files chosen by a user?\n\n```javascript\nvar path = \"user input\";\nchild_process.???('ls', ['-l'\n, path], function (err, data) {\n    console.log(data);\n});\n```\n",
    "text": "exec",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not true about `child_process.exec`?\n\n???\n",
    "text": "is literally the same as `child_process.spawn`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not true about `child_process.exec`?\n\n???\n",
    "text": "calls to execute `/bin/sh`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not true about `child_process.exec`?\n\n???\n",
    "text": "it's a bash interpreter",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not true about `child_process.exec`?\n\n???\n",
    "text": "its calls can be targeted for command injection",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Should you give your node process permissions to your whole system?\n\n???\n",
    "text": "no",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Should you give your node process permissions to your whole system?\n\n???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Should you give your node process permissions to your whole system?\n\n???\n",
    "text": "only if you need port `80` for http",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Should you give your node process permissions to your whole system?\n\n???\n",
    "text": "only if you need port `443` for http",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is running **Node** with `sudo` considered a safe practice?\n\n???\n",
    "text": "no",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is running **Node** with `sudo` considered a safe practice?\n\n???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the total system memory in bytes:\n\n```javascript\nvar os = require(“os”);\nconsole.log(os.???());\n```\n",
    "text": "totalmem",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get the total system memory in bytes:\n\n```javascript\nvar os = require(“os”);\nconsole.log(os.???());\n```\n",
    "text": "memory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the total system memory in bytes:\n\n```javascript\nvar os = require(“os”);\nconsole.log(os.???());\n```\n",
    "text": "bytesmemory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get the total system memory in bytes:\n\n```javascript\nvar os = require(“os”);\nconsole.log(os.???());\n```\n",
    "text": "memorytotal",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "os",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "arch",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "platform",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "type",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "networkInterfaces",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "CPU",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose :\n\n```javascript\nvar os = require(\"os\");\n```\n\nLog the CPU's architecture:\n\n```javascript\nconsole.log(???.???());\n```\n",
    "text": "cpu",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "pipe",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "chain",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "stream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "feed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the output of the first stream is used as input for the second one:\n\n```javascript\nvar fs = require(\"fs\");\n\nfs.createReadStream('in.txt')\n  .???(fs.createWriteStream(out.txt));\n```\n",
    "text": "output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used to chain streams together?\n\n???\n",
    "text": "pipe()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which function is used to chain streams together?\n\n???\n",
    "text": "new-pipe()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used to chain streams together?\n\n???\n",
    "text": "chain()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fs.createReadStream",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "'fileA.txt'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fs",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "createWriteStream",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "'fileB.txt'",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "r",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "pipe",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "w",
    "correct": true,
    "correctIndex": 7
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fs.readStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "readStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "writeStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fs.writeStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "transfer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "move",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fileA",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pipe the data from a readStream of `fileA.txt` to a writeStream of `fileB.txt`, both created through the `fs` module? Basically you have to move all the data from `fileA` to `fileB`.\n\n```javascript\nvar fs = require('fs')\n\nvar r = ???(???)\nvar w = ???.???(???)\n\n???.???(???)\n```\n",
    "text": "fileB",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "pipe()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "pipeto()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "newpipe()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "transfer()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "trasport()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "copy()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "source()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which function is used for piping data from a source to a destination?\n\n???\n",
    "text": "move()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following Node modules needs to be required prior to a readable stream being created?\n???\n",
    "text": "File system",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following Node modules needs to be required prior to a readable stream being created?\n???\n",
    "text": "http",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following Node modules needs to be required prior to a readable stream being created?\n???\n",
    "text": "readStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is called to create a static readable stream?\n\n    var stream = fs.???('file.txt');\n",
    "text": "createReadStream",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is called to create a static readable stream?\n\n    var stream = fs.???('file.txt');\n",
    "text": "staticReadableStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is called to create a static readable stream?\n\n    var stream = fs.???('file.txt');\n",
    "text": "readableStream",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "Duplex",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "read from a source",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "piped to a destination",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "Double",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "WritableReadable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "processed in chunks",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "processed in one go",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "read into `fs` module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A stream can be Readable, Writable and ???.\n\nStreams allow data to ??? and ???.\n",
    "text": "used by the `request` module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Streams are ??? allowing data to be read from a source and for data to be piped to a destination.\n",
    "text": "unix pipes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Streams are ??? allowing data to be read from a source and for data to be piped to a destination.\n",
    "text": "transport methods",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Streams are ??? allowing data to be read from a source and for data to be piped to a destination.\n",
    "text": "modules",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "data",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "write",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "event",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "callback",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to write data to the writable stream:\n\n```javascript\nrstream.on('???', function(data) {\n  wstream.???(data);\n});\n```\n",
    "text": "print",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used when writing data to a writable stream?\n\n```javascript\nstream.???(data);\n```\n",
    "text": "write",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is used when writing data to a writable stream?\n\n```javascript\nstream.???(data);\n```\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used when writing data to a writable stream?\n\n```javascript\nstream.???(data);\n```\n",
    "text": "print",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag must be used to enable debugging?\n\n???\n",
    "text": "--debug",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which flag must be used to enable debugging?\n\n???\n",
    "text": "debug",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag must be used to enable debugging?\n\n???\n",
    "text": "-debug",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag must be used to enable debugging?\n\n???\n",
    "text": "debugging",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which flag must be used to enable debugging?\n\n???\n",
    "text": "--debugger",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two API calls can be used to specify a range of where bulk writes will occur?\n\n???\n",
    "text": "`cork()` and `uncork()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which two API calls can be used to specify a range of where bulk writes will occur?\n\n???\n",
    "text": "`write()` and `end()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two API calls can be used to specify a range of where bulk writes will occur?\n\n???\n",
    "text": "`writable()` and `unwritable()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to flush all buffered data from a stream?\n\n???\n",
    "text": "end()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to flush all buffered data from a stream?\n\n???\n",
    "text": "uncork()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to flush all buffered data from a stream?\n\n???\n",
    "text": "cork()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following cannot be used to debug a node application?\n\n???\n",
    "text": "webpack",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following cannot be used to debug a node application?\n\n???\n",
    "text": "node debug",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following cannot be used to debug a node application?\n\n???\n",
    "text": "node-inspector",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following cannot be used to debug a node application?\n\n???\n",
    "text": "iron-node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Start node with its built-in debugger:\n\n```bash\n$ ??? ??? app.js\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Start node with its built-in debugger:\n\n```bash\n$ ??? ??? app.js\n```\n",
    "text": "debug",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Start node with its built-in debugger:\n\n```bash\n$ ??? ??? app.js\n```\n",
    "text": "debugger",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Start node with its built-in debugger:\n\n```bash\n$ ??? ??? app.js\n```\n",
    "text": "node-debug",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Start node with its built-in debugger:\n\n```bash\n$ ??? ??? app.js\n```\n",
    "text": "iron-node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When running the following code snippet in the debugger, which line of code will the debugger break at? ???\n\n```javascript\nfor(var i=0; i<10; i++) {      // line 0\n   debugger;                   // line 1\n   console.log(\"hello \" + i);  // line 2\n}                              // line 3\nconsole.log(\"end\");            // line 4\n```\n",
    "text": "Line 1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When running the following code snippet in the debugger, which line of code will the debugger break at? ???\n\n```javascript\nfor(var i=0; i<10; i++) {      // line 0\n   debugger;                   // line 1\n   console.log(\"hello \" + i);  // line 2\n}                              // line 3\nconsole.log(\"end\");            // line 4\n```\n",
    "text": "Line 0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When running the following code snippet in the debugger, which line of code will the debugger break at? ???\n\n```javascript\nfor(var i=0; i<10; i++) {      // line 0\n   debugger;                   // line 1\n   console.log(\"hello \" + i);  // line 2\n}                              // line 3\nconsole.log(\"end\");            // line 4\n```\n",
    "text": "Line 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When running the following code snippet in the debugger, which line of code will the debugger break at? ???\n\n```javascript\nfor(var i=0; i<10; i++) {      // line 0\n   debugger;                   // line 1\n   console.log(\"hello \" + i);  // line 2\n}                              // line 3\nconsole.log(\"end\");            // line 4\n```\n",
    "text": "Line 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When running the following code snippet in the debugger, which line of code will the debugger break at? ???\n\n```javascript\nfor(var i=0; i<10; i++) {      // line 0\n   debugger;                   // line 1\n   console.log(\"hello \" + i);  // line 2\n}                              // line 3\nconsole.log(\"end\");            // line 4\n```\n",
    "text": "Line 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you run `enki` app in *debug* mode?\n\n```bash\n??? ??? enki\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you run `enki` app in *debug* mode?\n\n```bash\n??? ??? enki\n```\n",
    "text": "debug",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you run `enki` app in *debug* mode?\n\n```bash\n??? ??? enki\n```\n",
    "text": "debugger",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you run `enki` app in *debug* mode?\n\n```bash\n??? ??? enki\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "request",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "reg",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet using routing with express:\n\n```javascript\napp.???('/',\n   function(???,response){\n  // code\n});\n```\n",
    "text": "express",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import and use `express` in your **Node.js** app:\n\n```javascript\nvar express = require('???');\nvar app = ???;\n```\n",
    "text": "express",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import and use `express` in your **Node.js** app:\n\n```javascript\nvar express = require('???');\nvar app = ???;\n```\n",
    "text": "express()",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Import and use `express` in your **Node.js** app:\n\n```javascript\nvar express = require('???');\nvar app = ???;\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import and use `express` in your **Node.js** app:\n\n```javascript\nvar express = require('???');\nvar app = ???;\n```\n",
    "text": "use",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import and use `express` in your **Node.js** app:\n\n```javascript\nvar express = require('???');\nvar app = ???;\n```\n",
    "text": "request",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen to exit event of a custom REPL:\n\n```javascript\nreplServer.???(???, function() {\n  process.exit()\n});\n```\n",
    "text": "on",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Listen to exit event of a custom REPL:\n\n```javascript\nreplServer.???(???, function() {\n  process.exit()\n});\n```\n",
    "text": "'exit'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Listen to exit event of a custom REPL:\n\n```javascript\nreplServer.???(???, function() {\n  process.exit()\n});\n```\n",
    "text": "'close'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Listen to exit event of a custom REPL:\n\n```javascript\nreplServer.???(???, function() {\n  process.exit()\n});\n```\n",
    "text": "'end'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "createServer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "res",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "req",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "newServer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "declareServer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "env",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to declare a new server with what arguments?\n\n```javascript\nvar http = require(‘http’);\nhttp.???(\n    function(req, ???){\n     //...\n }).listen(port);\n```\n",
    "text": "arg",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "createServer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "listen",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "httpServer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "on",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "localhost",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a `http` server and make it listen to port `8080`:\n\n```javascript\nvar http = require('http');\n\nhttp.???(function(req, res) {\n  //\n}).???(8080);\n```\n",
    "text": "require",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to listen for requests on port `2242` with `server`:\n\n```javascript\nserver.???(???, function() {\n\n  console.log(‘Server listening here:\n              http://localhost:%s’, 2242);\n\n});\n```\n",
    "text": "listen",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to listen for requests on port `2242` with `server`:\n\n```javascript\nserver.???(???, function() {\n\n  console.log(‘Server listening here:\n              http://localhost:%s’, 2242);\n\n});\n```\n",
    "text": "2242",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to listen for requests on port `2242` with `server`:\n\n```javascript\nserver.???(???, function() {\n\n  console.log(‘Server listening here:\n              http://localhost:%s’, 2242);\n\n});\n```\n",
    "text": "'listener'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to listen for requests on port `2242` with `server`:\n\n```javascript\nserver.???(???, function() {\n\n  console.log(‘Server listening here:\n              http://localhost:%s’, 2242);\n\n});\n```\n",
    "text": "on",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to listen for requests on port `2242` with `server`:\n\n```javascript\nserver.???(???, function() {\n\n  console.log(‘Server listening here:\n              http://localhost:%s’, 2242);\n\n});\n```\n",
    "text": "createServer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a new HTTP server object:\n\n```javascript\nvar server = http.???(requestHandler);\n```\n",
    "text": "createServer",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to create a new HTTP server object:\n\n```javascript\nvar server = http.???(requestHandler);\n```\n",
    "text": "httpServer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to create a new HTTP server object:\n\n```javascript\nvar server = http.???(requestHandler);\n```\n",
    "text": "createHTTP",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can find out the exact location of available binaries with:\n\n```bash\n$ ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can find out the exact location of available binaries with:\n\n```bash\n$ ??? ???\n```\n",
    "text": "bin",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can find out the exact location of available binaries with:\n\n```bash\n$ ??? ???\n```\n",
    "text": "ls",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can find out the exact location of available binaries with:\n\n```bash\n$ ??? ???\n```\n",
    "text": "/project/node_modules/.bin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can find out the exact location of available binaries with:\n\n```bash\n$ ??? ???\n```\n",
    "text": "/usr/local/bin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A package binary file is needed for\n\n???\n",
    "text": "command line invocation of the module",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A package binary file is needed for\n\n???\n",
    "text": "importing the module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A package binary file is needed for\n\n???\n",
    "text": "publishing the module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A package binary file is needed for\n\n???\n",
    "text": "explaining the functionalities of the module",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "scripts",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "test",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "jest",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "test:ci",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "npm run test",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "-- runInBand",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "node-scripts",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "testing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "test --",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "runInBand",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "run test",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `package.json` file such that it has 2 scripts:\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"???\",\n    \"???\": \"??? ???\"\n  }\n}\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following is in your `package.json`, execute the script called `dailyStats`\n\n```javascript\n{\n  \"name\": \"enki\",\n  // ...\n  \"scripts\": {\n    \"dailyStats\": \"node ./bin/stats.js\"\n  }\n}\n```\n\n??? ??? ???\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Given the following is in your `package.json`, execute the script called `dailyStats`\n\n```javascript\n{\n  \"name\": \"enki\",\n  // ...\n  \"scripts\": {\n    \"dailyStats\": \"node ./bin/stats.js\"\n  }\n}\n```\n\n??? ??? ???\n",
    "text": "run",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Given the following is in your `package.json`, execute the script called `dailyStats`\n\n```javascript\n{\n  \"name\": \"enki\",\n  // ...\n  \"scripts\": {\n    \"dailyStats\": \"node ./bin/stats.js\"\n  }\n}\n```\n\n??? ??? ???\n",
    "text": "dailyStats",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Given the following is in your `package.json`, execute the script called `dailyStats`\n\n```javascript\n{\n  \"name\": \"enki\",\n  // ...\n  \"scripts\": {\n    \"dailyStats\": \"node ./bin/stats.js\"\n  }\n}\n```\n\n??? ??? ???\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Given the following is in your `package.json`, execute the script called `dailyStats`\n\n```javascript\n{\n  \"name\": \"enki\",\n  // ...\n  \"scripts\": {\n    \"dailyStats\": \"node ./bin/stats.js\"\n  }\n}\n```\n\n??? ??? ???\n",
    "text": "exec",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The prefix needed to invoke preconfigured values is:\n\n???\n",
    "text": "$npm*package_config*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The prefix needed to invoke preconfigured values is:\n\n???\n",
    "text": "npm*package_config*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The prefix needed to invoke preconfigured values is:\n\n???\n",
    "text": "npm_package_config",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The prefix needed to invoke preconfigured values is:\n\n???\n",
    "text": "$npm_config",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can override the local value of an environmental variable by running:\n\n    $ npm ??? ??? ??? newValue\n",
    "text": "config",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can override the local value of an environmental variable by running:\n\n    $ npm ??? ??? ??? newValue\n",
    "text": "set",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can override the local value of an environmental variable by running:\n\n    $ npm ??? ??? ??? newValue\n",
    "text": "packageName:property",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "You can override the local value of an environmental variable by running:\n\n    $ npm ??? ??? ??? newValue\n",
    "text": "property",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can override the local value of an environmental variable by running:\n\n    $ npm ??? ??? ??? newValue\n",
    "text": "-s",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "scripts",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "makeOutput",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "cd output",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "&&",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "make",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "npm run",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "makeOutput",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "prod",
    "correct": true,
    "correctIndex": 7
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "||",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "and",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "makeFile",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a Makefile in the `output` directory of your project. You want to run this with `prod` argument via an npm script called `makeOutput`:\n\nHow would you define the script?\n\n```json\n{\n  \"name\": \"Enki\",\n  \"???\": {\n    \"???\": \"??? ??? ???\"\n  }\n}\n```\n\nHow would you run the script?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The syntax to add an `external_script.sh` to *package.json* is:\n\n```javascript\n??? : {\n  \"external\": \"???\"\n}\n```\n",
    "text": "scripts",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The syntax to add an `external_script.sh` to *package.json* is:\n\n```javascript\n??? : {\n  \"external\": \"???\"\n}\n```\n",
    "text": "./external_script.sh",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The syntax to add an `external_script.sh` to *package.json* is:\n\n```javascript\n??? : {\n  \"external\": \"???\"\n}\n```\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The syntax to add an `external_script.sh` to *package.json* is:\n\n```javascript\n??? : {\n  \"external\": \"???\"\n}\n```\n",
    "text": "external_script.js",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A default `npm` script event is:\n\n???\n",
    "text": "postinstall",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A default `npm` script event is:\n\n???\n",
    "text": "pre-commit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A default `npm` script event is:\n\n???\n",
    "text": "gulp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A default `npm` script event is:\n\n???\n",
    "text": "link",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command does `npm start` run by default?\n\n    $ ???\n",
    "text": "node server.js",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command does `npm start` run by default?\n\n    $ ???\n",
    "text": "gulp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command does `npm start` run by default?\n\n    $ ???\n",
    "text": "node -v",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command does `npm start` run by default?\n\n    $ ???\n",
    "text": "npm install",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the equivalent abbreviated command of `npm link`?\n\n???\n",
    "text": "npm ln",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the equivalent abbreviated command of `npm link`?\n\n???\n",
    "text": "npm lk",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the equivalent abbreviated command of `npm link`?\n\n???\n",
    "text": "npm l",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the equivalent abbreviated command of `npm link`?\n\n???\n",
    "text": "npm k",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the equivalent abbreviated command of `npm link`?\n\n???\n",
    "text": "npm n",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "API_KEY",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "=",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "xyz",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "index.js",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "&&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "API",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "ENVS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "=[",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you add an environmental variable called `API_KEY` that's equal to `xyz` at the runtime of you node application? Suppose the main file of you application is `index.js`\n\n```bash\n$ ????????? ??? ???\n```\n",
    "text": "API_KEY(\"xyz\")]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "API_KEY",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "abc",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "node",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "index.js",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "--harmony",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "scripts",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "--har",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "-h",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In `package.json`, define a script that runs `node index.js`. Add to it the `--harmony` flag at the end and an env variable called `API_KEY` that's equal to \"abc\".\n\n```json\n{\n  \"name\": \"Enki\",\n  \"scripts\": {\n    \"start\": \"???=??? ??? ??? ???\"\n  }\n}\n```\n",
    "text": "\"abc\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will happen when downloading a corrupted npm package?\n\n???\n",
    "text": "npm will refuse and stop the installation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will happen when downloading a corrupted npm package?\n\n???\n",
    "text": "npm will continue",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will happen when downloading a corrupted npm package?\n\n???\n",
    "text": "npm will continue, but will show warnings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will happen when downloading a corrupted npm package?\n\n???\n",
    "text": "npm will crash your system",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To ensure the security of published modules, **sha1 hashes** are generated automatically when for your NodeJS project. When are these hashes created?\n\n???\n",
    "text": "on publish",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To ensure the security of published modules, **sha1 hashes** are generated automatically when for your NodeJS project. When are these hashes created?\n\n???\n",
    "text": "when you run it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To ensure the security of published modules, **sha1 hashes** are generated automatically when for your NodeJS project. When are these hashes created?\n\n???\n",
    "text": "when the folder is accessed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To ensure the security of published modules, **sha1 hashes** are generated automatically when for your NodeJS project. When are these hashes created?\n\n???\n",
    "text": "When it is uploaded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To ensure the security of published modules, **sha1 hashes** are generated automatically when for your NodeJS project. When are these hashes created?\n\n???\n",
    "text": "When it is compiled",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If *npm* cannot find or fails to install the dependency the installation of the module continues, however what is required from the user? ???\n",
    "text": "A try catch to handle the lack of the dependency.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If *npm* cannot find or fails to install the dependency the installation of the module continues, however what is required from the user? ???\n",
    "text": "A printed error statement.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If *npm* cannot find or fails to install the dependency the installation of the module continues, however what is required from the user? ???\n",
    "text": "An alternative way for the module to run without said dependency.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what object of `package.json` can dispensable dependencies be specified?\n\n???\n",
    "text": "optionalDependenceis",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In what object of `package.json` can dispensable dependencies be specified?\n\n???\n",
    "text": "peerDependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what object of `package.json` can dispensable dependencies be specified?\n\n???\n",
    "text": "devDependenceis",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what object of `package.json` can dispensable dependencies be specified?\n\n???\n",
    "text": "dependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "run",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "doSomething",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "--",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "\"enki\"",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "runWithArgs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider an npm script called `doSomething`. Run it via npm, passing 'enki' as an argument to it:\n\n```bash\n$ ??? ??? ??? ??? ???\n```\n",
    "text": "process.argv[0]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "--",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "\"test\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "argvs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "arg",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you pass to the following npm script call a \"test\" argument?\n\n```bash\n$ npm run myScript ??? ???\n```\n",
    "text": "process.argv[0]",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```bash\n$ ??? ??? ???\n```\n\nWill create the default *package.json* file.\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```bash\n$ ??? ??? ???\n```\n\nWill create the default *package.json* file.\n",
    "text": "init",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "```bash\n$ ??? ??? ???\n```\n\nWill create the default *package.json* file.\n",
    "text": "-y",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "```bash\n$ ??? ??? ???\n```\n\nWill create the default *package.json* file.\n",
    "text": "install",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```bash\n$ ??? ??? ???\n```\n\nWill create the default *package.json* file.\n",
    "text": "-i",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The *package.json* file serves as\n\n???\n",
    "text": "all of the above",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The *package.json* file serves as\n\n???\n",
    "text": "a list of dependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The *package.json* file serves as\n\n???\n",
    "text": "a list of scripts to be run",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The *package.json* file serves as\n\n???\n",
    "text": "a short description of your project",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a valid syntax for specifying the latest minor release starting off *3.0.3*?\n\n???\n",
    "text": "^3.0.3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a valid syntax for specifying the latest minor release starting off *3.0.3*?\n\n???\n",
    "text": "~3.0.3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a valid syntax for specifying the latest minor release starting off *3.0.3*?\n\n???\n",
    "text": "3.0.x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a valid syntax for specifying the latest minor release starting off *3.0.3*?\n\n???\n",
    "text": "x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "From the perspective of a package maintainer, incrementing the rightmost number in the version means\n\n???\n",
    "text": "bug fixes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "From the perspective of a package maintainer, incrementing the rightmost number in the version means\n\n???\n",
    "text": "new stable feature",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "From the perspective of a package maintainer, incrementing the rightmost number in the version means\n\n???\n",
    "text": "new experimental feature",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "install",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "-g",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "latest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "-l",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "remove",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you update npm to the latest version? Place the flag at the end of the command.\n\n```bash\n$ npm ??? ??? ???\n```\n",
    "text": "--latest",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "install",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "react",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "-l",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "-g",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Install the *react* package locally:\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The aim of a package is to\n\n???\n",
    "text": "solve specific problems efficiently",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The aim of a package is to\n\n???\n",
    "text": "solve every problem in an application efficiently",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The aim of a package is to\n\n???\n",
    "text": "encapsulate the application",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`npm` stands for\n\n???\n",
    "text": "node package manager",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`npm` stands for\n\n???\n",
    "text": "new package manager",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`npm` stands for\n\n???\n",
    "text": "node packet manager",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a JavaScript package manger?\n\n???\n",
    "text": "webpack",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a JavaScript package manger?\n\n???\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a JavaScript package manger?\n\n???\n",
    "text": "yarn",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a JavaScript package manger?\n\n???\n",
    "text": "duo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a JavaScript package manger?\n\n???\n",
    "text": "bower",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A faster alternative package manager to npm is\n\n???.\n",
    "text": "yarn",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A faster alternative package manager to npm is\n\n???.\n",
    "text": "browserify",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A faster alternative package manager to npm is\n\n???.\n",
    "text": "react",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A faster alternative package manager to npm is\n\n???.\n",
    "text": "node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Packages that the application is dependent on are specified in\n\n???\n",
    "text": "package.json file",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Packages that the application is dependent on are specified in\n\n???\n",
    "text": "node_modules directory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Packages that the application is dependent on are specified in\n\n???\n",
    "text": "dependencies.json file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Packages that the application is dependent on are specified in\n\n???\n",
    "text": "devDependencies.json file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "install",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "gulp",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "--save-dev",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "--save",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Install and add *gulp* to the list of dev dependencies from the command line:\n\n    $ ??? ??? ??? ???\n",
    "text": "node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which version of npm were *peerDependencies* available?\n\n???\n",
    "text": "npm v2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In which version of npm were *peerDependencies* available?\n\n???\n",
    "text": "npm v3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which version of npm were *peerDependencies* available?\n\n???\n",
    "text": "npm v4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a peer dependency called `enki` to your package using npm3+:\n\n```json\n{\n  //props\n  \"???\": {\n    \"???\": \"1.0.0\"\n  }\n}\n```\n",
    "text": "peerDependencies",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a peer dependency called `enki` to your package using npm3+:\n\n```json\n{\n  //props\n  \"???\": {\n    \"???\": \"1.0.0\"\n  }\n}\n```\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a peer dependency called `enki` to your package using npm3+:\n\n```json\n{\n  //props\n  \"???\": {\n    \"???\": \"1.0.0\"\n  }\n}\n```\n",
    "text": "dependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a peer dependency called `enki` to your package using npm3+:\n\n```json\n{\n  //props\n  \"???\": {\n    \"???\": \"1.0.0\"\n  }\n}\n```\n",
    "text": "enki:peer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a peer dependency called `enki` to your package using npm3+:\n\n```json\n{\n  //props\n  \"???\": {\n    \"???\": \"1.0.0\"\n  }\n}\n```\n",
    "text": "devDependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the main difference between how npm2 and npm3 handles dependencies?\n\n???\n",
    "text": "`node_modules` structure depends on the declaration order",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the main difference between how npm2 and npm3 handles dependencies?\n\n???\n",
    "text": "dependencies are always updated to their latest version",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the main difference between how npm2 and npm3 handles dependencies?\n\n???\n",
    "text": "dependencies can be locked to at specific version",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Flat installing dependencies of dependencies is a feature of ???.\n",
    "text": "npm3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Flat installing dependencies of dependencies is a feature of ???.\n",
    "text": "npm2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Flat installing dependencies of dependencies is a feature of ???.\n",
    "text": "npm1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a module to be a package as well, it has to\n\n???\n",
    "text": "have a package.json file",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For a module to be a package as well, it has to\n\n???\n",
    "text": "be published",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a module to be a package as well, it has to\n\n???\n",
    "text": "have an index.js file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a module to be a package as well, it has to\n\n???\n",
    "text": "be required",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Node's `require()` looks for code in\n\n???\n",
    "text": "node_modules",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Node's `require()` looks for code in\n\n???\n",
    "text": "package.json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Node's `require()` looks for code in\n\n???\n",
    "text": "node_packages",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "init",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "-scope",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "enki",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "install",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "--global",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "@enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "-s",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you initialize an npm project within the `@enki` scope?\n\n```bash\n$ ??? ??? ???=???\n```\n",
    "text": "node",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A scoped package's name is preceded by ???.\n",
    "text": "@scope/",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A scoped package's name is preceded by ???.\n",
    "text": "scope/",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A scoped package's name is preceded by ???.\n",
    "text": "@/",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A scoped package's name is preceded by ???.\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "view",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "@",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "dependencies",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "--json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "list",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command in order to get the dependencies for version `1.2.3` of package `enki`:\n\n```bash\n$ npm ???\n    enki???1.2.3 ???\n```\n",
    "text": "npm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to retrieve the contributors to the *npm* package:\n\n    $ ??? ??? npm ???\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the command to retrieve the contributors to the *npm* package:\n\n    $ ??? ??? npm ???\n",
    "text": "view",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the command to retrieve the contributors to the *npm* package:\n\n    $ ??? ??? npm ???\n",
    "text": "contributors",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the command to retrieve the contributors to the *npm* package:\n\n    $ ??? ??? npm ???\n",
    "text": "@contributors",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the command to retrieve the contributors to the *npm* package:\n\n    $ ??? ??? npm ???\n",
    "text": "ls",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order for the JavaScript file to be a module, it must have\n\n???\n",
    "text": "a non-empty `exports` object",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In order for the JavaScript file to be a module, it must have\n\n???\n",
    "text": "at least one function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order for the JavaScript file to be a module, it must have\n\n???\n",
    "text": "constants",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order for the JavaScript file to be a module, it must have\n\n???\n",
    "text": "at least one non-void function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Usually, a module id is\n\n???\n",
    "text": "the name of the main JavaScript file",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Usually, a module id is\n\n???\n",
    "text": "the name of the first function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Usually, a module id is\n\n???\n",
    "text": "defined in the *package.json*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `npm` command, after being ran will ask for your credentials and log you in?\n\n```bash\n$ ???\n```\n",
    "text": "npm login",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which `npm` command, after being ran will ask for your credentials and log you in?\n\n```bash\n$ ???\n```\n",
    "text": "npm config",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `npm` command, after being ran will ask for your credentials and log you in?\n\n```bash\n$ ???\n```\n",
    "text": "npm publish",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to publish your package to the npm repository, you need\n\n???.\n",
    "text": "an npm account",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In order to publish your package to the npm repository, you need\n\n???.\n",
    "text": "an initial package version of `1.0.0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In order to publish your package to the npm repository, you need\n\n???.\n",
    "text": "a `README.md` file",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "add",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "tag",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "version-tag",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "0.0.1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to add a tag to your package:\n\n    $ npm dist-tag ???\n        <pkg>@<version> [<???>]\n",
    "text": "publish",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "dist-tag",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "ls",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "rm",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "--tag",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "List all the tags for a package:\n\n```bash\n$ npm ??? ??? [<pkg>]\n```\n",
    "text": "tags",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "publish",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "--access",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "=",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "public",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "private",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "allow",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "open",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "ssl",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "pub",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "install",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you publish **publicly** your scoped npm package?\n\n```bash\n$ npm ??? ??? ??? ???\n```\n",
    "text": "&&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Scoped packages are ??? by default.\n",
    "text": "private",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Scoped packages are ??? by default.\n",
    "text": "public",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what command is `npm login` an alias?\n\n???\n",
    "text": "npm adduser",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For what command is `npm login` an alias?\n\n???\n",
    "text": "npm signup",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what command is `npm login` an alias?\n\n???\n",
    "text": "npm signin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what command is `npm login` an alias?\n\n???\n",
    "text": "npm add",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have a `test` script defined in your `package.json`, what will be the easiest way to invoke it?\n\n```bash\n$ ???\n```\n",
    "text": "npm test",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If you have a `test` script defined in your `package.json`, what will be the easiest way to invoke it?\n\n```bash\n$ ???\n```\n",
    "text": "npm run test",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have a `test` script defined in your `package.json`, what will be the easiest way to invoke it?\n\n```bash\n$ ???\n```\n",
    "text": "jest all",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have a `test` script defined in your `package.json`, what will be the easiest way to invoke it?\n\n```bash\n$ ???\n```\n",
    "text": "test",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you have a `test` script defined in your `package.json`, what will be the easiest way to invoke it?\n\n```bash\n$ ???\n```\n",
    "text": "test .",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "\"scripts\"",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "\"test\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "index.js",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "scripts",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "test",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following *package.json* file with code that would make `npm run test` lint *index.js* file:\n\n```javascript\n{\n  // ...\n  ???: {\n    ???: \"jslint ???\"\n  }\n}\n```\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gap such that the resulted version of your package will be the same as the one specified:\n\n```bash\n# assume current version is 3.2.5\n$ npm version ???\n# new version will be 3.3.5\n```\n",
    "text": "minor",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the gap such that the resulted version of your package will be the same as the one specified:\n\n```bash\n# assume current version is 3.2.5\n$ npm version ???\n# new version will be 3.3.5\n```\n",
    "text": "major",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gap such that the resulted version of your package will be the same as the one specified:\n\n```bash\n# assume current version is 3.2.5\n$ npm version ???\n# new version will be 3.3.5\n```\n",
    "text": "patch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you un-deprecate `enki` package?\n\n    $ npm ??? enki ???\n",
    "text": "deprecate",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you un-deprecate `enki` package?\n\n    $ npm ??? enki ???\n",
    "text": "\"\"",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How do you un-deprecate `enki` package?\n\n    $ npm ??? enki ???\n",
    "text": "un-deprecate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you un-deprecate `enki` package?\n\n    $ npm ??? enki ???\n",
    "text": "\"un-deprecated Enki",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you un-deprecate `enki` package?\n\n    $ npm ??? enki ???\n",
    "text": "\"any message\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "shrinkwrap",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "lock",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "dependencies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "package.json",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What command do you need to run as to generate a snapshot of the current dependency tree and lock down versions inside it?\n\n    $ ??? ???\n",
    "text": "npm-shrinkwrap",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `npm link`?\n\n???\n",
    "text": "uses the online npm registry to link global packages",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is false about `npm link`?\n\n???\n",
    "text": "creates a symbolic link between packages",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `npm link`?\n\n???\n",
    "text": "allows easier local development when working with multiple libraries",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `npm link`?\n\n???\n",
    "text": "allows you to use a local library without reinstalling it after each time",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "link myLibrary",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "link",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "--use-local:myLibrary",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "--local:myLibrary",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "--use-local=myLibrary",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider your main application relies on an external library `myLibrary` you have access to. The latter one requires some modifications too, but it would be to menial to reinstall it with each change.\n\nWhich npm command can you use to make you application use your local version of the library?\n\n```bash\n$ npm ???\n```\n",
    "text": "--local=myLibrary",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "cache",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "clean",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "clear",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "get",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "config",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you clear your npm cache?\n\n```bash\n$ ??? ??? ???\n```\n",
    "text": "cache-clean",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "npm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "config",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "get",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "cache",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "path",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "local",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "pathTo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "isAt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "getPath",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you get the path to your npm cache?\n\n```bash\n$ ??? ??? ??? ???\n```\n",
    "text": "ls",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`componentDidUpdate`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`componentDidMount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`componentWillUpdate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`componentWillMount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`componentWillUnmount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What of the following methods is called **after** rendering, but not after the first one.\n\n???\n",
    "text": "`constructor`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is the first being called in the **component lifecycle**?\n\n???\n",
    "text": "`constructor`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is the first being called in the **component lifecycle**?\n\n???\n",
    "text": "`componentWillMount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is the first being called in the **component lifecycle**?\n\n???\n",
    "text": "`shouldComponentUpdate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is the first being called in the **component lifecycle**?\n\n???\n",
    "text": "`componentDidMount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`myHandler`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`this.myHandler`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`bind`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`this`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`myHandler()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`this.myHandler()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`bind()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `constructor` of the following **React Component** so that you can use `this` keyword in `myHandler()`:\n\n```jsx\nclass Practice extends React.Component {\n  constructor(props) {\n    super(props)\n    this.??? =\n     ???.???(???)\n  }\n  myHandler() {\n    console.log('practice');\n  }\n  // render()...\n}\n```\n",
    "text": "`bind(this)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`onClick`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`this.clickCallback`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`clickCallback`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`onMousePressed`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`onclicked`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`onclick`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add `clickCallback` as an event handler for the defined `<button>` in the following component:\n\n```jsx\nclass Click extends React.Component {\n  clickCallback() {\n    console.log('clicked');\n  }\n  render() {\n    return (\n      <button ???={???}>\n        Click\n      </button>\n    );\n  }\n}\n```\n",
    "text": "`this.clickCallback()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`setState`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`value`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`onChange`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`e`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`handle`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`handleChange`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`event`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`onHandleChange`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the rendered **controlled component** makes sense and works:\n\n```jsx\nclass Control extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n    this.state = {in: ''};\n  }\n\n  handle(e) {\n  \tthis.???({\n    \tin: e.target.value\n    });\n  }\n\n  render() {\n  \treturn (\n     <input type=\"text\"\n        ???={this.state.in}\n      \t???={(???) =>\n          this.???(e)} />\n    );\n  }\n};\n\nReactDOM.render(\n  <Control />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`selected`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a **controlled component**?\n\nA component ???.\n",
    "text": "whose `state` is the **single source of truth**",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a **controlled component**?\n\nA component ???.\n",
    "text": "using **React**-specific *form elements*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a **controlled component**?\n\nA component ???.\n",
    "text": "without `props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a **controlled component**?\n\nA component ???.\n",
    "text": "with any *HTML form elements*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`props.input`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`map`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`h2`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`key`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`/h2`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`div`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`/div`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`input`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet such that for every element in `input` prop, its value is displayed inside a `<h2>`:\n\n```jsx\nfunction Test(props) {\n  return (<div>\n    {???.???(i =>\n      <??? ???={i.toString()}>\n        {i}\n      <???>)}\n  </div>);\n}\n```\n",
    "text": "`forEach`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the **identity attribute** that must be included when creating collections of `element`s with `map`?\n\n???\n",
    "text": "`key`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the name of the **identity attribute** that must be included when creating collections of `element`s with `map`?\n\n???\n",
    "text": "`index`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the **identity attribute** that must be included when creating collections of `element`s with `map`?\n\n???\n",
    "text": "`i`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the **identity attribute** that must be included when creating collections of `element`s with `map`?\n\n???\n",
    "text": "`identity`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the name of the **identity attribute** that must be included when creating collections of `element`s with `map`?\n\n???\n",
    "text": "`ref`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **lifecycle method** is used to target the point in time **before** `render`ing?\n\n???\n",
    "text": "`componentWillMount`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What **lifecycle method** is used to target the point in time **before** `render`ing?\n\n???\n",
    "text": "`componentDidMount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **lifecycle method** is used to target the point in time **before** `render`ing?\n\n???\n",
    "text": "`componentWillUnmount`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **lifecycle method** is used to target the point in time **before** `render`ing?\n\n???\n",
    "text": "`render`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is `React.Component`'s `constructor(props)` method considered a **lifecycle hook**?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is `React.Component`'s `constructor(props)` method considered a **lifecycle hook**?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is `React.Component`'s `constructor(props)` method considered a **lifecycle hook**?\n\n???\n",
    "text": "only when setting `state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is `React.Component`'s `constructor(props)` method considered a **lifecycle hook**?\n\n???\n",
    "text": "if only accompanied by other **lifecycle methods**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`props`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`show`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`?`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`false`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`if`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`else`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`C`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that `\"B\"` is rendered on the screen:\n\n```jsx\nfunction A(props) {\n  return <p>A</p>;\n}\n\nfunction B(props) {\n  return <p>B</p>;\n}\n\nfunction C(props){\n  const show = ???.???;\n  return show ??? <A /> : <B />;\n}\n\nReactDOM.render(\n  <C show={???} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **React** use for **conditional rendering**?\n\n???\n",
    "text": "standard `JS` - `if`s and ternary operators",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does **React** use for **conditional rendering**?\n\n???\n",
    "text": "the `renderIf` special method",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **React** use for **conditional rendering**?\n\n???\n",
    "text": "the `renderIfElse` special method",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does **React** use for **conditional rendering**?\n\n???\n",
    "text": "you can't conditional render in **React**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`!props.x`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`&&`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`</div>`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`props.x`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`x`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`!x`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`||`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`</h2>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following component such that it will render `\"Hello, World\"`:\n\n```jsx\nfunction A(props) {\n  const y = props.y;\n  if (???) {\n    return null;\n  }\n  return (\n    <div>\n    {y ??? <h2>Hello, World</h2>}\n    <???>\n  );\n}\n\nReactDOM.render(\n  <A x={true} y={true} />,\n  document.getElementById('root')\n);\n```\n",
    "text": "`<div>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered in the following scenario?\n\n```jsx\nfunction Exercise(props) {\n  const x = props.x;\n  if (props.not) {\n    return null;\n  }\n  return (\n  \t<div>\n    {x ? <p>Yes</p> : <p>No</p>}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Exercise not={false} x={true} />,\n  document.getElementById('root')\n);\n```\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be rendered in the following scenario?\n\n```jsx\nfunction Exercise(props) {\n  const x = props.x;\n  if (props.not) {\n    return null;\n  }\n  return (\n  \t<div>\n    {x ? <p>Yes</p> : <p>No</p>}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Exercise not={false} x={true} />,\n  document.getElementById('root')\n);\n```\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered in the following scenario?\n\n```jsx\nfunction Exercise(props) {\n  const x = props.x;\n  if (props.not) {\n    return null;\n  }\n  return (\n  \t<div>\n    {x ? <p>Yes</p> : <p>No</p>}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Exercise not={false} x={true} />,\n  document.getElementById('root')\n);\n```\n\n???\n",
    "text": "Error raised",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered in the following scenario?\n\n```jsx\nfunction Exercise(props) {\n  const x = props.x;\n  if (props.not) {\n    return null;\n  }\n  return (\n  \t<div>\n    {x ? <p>Yes</p> : <p>No</p>}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Exercise not={false} x={true} />,\n  document.getElementById('root')\n);\n```\n\n???\n",
    "text": "Null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`...props`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`{text}`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`{props}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`this.props.text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following functional component such that:\n\n```jsx\nfunction Enki({text, ???}) {\n  return <h1 {...props}>???</h1>;\n}\n```\n",
    "text": "`props.text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` and `test.props.y` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return (\n    <div>\n      <p>{props.x}</p>\n      <p>{props.y}</p>\n    </div>\n  );\n}\n\nconst props = {\n  x: 'dog',\n  y: 'dog',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n// test.props.y = ???\n```\n",
    "text": "`'cat'`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the value of `test.props.x` and `test.props.y` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return (\n    <div>\n      <p>{props.x}</p>\n      <p>{props.y}</p>\n    </div>\n  );\n}\n\nconst props = {\n  x: 'dog',\n  y: 'dog',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n// test.props.y = ???\n```\n",
    "text": "`'dog'`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will the value of `test.props.x` and `test.props.y` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return (\n    <div>\n      <p>{props.x}</p>\n      <p>{props.y}</p>\n    </div>\n  );\n}\n\nconst props = {\n  x: 'dog',\n  y: 'dog',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n// test.props.y = ???\n```\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` and `test.props.y` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return (\n    <div>\n      <p>{props.x}</p>\n      <p>{props.y}</p>\n    </div>\n  );\n}\n\nconst props = {\n  x: 'dog',\n  y: 'dog',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n// test.props.y = ???\n```\n",
    "text": "`'dogcat'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` and `test.props.y` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return (\n    <div>\n      <p>{props.x}</p>\n      <p>{props.y}</p>\n    </div>\n  );\n}\n\nconst props = {\n  x: 'dog',\n  y: 'dog',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n// test.props.y = ???\n```\n",
    "text": "`'catdog'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return <p>{props.x}</p>;\n}\n\nconst props = {\n  x: 'dog',\n  y: 'cat',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n```\n",
    "text": "`'cat'`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the value of `test.props.x` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return <p>{props.x}</p>;\n}\n\nconst props = {\n  x: 'dog',\n  y: 'cat',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n```\n",
    "text": "`'dog'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return <p>{props.x}</p>;\n}\n\nconst props = {\n  x: 'dog',\n  y: 'cat',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n```\n",
    "text": "`error`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return <p>{props.x}</p>;\n}\n\nconst props = {\n  x: 'dog',\n  y: 'cat',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n```\n",
    "text": "`'dogcat'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the value of `test.props.x` in the following snippet?\n\n```jsx\nfunction Test(props) {\n  return <p>{props.x}</p>;\n}\n\nconst props = {\n  x: 'dog',\n  y: 'cat',\n};\n\nconst test = <Test {...props}\n  x=\"cat\" />;\n\n// test.props.x = ???\n```\n",
    "text": "`'catdog'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`ref`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`myInput`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`in`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`refs`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`input`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`<input />`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`null`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`ref.myInput`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following `render()` function such that, after *mounting*, the `<input />` element can be accessed via `this.myInput`:\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ???={(in) => {\n         this.??? = ???)}} />\n    </div>\n    );\n}\n```\n",
    "text": "`ref.in`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`this.i`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`this.refs.i`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`i`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`this.in`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`this.refs.in`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you access the referenced `<input />` element from within `someMethod()` in the example below?\n\n```jsx\nrender() {\n  return (\n    <div>\n      <input ref={(in) => {\n         this.i = in)}} />\n    </div>\n    );\n}\n\nsomeMethod() {\n  ???.focus();\n}\n```\n",
    "text": "`in`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "fetched",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "the first view of the webapp",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "written",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "scripted",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "results",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The main advantage of server-side rendering in React is that the user doesn't have to wait for JS to be ??? before seeing ???.\n",
    "text": "improved user performance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`function`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`props`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`return`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`{props.test}`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`{this.props.test}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`render`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`func`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`props.test`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`test`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the second code snippet such that it's equivalent to the first:\nFirst:\n\n```jsx\nclass Test extend React.Component {\n  render() {\n    return <h1>{this.props.test}\n  }\n}\n```\n\nSecond:\n\n```jsx\n??? Test(???) {\n  ??? <p>???</p>;\n}\n```\n",
    "text": "`this.props.test`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When can a component be written as a `function`?\n\nWhen it has ???.\n",
    "text": "no `state` and **lifecycle methods**",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When can a component be written as a `function`?\n\nWhen it has ???.\n",
    "text": "no `state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When can a component be written as a `function`?\n\nWhen it has ???.\n",
    "text": "no **lifecycle methods**",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When can a component be written as a `function`?\n\nWhen it has ???.\n",
    "text": "no `props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`class`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`extends`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`Component`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`render`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`return`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`Enki`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`createClass`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    ??? MyComponent ??? React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`createElement`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`Component`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`render`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`return`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`Enki`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`createClass`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps such that a `component` is defined using `ES6` syntax:\n\n    class MyComponent extends React.??? {\n      ???() {\n        return <h1>Hello, World!</h1>;\n      }\n    }\n",
    "text": "`createElement`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`ReactDOM`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`element`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`root`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`react-dom`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`Enki`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`div`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Render `\"Enki\"` under the `root` node:\n\n    const element = <h2>Enki<h2>;\n\n    ???.render(\n      ???,\n      document.getElementById('???')\n    );\n",
    "text": "`id`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`React` elements are\n\n???\n",
    "text": "immutable",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`React` elements are\n\n???\n",
    "text": "mutable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`React` elements are\n\n???\n",
    "text": "**DOM** elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`React` elements are\n\n???\n",
    "text": "components",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`React` elements are\n\n???\n",
    "text": "classes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`defaultProps`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`myValue`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`Enki`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`element`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`default`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`Enki myValue=\"Enki\"`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed output is \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.props.myValue}</p>;\n  }\n}\n\nEnki.??? = {\n  ???: \"Enki\",\n}\n\nconst element = <??? />;\n\nReactDOM.render(\n  ???,\n  document.getElementById('root')\n);\n```\n",
    "text": "`createElement`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`props`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`myValue`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`Enki`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`defaultProps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`element`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`default`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing gaps so that the `render`ed element under `root` reads \"Enki\":\n\n```jsx\nclass Enki extends React.Component {\n  render() {\n    return <p>{this.???.???}</p>;\n  }\n}\n\nconst element = <???\n  myValue=\"Hello there\" />;\n\nReactDOM.render(\n  element\n  document.getElementById('root')\n);\n```\n",
    "text": "`class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you change the value of `this.state.a` ?\n\n```jsx\n???\n```\n",
    "text": "`this.setState({a: 'A'})`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you change the value of `this.state.a` ?\n\n```jsx\n???\n```\n",
    "text": "`this.state.a = 'A'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you change the value of `this.state.a` ?\n\n```jsx\n???\n```\n",
    "text": "`this.setState({state: {a: 'A'}})`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you change the value of `this.state.a` ?\n\n```jsx\n???\n```\n",
    "text": "`constructor(state) {super({a: 'A'})}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should **initial state** be set in a component class?\n\n???\n",
    "text": "in `constructor(props)`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Where should **initial state** be set in a component class?\n\n???\n",
    "text": "in `render()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should **initial state** be set in a component class?\n\n???\n",
    "text": "in `this.setState(initialState)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should **initial state** be set in a component class?\n\n???\n",
    "text": "anywhere in the component",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`update`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`$`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`push`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`set`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`$unshift`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`splice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`arrray`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`{`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "```javascript\nmyData.x.y = 3;\nmyData.a.b.push(4);\n```\n\nGive the equivalent of the code above with the help of immutability helpers:\n\n```javascript\nvar update = require('react-addons-update');\nvar newObj = ???(myData, {\n x: {y: {???set :3}},\n a: {b: {$???: [4]}},\n});\n```\n",
    "text": "`}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`createFragment`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`children`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`create`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`opaque`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the `createFragment` add-on below which can give keys to sets of children:\n\n```javascript\nArray<ReactNode ???(\n      object ???);\n```\n",
    "text": "`createProps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of object is returned by `createFragment`? ???\n",
    "text": "An opaque object.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of object is returned by `createFragment`? ???\n",
    "text": "A transparent object.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "componentDidMount",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "mounted",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "true",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "this.mounted",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "componentWillUnmount",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "componentDidUnMount",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "render",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "false",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "isMounted",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you want to load some data via an ajax call to your component after it was mounted. Fill in the gaps such that you make sure you won't update the state with your ajax call login if the component is unmounted:\n\n```javascript\nconst component = React.createClass({\n  ???: {\n    this.??? = ???\n    $.get(this.props.ajaxSource, res => {\n      if (???) {\n        this.setState({\n          propToUpdate: res\n        })\n      }\n    })\n  }\n\n  render() {\n    // ...\n  }\n\n  ??? {\n    this.mounted = false\n  }\n})\n```\n",
    "text": "componentWillReceiveProps",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "componentDidMount()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "componentDidUnmount()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "componentDidRender()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "render()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "component()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose you need to load some data via an ajax call to your component, after it was mounted.\n\nWhich lifecycle method will you use to load the data?\n\n```javascript\nconst component = React.createClass({\n  ??? {\n    $.get('path/to/resource', res => {\n      // ...\n    })\n  }\n})\n```\n",
    "text": "componentWillReceiveProps()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is this a controlled or uncontrolled <input>? ???\n\n```javascript\nReactDOM.render(<input value=\"Enki!\" />,\n                node)\n```\n",
    "text": "Controlled",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is this a controlled or uncontrolled <input>? ???\n\n```javascript\nReactDOM.render(<input value=\"Enki!\" />,\n                node)\n```\n",
    "text": "Uncontrolled",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Make the following `<input>` form element uncontrolled:\n\n```javascript\nReactDOM.render(<input\n  value={???} />, node);\n```\n",
    "text": "`null`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Make the following `<input>` form element uncontrolled:\n\n```javascript\nReactDOM.render(<input\n  value={???} />, node);\n```\n",
    "text": "`uncontrolled`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Make the following `<input>` form element uncontrolled:\n\n```javascript\nReactDOM.render(<input\n  value={???} />, node);\n```\n",
    "text": "`0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Make the following `<input>` form element uncontrolled:\n\n```javascript\nReactDOM.render(<input\n  value={???} />, node);\n```\n",
    "text": "`NaN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "element instance",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "y",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "component instance",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "DOM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "ReactDOM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "variable",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following call return?\n\n???\n\n```javascript\nvar x = <Enki />\n```\n\nWhat will the following call return?\n\n```javascript\nvar y = ReactDOM.render(\n  <Enki />, container\n)\n```\n\nSuppose the Enki component has a method `sayHello`. Which of the two variables above will be allowed to call it like:\n\n```javascript\n???.sayHello()\n```\n",
    "text": "constant",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method will return a `ref` to a component?\n\n???\n",
    "text": "ReactDOM.render()",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method will return a `ref` to a component?\n\n???\n",
    "text": "render()",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`__html`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`html`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`_html`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`value`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`id`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the key needed for the `dangerouslySetInnerHTML` prop:\n\n```javascript\ndangerouslySetInnerHTML:\n{ ???: '<p>Enki </p>' }\n```\n",
    "text": "`text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use switch statements in JSX?\n\n???\n",
    "text": "only wrapped in an IIFE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you use switch statements in JSX?\n\n???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use switch statements in JSX?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use switch statements in JSX?\n\n???\n",
    "text": "only for strings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "condition",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "?",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "'x'",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": ":",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "'y'",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "x",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "y",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "if",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "else",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "switch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you write `if (condition) return 'x' else return 'y'` in JSX id assignment?\n\n```javascript\n<div id=\n  {\n    ??? ??? ??? ??? ???\n  }>\n```\n",
    "text": "() =>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "style",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "=",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "{pStyle}",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "pstyle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": ":",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "pStyle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "s",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "applyStyle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "useStyle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following style object:\n\n```javascript\nvar pStyle = {\n  fontSize: 15,\n  color: 'black'\n}\n```\n\nHow would you pass it to the following `<p />`?\n\n```javascript\nReactDDOM.render(\n  <p ??? ??? ???>Enki!</p>,\naNode)\n```\n",
    "text": "{style}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `style` object that's meant to be passed to a React element:\n\n```javascript\nvar style = {\n  color: 'white',\n  ???: 'all',\n  ???: 'all'\n}\n```\n",
    "text": "WebkitTransition",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the following `style` object that's meant to be passed to a React element:\n\n```javascript\nvar style = {\n  color: 'white',\n  ???: 'all',\n  ???: 'all'\n}\n```\n",
    "text": "msTransition",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the following `style` object that's meant to be passed to a React element:\n\n```javascript\nvar style = {\n  color: 'white',\n  ???: 'all',\n  ???: 'all'\n}\n```\n",
    "text": "ms-transition",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the following `style` object that's meant to be passed to a React element:\n\n```javascript\nvar style = {\n  color: 'white',\n  ???: 'all',\n  ???: 'all'\n}\n```\n",
    "text": "webkit-transition",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following tags is a self closing tag? ???\n\n    // Option A\n    <div>\n    </div>\n\n    // Option B\n    <tag/>\n",
    "text": "Option B",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following tags is a self closing tag? ???\n\n    // Option A\n    <div>\n    </div>\n\n    // Option B\n    <tag/>\n",
    "text": "Option A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following tags is a self closing tag? ???\n\n    // Option A\n    <div>\n    </div>\n\n    // Option B\n    <tag/>\n",
    "text": "Neither of them..",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does **JSX** support self closing tags?\n\n???\n",
    "text": "`yes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Does **JSX** support self closing tags?\n\n???\n",
    "text": "`no`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does **JSX** support self closing tags?\n\n???\n",
    "text": "`depends`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet do? ???\n\n```javascript\nReactDOM.render(<div>{false}</div>, aNode);\n```\n",
    "text": "Specifies that the React element has no child.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet do? ???\n\n```javascript\nReactDOM.render(<div>{false}</div>, aNode);\n```\n",
    "text": "Renders the div element false.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet do? ???\n\n```javascript\nReactDOM.render(<div>{false}</div>, aNode);\n```\n",
    "text": "Renders there to be no div element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How will the `id` in the following code snippet be rendered as?\n\n```jsx\nReactDOM.render(<div id={false} />, myNode);\n```\n\nResult:\n\n    id=???\n",
    "text": "`\"false\"`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How will the `id` in the following code snippet be rendered as?\n\n```jsx\nReactDOM.render(<div id={false} />, myNode);\n```\n\nResult:\n\n    id=???\n",
    "text": "`'false'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How will the `id` in the following code snippet be rendered as?\n\n```jsx\nReactDOM.render(<div id={false} />, myNode);\n```\n\nResult:\n\n    id=???\n",
    "text": "`false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How will the `id` in the following code snippet be rendered as?\n\n```jsx\nReactDOM.render(<div id={false} />, myNode);\n```\n\nResult:\n\n    id=???\n",
    "text": "`undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of data flow needs to be used if we want the `view` to directly update the data `model`?\n\n???\n",
    "text": "two-way",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of data flow needs to be used if we want the `view` to directly update the data `model`?\n\n???\n",
    "text": "one-way",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of data flow needs to be used if we want the `view` to directly update the data `model`?\n\n???\n",
    "text": "both",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of data flow needs to be used if we want the `view` to directly update the data `model`?\n\n???\n",
    "text": "neither",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can **two-way data binding** be implemented in **React**?\n\n???\n",
    "text": "yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can **two-way data binding** be implemented in **React**?\n\n???\n",
    "text": "no",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can **two-way data binding** be implemented in **React**?\n\n???\n",
    "text": "only in **React 14** and above",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a bundler for react?\n\n???\n",
    "text": "jsx",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a bundler for react?\n\n???\n",
    "text": "babel",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a bundler for react?\n\n???\n",
    "text": "webpack",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a bundler for react?\n\n???\n",
    "text": "browserify",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tool will automatically set-up the development environment for a simple `React` **SPA**?\n\n???\n",
    "text": "create-react-app",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which tool will automatically set-up the development environment for a simple `React` **SPA**?\n\n???\n",
    "text": "react-dom",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tool will automatically set-up the development environment for a simple `React` **SPA**?\n\n???\n",
    "text": "browserify",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tool will automatically set-up the development environment for a simple `React` **SPA**?\n\n???\n",
    "text": "babel-preset-react",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`'p'`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`null`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`'<3 JSX'`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`jsx`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`'<p><3 JSX</p>'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following **JSX** expression compile to?\n\n    const el = <p><3 JSX</p>\n\n    // compiled to:\n\n    const el = React.createElement(???,\n     ???, ???)\n",
    "text": "`'</p>'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "**JSX** expressions after compilation are transformed into\n??? .\n",
    "text": "`JavaScript` objects",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "**JSX** expressions after compilation are transformed into\n??? .\n",
    "text": "`HTML` elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "**JSX** expressions after compilation are transformed into\n??? .\n",
    "text": "`JSX` entities",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "**JSX** expressions after compilation are transformed into\n??? .\n",
    "text": "`XML` elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React manages to keep the DOM in sync with the data model by\n\n???\n",
    "text": "rendering necessary changes with the help of the Virtual DOM",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "React manages to keep the DOM in sync with the data model by\n\n???\n",
    "text": "re-rendering the entire DOM on every change in data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React manages to keep the DOM in sync with the data model by\n\n???\n",
    "text": "using functions to update the DOM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React manages to keep the DOM in sync with the data model by\n\n???\n",
    "text": "using JSX",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React is a JavaScript\n\n ???\n",
    "text": "library",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "React is a JavaScript\n\n ???\n",
    "text": "framework",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React is a JavaScript\n\n ???\n",
    "text": "application",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "React is a JavaScript\n\n ???\n",
    "text": "implementation of HTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about **React**?\n\n???\n",
    "text": "the virtual DOM slows down performance",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is false about **React**?\n\n???\n",
    "text": "the syntax is simple",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about **React**?\n\n???\n",
    "text": "it can create web *and* mobile applications",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "**Virtual DOM** diff algorithm",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "JSX",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "SEO",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "React Native",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "React Chrome Extension",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of the following improves **React**'s performance the most?\n\n???\n",
    "text": "one-way data binding",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider you need to implement a custom `propTypes` validator. What should you code do if the validator is used like: `myValidator.isRequired`, but no prop is passed to it?\n\n???\n",
    "text": "throw an error",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider you need to implement a custom `propTypes` validator. What should you code do if the validator is used like: `myValidator.isRequired`, but no prop is passed to it?\n\n???\n",
    "text": "send a notification to the user",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider you need to implement a custom `propTypes` validator. What should you code do if the validator is used like: `myValidator.isRequired`, but no prop is passed to it?\n\n???\n",
    "text": "crash the webpage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider you need to implement a custom `propTypes` validator. What should you code do if the validator is used like: `myValidator.isRequired`, but no prop is passed to it?\n\n???\n",
    "text": "don't allow the component to render again",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is there a way to make a custom `propTypes` validator function implementing the `.isRquired` behavior of normal `propTypes` ?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is there a way to make a custom `propTypes` validator function implementing the `.isRquired` behavior of normal `propTypes` ?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is there a way to make a custom `propTypes` validator function implementing the `.isRquired` behavior of normal `propTypes` ?\n\n???\n",
    "text": "Only in `ES6`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is there a way to make a custom `propTypes` validator function implementing the `.isRquired` behavior of normal `propTypes` ?\n\n???\n",
    "text": "Only in `ES5` and `ES6`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is there a way to make a custom `propTypes` validator function implementing the `.isRquired` behavior of normal `propTypes` ?\n\n???\n",
    "text": "Only with an external package",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`props`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`propName`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`componentName`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`validator`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`value`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the basic arguments of a validator function?\n\n```jsx\nfunction (???, ???, ???) {\n //check here\n}\n```\n",
    "text": "`name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing that such that the default values for the `value` prop is `\"xyz\"`:\n\n```jsx\nfunction Comp(props) {\n  return <h2>{props.value}</h2>;\n}\n\nComp.??? = {\n  ???: ???,\n};\n```\n",
    "text": "`defaultProps`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the missing that such that the default values for the `value` prop is `\"xyz\"`:\n\n```jsx\nfunction Comp(props) {\n  return <h2>{props.value}</h2>;\n}\n\nComp.??? = {\n  ???: ???,\n};\n```\n",
    "text": "`value`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the missing that such that the default values for the `value` prop is `\"xyz\"`:\n\n```jsx\nfunction Comp(props) {\n  return <h2>{props.value}</h2>;\n}\n\nComp.??? = {\n  ???: ???,\n};\n```\n",
    "text": "`'xyz'`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill the missing that such that the default values for the `value` prop is `\"xyz\"`:\n\n```jsx\nfunction Comp(props) {\n  return <h2>{props.value}</h2>;\n}\n\nComp.??? = {\n  ???: ???,\n};\n```\n",
    "text": "`default`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the missing that such that the default values for the `value` prop is `\"xyz\"`:\n\n```jsx\nfunction Comp(props) {\n  return <h2>{props.value}</h2>;\n}\n\nComp.??? = {\n  ???: ???,\n};\n```\n",
    "text": "`getDefaultProps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`PropTypes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`instanceOf`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`Enki`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`enki`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`ObjectOf`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`PropType`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`propType`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Validate if `myProp` is an instance of the `Enki` class:\n\n```jsx\nfunction Test(props) {\n  return <p>Testing props..</p>;\n}\n\nTest.propTypes = {\n  myProp = React.???\n              .???(???),\n};\n```\n",
    "text": "`oneOf`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`PropTypes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`func`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`object`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`function`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`obj`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`node`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`element`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`method`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`Props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the missing validation such that the first prop is a function and the second an object:\n\n```jsx\nfunction Test(props) { return <p>A</p>; };\nTest.propTypes = {\n  myFunction: React.???.???,\n  myObject: React.PropTypes.???,\n};\n```\n",
    "text": "`Primitives`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`<h1>Main</h1>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`nothing`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`<p>Main</p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`root`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`Exercise`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will be rendered within the `div` with `id=\"main\"`?\n\n```jsx\nfunction Exercise(props) {\n\treturn (\n  \t<div id=\"main\">\n  \t\t{props.children}\n  \t</div>\n    );\n}\n\nReactDOM.render(\n  <Exercise><h1>Main</h1></Exercise>,\n  document.getElementById('root')\n);\n```\n\n`???`\n",
    "text": "`<h2>Main</h2>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the minimum number of elements `props.children` can hold?\n\n???\n",
    "text": "`zero`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the minimum number of elements `props.children` can hold?\n\n???\n",
    "text": "`one`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the minimum number of elements `props.children` can hold?\n\n???\n",
    "text": "`at least two`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`map`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`forEach`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`fn`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`count`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`only`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function on every immediate child within children, and returns an array? ???\n",
    "text": "`toArray`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function `fn` on every immediate child, but not to return an array?\n\n???\n",
    "text": "`forEach`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to invoke a function `fn` on every immediate child, but not to return an array?\n\n???\n",
    "text": "`map`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function `fn` on every immediate child, but not to return an array?\n\n???\n",
    "text": "`count`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to invoke a function `fn` on every immediate child, but not to return an array?\n\n???\n",
    "text": "`only`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do you think about generating state from props in `getInitialState`?\n\n???\n",
    "text": "it's an anti-pattern",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What do you think about generating state from props in `getInitialState`?\n\n???\n",
    "text": "it's a good practice",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do you think about generating state from props in `getInitialState`?\n\n???\n",
    "text": "can cause application crashes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do you think about generating state from props in `getInitialState`?\n\n???\n",
    "text": "it's useful when working with many props",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following two components do you think employs the best practice for passing props?\n\n```javascript\nvar A = React.createClass({\n  getInitialState: function() {\n    return {\n      myState: this.props.myProp\n    };\n  }\n  render: function() {\n    return <div>\n      {this.state.myState}\n    </div>;\n  }\n});\n\nvar B = React.createClass({\n  render: function() {\n    return <div>{\n      this.props.myProp\n    }</div>;\n  }\n});\n```\n\n???\n",
    "text": "A",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following two components do you think employs the best practice for passing props?\n\n```javascript\nvar A = React.createClass({\n  getInitialState: function() {\n    return {\n      myState: this.props.myProp\n    };\n  }\n  render: function() {\n    return <div>\n      {this.state.myState}\n    </div>;\n  }\n});\n\nvar B = React.createClass({\n  render: function() {\n    return <div>{\n      this.props.myProp\n    }</div>;\n  }\n});\n```\n\n???\n",
    "text": "B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following two components do you think employs the best practice for passing props?\n\n```javascript\nvar A = React.createClass({\n  getInitialState: function() {\n    return {\n      myState: this.props.myProp\n    };\n  }\n  render: function() {\n    return <div>\n      {this.state.myState}\n    </div>;\n  }\n});\n\nvar B = React.createClass({\n  render: function() {\n    return <div>{\n      this.props.myProp\n    }</div>;\n  }\n});\n```\n\n???\n",
    "text": "both",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following two components do you think employs the best practice for passing props?\n\n```javascript\nvar A = React.createClass({\n  getInitialState: function() {\n    return {\n      myState: this.props.myProp\n    };\n  }\n  render: function() {\n    return <div>\n      {this.state.myState}\n    </div>;\n  }\n});\n\nvar B = React.createClass({\n  render: function() {\n    return <div>{\n      this.props.myProp\n    }</div>;\n  }\n});\n```\n\n???\n",
    "text": "neither",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`element`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`isRequired`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`node`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`arrayOf`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`mandatory`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`one`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What validator must be used to make sure there is exactly one child passed to `children`?\n\n```jsx\nchildren: React.PropTypes.???.???,\n```\n",
    "text": "`any`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "`[<p/> <p/>]`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "`<p/>`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "`[ <p/>]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "`<p/>, <p/>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following react component:\n\n```javascript\nvar Enki = React.createClass({\n  componentDidMount: function {\n    console.log(this.props.children)\n  }\n  render: function() {\n    return <div />;\n  }\n})\n```\n\nWhat will the following output?\n\n```javascript\nReactDOM.render(\n  <Enki><p/><p/></Enki>,\n  aNode\n);\n// ???\n\nReactDOM.render(\n  <Enki><p/></Enki>,\n  aSecondNode\n)\n// ???\n```\n",
    "text": "undefined",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a single child in your component. What will `this.props.children` return?\n\n???\n",
    "text": "only the child",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider there is a single child in your component. What will `this.props.children` return?\n\n???\n",
    "text": "an array with just the children in it",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a single child in your component. What will `this.props.children` return?\n\n???\n",
    "text": "an array of possible children",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider there is a single child in your component. What will `this.props.children` return?\n\n???\n",
    "text": "an array with the children and the parent component",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`cloneElement`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`ref`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`newElement`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`spawnElement`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`key`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`obj`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet below to clone an element and override the ref:\n\n```javascript\nReact.???(child, { ???: 'newRef' })\n```\n",
    "text": "`env`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `React.cloneElement` method what props will be preserved unlike with the  `cloneWithProps` method. ???\n",
    "text": "`key` and `ref`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the `React.cloneElement` method what props will be preserved unlike with the  `cloneWithProps` method. ???\n",
    "text": "`key` and `props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `React.cloneElement` method what props will be preserved unlike with the  `cloneWithProps` method. ???\n",
    "text": "`child` and `ref`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `React.cloneElement` method what props will be preserved unlike with the  `cloneWithProps` method. ???\n",
    "text": "`child` and `props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the argument of the `componentWillReceiveProps` function?\n\n```javascript\ncomponentWillReceiveProps(???) {\n  // ...\n}\n```\n",
    "text": "nextProps",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is the argument of the `componentWillReceiveProps` function?\n\n```javascript\ncomponentWillReceiveProps(???) {\n  // ...\n}\n```\n",
    "text": "currentProps",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the argument of the `componentWillReceiveProps` function?\n\n```javascript\ncomponentWillReceiveProps(???) {\n  // ...\n}\n```\n",
    "text": "oldProps",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the argument of the `componentWillReceiveProps` function?\n\n```javascript\ncomponentWillReceiveProps(???) {\n  // ...\n}\n```\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `componentWillReceiveProps` lifecylce method?\n\n???\n",
    "text": "will only be run once",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following statements is false about `componentWillReceiveProps` lifecylce method?\n\n???\n",
    "text": "isn't triggered once the node is mounted",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `componentWillReceiveProps` lifecylce method?\n\n???\n",
    "text": "can be used to listen to changes in props",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following statements is false about `componentWillReceiveProps` lifecylce method?\n\n???\n",
    "text": "can be triggered after the initial rendering",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "performance boost",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "pure",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "successful check",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "clean",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "raw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A ??? can be achieved with the helper function `shallowCompare` when used on a React component render function that is ???.\n",
    "text": "successful render",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import `shallowCompare` into your React code:\n\n```javascript\nvar shallowCompare = require('???');\n```\n",
    "text": "`react-addons-shallow-compare`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Import `shallowCompare` into your React code:\n\n```javascript\nvar shallowCompare = require('???');\n```\n",
    "text": "`shallow-compare`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import `shallowCompare` into your React code:\n\n```javascript\nvar shallowCompare = require('???');\n```\n",
    "text": "`s-compare`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Import `shallowCompare` into your React code:\n\n```javascript\nvar shallowCompare = require('???');\n```\n",
    "text": "`shallowcompare`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "...this.props",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "React.clone(this.props)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "React.this.props",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "this.props.children",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "...this.props.children",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you copy the contents of `this.props`, ideally for passing it down to other components?\n\n???\n",
    "text": "this.props.copy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "{",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "...",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "this.props",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "}",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "transfer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "{this.props}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "{...}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "{...props}",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How would you use the spread syntax to pass the current `props` to the following `<p/>` element?\n\n```javascript\nvar Sample = React.createClass({\n  render: function() {\n    return (\n      <p ??? ??? ??? ??? />\n    )\n  }\n})\n```\n",
    "text": "...props",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`enki`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`propTypes`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`set`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`get`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`React`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`ReactDOM`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following component defined as a simple function:\n\n```javascript\nlet enki = ({enki}) => <h1>{enki}</h1>;\n```\n\nComplete the code snippet to enforce **prop validation**:\n\n```javascript\n???.??? = {\n  enki: React.PropTypes.string,\n}\n```\n",
    "text": "`props`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "selectors",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "reducers",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "views",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "doms",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "components",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "instances",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "computation functions",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "state",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A good practice in Redux is to export your ??? with the related ???.\n",
    "text": "props",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "derived data",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "minimal possible state",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "maximum possible state",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "selected data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "exported data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "exported state",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Selectors are used to compute ???, therefore ensuring that Redux stores the ???.\n",
    "text": "selected state",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`createStore` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`getState` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`newStore` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`store` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`state` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`currentState` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a Redux store and get the current state of the application:\n\n    import { createStore } from ‘redux’;\n    let store = \n      ???(reducer, initstate);\n    store.???();\n",
    "text": "`retState`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to send an action to the store and to change the state?\n???\n",
    "text": "`dispatch()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What method is used to send an action to the store and to change the state?\n???\n",
    "text": "`createStore()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to send an action to the store and to change the state?\n???\n",
    "text": "`getState()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to send an action to the store and to change the state?\n???\n",
    "text": "`subscribe()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What method is used to send an action to the store and to change the state?\n???\n",
    "text": "`replaceReducer()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are the following functions pure or impure?\n\n```javascript\nfunction a(x) {\n  x = 'enki'\n  return x\n}\n\nfunction b(x){\n  return 'enki'\n}\n```\n\n???\n",
    "text": "impure, pure",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Are the following functions pure or impure?\n\n```javascript\nfunction a(x) {\n  x = 'enki'\n  return x\n}\n\nfunction b(x){\n  return 'enki'\n}\n```\n\n???\n",
    "text": "pure, impure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are the following functions pure or impure?\n\n```javascript\nfunction a(x) {\n  x = 'enki'\n  return x\n}\n\nfunction b(x){\n  return 'enki'\n}\n```\n\n???\n",
    "text": "impure, impure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are the following functions pure or impure?\n\n```javascript\nfunction a(x) {\n  x = 'enki'\n  return x\n}\n\nfunction b(x){\n  return 'enki'\n}\n```\n\n???\n",
    "text": "pure, pure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What type of functions should be used in **Redux** as to preserve the **single immutable state tree**?\n\n???\n",
    "text": "pure",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What type of functions should be used in **Redux** as to preserve the **single immutable state tree**?\n\n???\n",
    "text": "impure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`mapStateToProps`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`mergeProps`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`connectProps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`storeProps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`componentClass`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect the React component to the Redux store without modifying the component class passed, returning a new connected component class: \n\n```javascript\nconnect([???], [mapDispatchToProps], \n        [???], [options])\n```\n",
    "text": "`returnComponent`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What function must be imported as to turn a presentational container into a component?\n\n    import { ??? } form `react-redux`\n",
    "text": "`connect`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What function must be imported as to turn a presentational container into a component?\n\n    import { ??? } form `react-redux`\n",
    "text": "`container`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What function must be imported as to turn a presentational container into a component?\n\n    import { ??? } form `react-redux`\n",
    "text": "`dispatch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following packages do you think does not provide support for async flow in your **React** application?\n\n???\n",
    "text": "bluebird",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following packages do you think does not provide support for async flow in your **React** application?\n\n???\n",
    "text": "redux-thunk",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following packages do you think does not provide support for async flow in your **React** application?\n\n???\n",
    "text": "redux-promise",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does the default Redux store support asynchronous data flow?\n\n???\n",
    "text": "no",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Does the default Redux store support asynchronous data flow?\n\n???\n",
    "text": "yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does the default Redux store support asynchronous data flow?\n\n???\n",
    "text": "only if used with React",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Does the default Redux store support asynchronous data flow?\n\n???\n",
    "text": "only with ES6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Append `enki` to `myArray` using the spread operator in a **pure** fashion:\n\n    return [???myArray, ???];\n",
    "text": "`...`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Append `enki` to `myArray` using the spread operator in a **pure** fashion:\n\n    return [???myArray, ???];\n",
    "text": "`enki`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Append `enki` to `myArray` using the spread operator in a **pure** fashion:\n\n    return [???myArray, ???];\n",
    "text": "`concat`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Append `enki` to `myArray` using the spread operator in a **pure** fashion:\n\n    return [???myArray, ???];\n",
    "text": "`splice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Append `enki` to `myArray` using the spread operator in a **pure** fashion:\n\n    return [???myArray, ???];\n",
    "text": "`slice`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`Object`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`assign`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`...`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`clone`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`add`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What **ES6** method can be used to create a new object, but with additional properties in a **pure** fashion:\n\n    return ???.???({}, myObj, {\n      myProperty: newValue\n    });\n",
    "text": "`myObject`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once the `combineReducers()` function has transformed an object with different reducer functions into a single reducer function, where is it then passed to? ???\n",
    "text": "`createStore()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Once the `combineReducers()` function has transformed an object with different reducer functions into a single reducer function, where is it then passed to? ???\n",
    "text": "`createReducer()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once the `combineReducers()` function has transformed an object with different reducer functions into a single reducer function, where is it then passed to? ???\n",
    "text": "`createObject()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special method is used to combine different reduction functions with the scope of keeping your code scalable?\n???\n",
    "text": "`combineReducers()`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What special method is used to combine different reduction functions with the scope of keeping your code scalable?\n???\n",
    "text": "`combine()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special method is used to combine different reduction functions with the scope of keeping your code scalable?\n???\n",
    "text": "`createStore()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What special method is used to combine different reduction functions with the scope of keeping your code scalable?\n???\n",
    "text": "`addReducer()`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"gender\" table. We want to add a new column called \"members\". This column will store data about how many members each gender has:\n\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n    ??? gender\n    ADD ??? ???;\n",
    "text": "ALTER TABLE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"gender\" table. We want to add a new column called \"members\". This column will store data about how many members each gender has:\n\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n    ??? gender\n    ADD ??? ???;\n",
    "text": "members",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the \"gender\" table. We want to add a new column called \"members\". This column will store data about how many members each gender has:\n\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n    ??? gender\n    ADD ??? ???;\n",
    "text": "INT",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the \"gender\" table. We want to add a new column called \"members\". This column will store data about how many members each gender has:\n\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n    ??? gender\n    ADD ??? ???;\n",
    "text": "UPDATE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"gender\" table. We want to add a new column called \"members\". This column will store data about how many members each gender has:\n\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n    ??? gender\n    ADD ??? ???;\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to delete the \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n        ???\n",
    "text": "ALTER TABLE generation DROP COLUMN region_id;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"generation\" table. We want to delete the \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n        ???\n",
    "text": "ALTER TABLE generation DROP region_id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to delete the \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n        ???\n",
    "text": "ALTER generation DROP COLUMN region_id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "generation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "CONSTRAINT",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "PRIMARY KEY",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "KEY",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "gendergender",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"generation\" table. We want to add a new constraint called \"PK-constraints\" in which we state that we want \"region_id\" and \"name\" columns to be primary keys:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ALTER TABLE ???\n    ADD ??? PK-constraints\n    ??? (region_id,name)\n",
    "text": "COLUMN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `version` table. We want to add a `CHECK` constraint to `version_group_id` column. Any of its entries should not be bigger than 10:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    ...\n     7 |                5 | ruby\n     8 |                5 | sapphire\n     9 |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    14 |                9 | platinum\n    15 |               10 | heartgold\n    16 |               10 | soulsilver\n    17 |               11 | black\n    18 |               11 | white\n    ...\n\n      ???\n",
    "text": "ALTER TABLE version ADD CONSTRAINT check_constraint CHECK (version_group_id <= 10);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the `version` table. We want to add a `CHECK` constraint to `version_group_id` column. Any of its entries should not be bigger than 10:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    ...\n     7 |                5 | ruby\n     8 |                5 | sapphire\n     9 |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    14 |                9 | platinum\n    15 |               10 | heartgold\n    16 |               10 | soulsilver\n    17 |               11 | black\n    18 |               11 | white\n    ...\n\n      ???\n",
    "text": "ALTER TABLE version ADD PRIMARY KEY (version_group_id > 10);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `version` table. We want to add a `CHECK` constraint to `version_group_id` column. Any of its entries should not be bigger than 10:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    ...\n     7 |                5 | ruby\n     8 |                5 | sapphire\n     9 |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    14 |                9 | platinum\n    15 |               10 | heartgold\n    16 |               10 | soulsilver\n    17 |               11 | black\n    18 |               11 | white\n    ...\n\n      ???\n",
    "text": "ALTER TABLE version ADD CONSTRAINT check_constraint UNIQUE (version_group_id <= 10);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "ALTER TABLE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "COLUMN",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "region_id",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "SET DEFAULT",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "region",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "UPDATE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"region\" table. We want to set default value 1 to all entries under \"region_id\" column:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? region\n    ALTER ??? ???\n    ??? 1;\n",
    "text": "ALTER COLUMN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We would like to set the default value \"ruby\" to all entries under column \"name\" in the \"version\" table:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n     1 |                1 | red\n     2 |                1 | blue\n     3 |                2 | yellow\n     4 |                3 | gold\n     5 |                3 | silver\n     6 |                4 | crystal\n     7 |                5 | ruby\n     8 |                5 | sapphire\n    ...\n\n      ???\n",
    "text": "ALTER TABLE version ALTER COLUMN name SET DEFAULT 'ruby';",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We would like to set the default value \"ruby\" to all entries under column \"name\" in the \"version\" table:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n     1 |                1 | red\n     2 |                1 | blue\n     3 |                2 | yellow\n     4 |                3 | gold\n     5 |                3 | silver\n     6 |                4 | crystal\n     7 |                5 | ruby\n     8 |                5 | sapphire\n    ...\n\n      ???\n",
    "text": "ALTER TABLE region ALTER COLUMN name SET DEFAULT 'ruby';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We would like to set the default value \"ruby\" to all entries under column \"name\" in the \"version\" table:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n     1 |                1 | red\n     2 |                1 | blue\n     3 |                2 | yellow\n     4 |                3 | gold\n     5 |                3 | silver\n     6 |                4 | crystal\n     7 |                5 | ruby\n     8 |                5 | sapphire\n    ...\n\n      ???\n",
    "text": "ALTER TABLE version ALTER name SET DEFAULT 'ruby';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "CREATE RULE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "SELECT TO",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "id",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "UPDATE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "FROM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a rule such that when we `SELECT` from \"region\" table, it will display the \"id\" column every time:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? \"include_id\"\n    AS ON ??? region\n    DO ALSO\n      SELECT ??? FROM region;\n",
    "text": "region_id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "CREATE TRIGGER",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "UPDATE",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "name_backup",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "END",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "START",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "region_id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create trigger such that each time we update something to the \"region\" table under the \"name\" column, it will insert the same entry to our \"region_backup\" table on the \"name_backup\" column:\n\n```sql\n??? afterInsertRegion\nON pokemon.region\nAFTER ???\nAS BEGIN\n  UPDATE region_backup\n  SET ??? = name\n  FROM region\n???\nGO;\n```\n",
    "text": "INSERT",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "CREATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "DATABASE",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "practice_qw;",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "TABLE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "DROP",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a new database called \"practice_qw\".\n\n    ??? ??? ???\n",
    "text": "practice_qw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "createdb",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "test_db",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "revision_qw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "LIST",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "CREATE DATABASE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using `createdb` command, create a db called \"test_db\" and add an initial comment stating \"DB created\":\n\n    ??? ??? \"DB created\"\n",
    "text": "practice_qw",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "CREATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "NOT NULL",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "char(50)",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "id",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "UPDATE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a table that:\n\n    ??? TABLE student(\n      id char(50) ???,\n      full_name ???,\n      year_of_study smallint,\n      PRIMARY KEY(???)\n    );\n",
    "text": "NULL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries would create this table:  \n\nis called `employees`  \ncolumn1: ID char(50)  \ncolumn2: full_name char(50)  \ncolumn3: salary int  \n\n???\n",
    "text": "CREATE TABLE employees ( ID char(50), full_name char(50), salary int, PRIMARY KEY(ID));",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following queries would create this table:  \n\nis called `employees`  \ncolumn1: ID char(50)  \ncolumn2: full_name char(50)  \ncolumn3: salary int  \n\n???\n",
    "text": "UPDATE TABLE employees ( ID char(50), full_name char(50), salary int, PRIMARY KEY(ID));",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries would create this table:  \n\nis called `employees`  \ncolumn1: ID char(50)  \ncolumn2: full_name char(50)  \ncolumn3: salary int  \n\n???\n",
    "text": "CREATE TABLE employees ( ID char(50), full_name char(50), salary int, PRIMARY KEY(full_name));",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database has data types that default to `UTF-8` encoding?\n\n???\n",
    "text": "Microsoft SQL",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which database has data types that default to `UTF-8` encoding?\n\n???\n",
    "text": "MySQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database has data types that default to `UTF-8` encoding?\n\n???\n",
    "text": "PostgreSQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database `utf8` options stores a maximum of 3 bytes instead of 4?\n\n???\n",
    "text": "MySQL",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which database `utf8` options stores a maximum of 3 bytes instead of 4?\n\n???\n",
    "text": "PostgreSQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database `utf8` options stores a maximum of 3 bytes instead of 4?\n\n???\n",
    "text": "Microsoft SQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "As of now, the most recommended character encoding is\n\n???\n",
    "text": "UTF-8",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "As of now, the most recommended character encoding is\n\n???\n",
    "text": "UTF-16",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "As of now, the most recommended character encoding is\n\n???\n",
    "text": "UTF-32",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "As of now, the most recommended character encoding is\n\n???\n",
    "text": "ASCII",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the description to the term it refers to:\n\n    Used to group accented characters with\n    their base character.\n    ???\n\n    A function that maps bits to characters.\n    ???\n",
    "text": "collation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the description to the term it refers to:\n\n    Used to group accented characters with\n    their base character.\n    ???\n\n    A function that maps bits to characters.\n    ???\n",
    "text": "encoding",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`CREATE`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`TABLE`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`bigserial`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`id`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`DROP`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`COLUMN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`serial`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a table PostgreSQL table with a serial ID column PK that is `bigint`:\n\n```sql\n??? ??? gen_100_pokemon(\n  id ???,\n  name text,\n  PRIMARY KEY(???)  \n);\n```\n",
    "text": "`bigint`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following data types is not a numeric type?\n\n???\n",
    "text": "date",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following data types is not a numeric type?\n\n???\n",
    "text": "boolean",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following data types is not a numeric type?\n\n???\n",
    "text": "bool",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following data types is not a numeric type?\n\n???\n",
    "text": "numeric",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following data types is not a numeric type?\n\n???\n",
    "text": "bigserial",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a PostgreSQL table that contains a fixed width column and a variable one, such that minimal space is used to store the table in memory:\n\n```sql\nCREATE ??? language(\n  id bigserial PRIMARY KEY,\n  language_name ???,\n  iso_code ???\n);\n```\n",
    "text": "`TABLE`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a PostgreSQL table that contains a fixed width column and a variable one, such that minimal space is used to store the table in memory:\n\n```sql\nCREATE ??? language(\n  id bigserial PRIMARY KEY,\n  language_name ???,\n  iso_code ???\n);\n```\n",
    "text": "`varchar(70)`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a PostgreSQL table that contains a fixed width column and a variable one, such that minimal space is used to store the table in memory:\n\n```sql\nCREATE ??? language(\n  id bigserial PRIMARY KEY,\n  language_name ???,\n  iso_code ???\n);\n```\n",
    "text": "`char(2)`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a PostgreSQL table that contains a fixed width column and a variable one, such that minimal space is used to store the table in memory:\n\n```sql\nCREATE ??? language(\n  id bigserial PRIMARY KEY,\n  language_name ???,\n  iso_code ???\n);\n```\n",
    "text": "`char(70)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a PostgreSQL table that contains a fixed width column and a variable one, such that minimal space is used to store the table in memory:\n\n```sql\nCREATE ??? language(\n  id bigserial PRIMARY KEY,\n  language_name ???,\n  iso_code ???\n);\n```\n",
    "text": "`varchar(2)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following string data types are padded to match its maximum size?\n\n???\n",
    "text": "`char(size)`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following string data types are padded to match its maximum size?\n\n???\n",
    "text": "`varchar(size)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following string data types are padded to match its maximum size?\n\n???\n",
    "text": "`text(size)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following string data types are padded to match its maximum size?\n\n???\n",
    "text": "`text`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following databases accepts the `medium` and `long` modifiers for the `text` data type?\n\n???\n",
    "text": "MySQL",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following databases accepts the `medium` and `long` modifiers for the `text` data type?\n\n???\n",
    "text": "Microsoft SQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following databases accepts the `medium` and `long` modifiers for the `text` data type?\n\n???\n",
    "text": "PostgreSQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following databases accepts the `medium` and `long` modifiers for the `text` data type?\n\n???\n",
    "text": "Oracle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following vendors discontinued the support for the `text` data type?\n\n???\n",
    "text": "Microsoft SQL",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following vendors discontinued the support for the `text` data type?\n\n???\n",
    "text": "PostgreSQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following vendors discontinued the support for the `text` data type?\n\n???\n",
    "text": "MySQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following vendors discontinued the support for the `text` data type?\n\n???\n",
    "text": "All",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an index on the table called \"region\", on the \"region_id\" and \"name\" columns. It needs to be a non-clustered index:\n\n    id | region_id |      name      \n    ===+===========+================\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? ??? test_index\n    ON region (???, name);\n",
    "text": "CREATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create an index on the table called \"region\", on the \"region_id\" and \"name\" columns. It needs to be a non-clustered index:\n\n    id | region_id |      name      \n    ===+===========+================\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? ??? test_index\n    ON region (???, name);\n",
    "text": "INDEX",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create an index on the table called \"region\", on the \"region_id\" and \"name\" columns. It needs to be a non-clustered index:\n\n    id | region_id |      name      \n    ===+===========+================\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? ??? test_index\n    ON region (???, name);\n",
    "text": "region_id",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create an index on the table called \"region\", on the \"region_id\" and \"name\" columns. It needs to be a non-clustered index:\n\n    id | region_id |      name      \n    ===+===========+================\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? ??? test_index\n    ON region (???, name);\n",
    "text": "UNIQUE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create an index on the table called \"region\", on the \"region_id\" and \"name\" columns. It needs to be a non-clustered index:\n\n    id | region_id |      name      \n    ===+===========+================\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vi\n    (6 rows)\n\n    ??? ??? test_index\n    ON region (???, name);\n",
    "text": "region",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"version\" table. Suppose no primary key was defined for it. We need to create a clustered index that will order the \"version_group_id\" column in ascending order:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    .....\n    4  |                3 | gold\n    5  |                3 | silver\n    6  |                4 | crystal\n    7  |                5 | ruby\n    8  |                5 | sapphire\n    9  |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    ...\n\n        ???\n",
    "text": "CREATE UNIQUE INDEX \"u_index\" ON version (version_group_id ASC);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"version\" table. Suppose no primary key was defined for it. We need to create a clustered index that will order the \"version_group_id\" column in ascending order:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    .....\n    4  |                3 | gold\n    5  |                3 | silver\n    6  |                4 | crystal\n    7  |                5 | ruby\n    8  |                5 | sapphire\n    9  |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    ...\n\n        ???\n",
    "text": "CREATE UNIQUE INDEX \"u_index\" ON version (version ASC);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"version\" table. Suppose no primary key was defined for it. We need to create a clustered index that will order the \"version_group_id\" column in ascending order:\n\n    id | version_group_id |      name      \n    ===+==================+===============\n    .....\n    4  |                3 | gold\n    5  |                3 | silver\n    6  |                4 | crystal\n    7  |                5 | ruby\n    8  |                5 | sapphire\n    9  |                6 | emerald\n    10 |                7 | firered\n    11 |                7 | leafgreen\n    12 |                8 | diamond\n    13 |                8 | pearl\n    ...\n\n        ???\n",
    "text": "CREATE INDEX \"u_index\" ON version (version_group_id ASC);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n```bash\nid   | is_main_series | generation_id |      name      \n=====|================|===============|===============\n   1 | t              |             3 | stench\n   2 | f              |             3 | drizzle\n   3 | t              |             3 | speed-boost\n   4 | t              |             3 | battle-armor\n(...)\n```\n\nIt doesn't have a `PRIMARY KEY` set so far. Create an index to define `ability`'s primary key.\n\n ???\n",
    "text": "CREATE UNIQUE INDEX ability_pk ON ability(id ASC).",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n```bash\nid   | is_main_series | generation_id |      name      \n=====|================|===============|===============\n   1 | t              |             3 | stench\n   2 | f              |             3 | drizzle\n   3 | t              |             3 | speed-boost\n   4 | t              |             3 | battle-armor\n(...)\n```\n\nIt doesn't have a `PRIMARY KEY` set so far. Create an index to define `ability`'s primary key.\n\n ???\n",
    "text": "CREATE INDEX ability_pk ON ability(id ASC).",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n```bash\nid   | is_main_series | generation_id |      name      \n=====|================|===============|===============\n   1 | t              |             3 | stench\n   2 | f              |             3 | drizzle\n   3 | t              |             3 | speed-boost\n   4 | t              |             3 | battle-armor\n(...)\n```\n\nIt doesn't have a `PRIMARY KEY` set so far. Create an index to define `ability`'s primary key.\n\n ???\n",
    "text": "CREATE UNIQUE INDEX ability_pk ON ability(ability_id ASC).",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n```bash\nid   | is_main_series | generation_id |      name      \n=====|================|===============|===============\n   1 | t              |             3 | stench\n   2 | f              |             3 | drizzle\n   3 | t              |             3 | speed-boost\n   4 | t              |             3 | battle-armor\n(...)\n```\n\nIt doesn't have a `PRIMARY KEY` set so far. Create an index to define `ability`'s primary key.\n\n ???\n",
    "text": "CREATE INDEX ability_pk ON ability(name ASC).",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "CREATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "ON",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "experience",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "UNIQUE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "INDEX",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"experience\" table. We want to create a non-clustered index on the \"experience\" column:\n\n    id  | level | experience | growth_rate_id\n    ====+=======+============+================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      5 |     5 |        156 |              1\n      6 |     6 |        270 |              1\n      7 |     7 |        428 |              1\n      8 |     8 |        640 |              1\n      9 |     9 |        911 |              1\n     10 |    10 |       1250 |              1\n     11 |    11 |       1663 |              1\n    ...\n\n    ??? INDEX exp_index\n    ??? experience (???);\n",
    "text": "level",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the item table:\n\n```bash\nid  | cost  |    name       \n====+=======+============\n  1 |     0 | master-ball\n  2 |  1200 | ultra-ball\n  3 |   600 | great-ball\n  4 |   200 | poke-ball\n\n    ???\n```\n\nSuppose that `PRIMARY KEY` isn't set yet. Choose the query that will create a clustered index on the `id` column.\n",
    "text": "CREATE UNIQUE INDEX id_clustered ON item(id);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the item table:\n\n```bash\nid  | cost  |    name       \n====+=======+============\n  1 |     0 | master-ball\n  2 |  1200 | ultra-ball\n  3 |   600 | great-ball\n  4 |   200 | poke-ball\n\n    ???\n```\n\nSuppose that `PRIMARY KEY` isn't set yet. Choose the query that will create a clustered index on the `id` column.\n",
    "text": "CREATE UNIQUE INDEX id_clustered ON item(cost);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the item table:\n\n```bash\nid  | cost  |    name       \n====+=======+============\n  1 |     0 | master-ball\n  2 |  1200 | ultra-ball\n  3 |   600 | great-ball\n  4 |   200 | poke-ball\n\n    ???\n```\n\nSuppose that `PRIMARY KEY` isn't set yet. Choose the query that will create a clustered index on the `id` column.\n",
    "text": "CREATE INDEX id_clustered ON item(id);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `pokemon` table from our pokemon database:\n\n```bash\n  id   | order | height | weight | base_experience | pokemon_species_id |   name          \n=======|=======|========|========|=================|====================|===========\n     1 |     1 |      7 |     69 |              64 |                  1 | bulbasaur\n     2 |     2 |     10 |    130 |             142 |                  2 | ivysaur\n     3 |     3 |     20 |   1000 |             236 |                  3 | venusaur\n(...)\n```\n\nThis table has thousands of entries and querying a pokemon's species is very slow. We need to speed up this common query. We want to create an index that will help us improve the efficiency of this data retrieval.\n\n ???\n",
    "text": "CREATE INDEX species_to_pokemon ON pokemon(pokemon_species_id);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `pokemon` table from our pokemon database:\n\n```bash\n  id   | order | height | weight | base_experience | pokemon_species_id |   name          \n=======|=======|========|========|=================|====================|===========\n     1 |     1 |      7 |     69 |              64 |                  1 | bulbasaur\n     2 |     2 |     10 |    130 |             142 |                  2 | ivysaur\n     3 |     3 |     20 |   1000 |             236 |                  3 | venusaur\n(...)\n```\n\nThis table has thousands of entries and querying a pokemon's species is very slow. We need to speed up this common query. We want to create an index that will help us improve the efficiency of this data retrieval.\n\n ???\n",
    "text": "CREATE UNIQUE INDEX species_to_pokemon ON pokemon(pokemon_species_id);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `pokemon` table from our pokemon database:\n\n```bash\n  id   | order | height | weight | base_experience | pokemon_species_id |   name          \n=======|=======|========|========|=================|====================|===========\n     1 |     1 |      7 |     69 |              64 |                  1 | bulbasaur\n     2 |     2 |     10 |    130 |             142 |                  2 | ivysaur\n     3 |     3 |     20 |   1000 |             236 |                  3 | venusaur\n(...)\n```\n\nThis table has thousands of entries and querying a pokemon's species is very slow. We need to speed up this common query. We want to create an index that will help us improve the efficiency of this data retrieval.\n\n ???\n",
    "text": "CREATE UNIQUE INDEX species_to_pokemon ON pokemon(id);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `pokemon` table from our pokemon database:\n\n```bash\n  id   | order | height | weight | base_experience | pokemon_species_id |   name          \n=======|=======|========|========|=================|====================|===========\n     1 |     1 |      7 |     69 |              64 |                  1 | bulbasaur\n     2 |     2 |     10 |    130 |             142 |                  2 | ivysaur\n     3 |     3 |     20 |   1000 |             236 |                  3 | venusaur\n(...)\n```\n\nThis table has thousands of entries and querying a pokemon's species is very slow. We need to speed up this common query. We want to create an index that will help us improve the efficiency of this data retrieval.\n\n ???\n",
    "text": "CREATE INDEX species_to_pokemon ON pokemon(weight);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In most databases, the maximum allowed size of BLOBs are in the order of\n\n???\n",
    "text": "GBs",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In most databases, the maximum allowed size of BLOBs are in the order of\n\n???\n",
    "text": "MBs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In most databases, the maximum allowed size of BLOBs are in the order of\n\n???\n",
    "text": "KBs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In most databases, the maximum allowed size of BLOBs are in the order of\n\n???\n",
    "text": "TBs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`BLOB`s are used to store ???\n",
    "text": "`raw bytes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`BLOB`s are used to store ???\n",
    "text": "`bigints`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`BLOB`s are used to store ???\n",
    "text": "`strings`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`BLOB`s are used to store ???\n",
    "text": "`images`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`INTO`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`SELECT *`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`OPENROWSET`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`BULK`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`'pikachu.jpg'`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM ???(??? ???,\n  SINGLE_BLOB)) ??? data);\n```\n",
    "text": "`AS`",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`INTO`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`SELECT *`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`BULK`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`SINGLE_BLOB`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "In SQL Server, insert a BLOB into `image` column:\n\n```sql\n??? ??? sprite(image)\nVALUES((???\nFROM OPENROWSET(??? 'pikachu.jpg',\n  ???)) ??? data);\n```\n",
    "text": "`AS`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`INTO`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`LOAD_FILE`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`'pikachu.jpg'`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`pikachu.jpg`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`LOAD`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a MySQL database, store a BLOB by loading the contents of a file:\n\n```sql\n??? ??? sprite(image)\nVALUES(???(???));\n```\n",
    "text": "`'0xTHISISMYIMAGE'`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a MySQL database, store a BLOB as a binary string:\n\n```sql\n??? ??? sprite(image)\nVALUES(???);\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In a MySQL database, store a BLOB as a binary string:\n\n```sql\n??? ??? sprite(image)\nVALUES(???);\n```\n",
    "text": "`INTO`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In a MySQL database, store a BLOB as a binary string:\n\n```sql\n??? ??? sprite(image)\nVALUES(???);\n```\n",
    "text": "`'0xTHISISMYIMAGE'`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In a MySQL database, store a BLOB as a binary string:\n\n```sql\n??? ??? sprite(image)\nVALUES(???);\n```\n",
    "text": "`0xTHISISMYIMAGE`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a MySQL database, store a BLOB as a binary string:\n\n```sql\n??? ??? sprite(image)\nVALUES(???);\n```\n",
    "text": "`LOAD_FILE('pikachu.jpg')`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`VALUES`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`decode`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`'hex'`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`encode`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`FROM`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In a PostgreSQL database, insert a hex string into a `bytea` field:\n\n```sql\n??? INTO sprite\n???(???('\\xBYTESOFPIKACHUSPRITE',\n  ???));\n```\n",
    "text": "`hex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following JSON objects is valid?\n\n```json\n{\n  'id': 'A',\n  'name': 'John',\n  'age': 36,\n  'friends': ['Anna', 'Mike']\n},\n{\n  \"id\" = \"B\",\n  \"name\" = \"Anna\",\n  \"age\" = 33,\n  \"friends\" = [\"John\", \"Mike\"]\n},\n{\n  \"id\": \"C\",\n  \"name\": \"Mike\",\n  \"age\": 34,\n  \"friends\": [\"John\", \"Anna\"]\n}\n```\n\n???\n",
    "text": "C",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following JSON objects is valid?\n\n```json\n{\n  'id': 'A',\n  'name': 'John',\n  'age': 36,\n  'friends': ['Anna', 'Mike']\n},\n{\n  \"id\" = \"B\",\n  \"name\" = \"Anna\",\n  \"age\" = 33,\n  \"friends\" = [\"John\", \"Mike\"]\n},\n{\n  \"id\": \"C\",\n  \"name\": \"Mike\",\n  \"age\": 34,\n  \"friends\": [\"John\", \"Anna\"]\n}\n```\n\n???\n",
    "text": "A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following JSON objects is valid?\n\n```json\n{\n  'id': 'A',\n  'name': 'John',\n  'age': 36,\n  'friends': ['Anna', 'Mike']\n},\n{\n  \"id\" = \"B\",\n  \"name\" = \"Anna\",\n  \"age\" = 33,\n  \"friends\" = [\"John\", \"Mike\"]\n},\n{\n  \"id\": \"C\",\n  \"name\": \"Mike\",\n  \"age\": 34,\n  \"friends\": [\"John\", \"Anna\"]\n}\n```\n\n???\n",
    "text": "B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "While storing JSON data is possible in most relational databases, the ones that prioritize such practices are\n\n???\n",
    "text": "NoSQL databases",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "While storing JSON data is possible in most relational databases, the ones that prioritize such practices are\n\n???\n",
    "text": "PostgreSQL databases",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "While storing JSON data is possible in most relational databases, the ones that prioritize such practices are\n\n???\n",
    "text": "MySQL databases",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "While storing JSON data is possible in most relational databases, the ones that prioritize such practices are\n\n???\n",
    "text": "SQL Server databases",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`WHERE`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`JSON_VALUE`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`pokemon`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`$.has_evolution`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Querying the JSON `pokemon` field in a SQL Server database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n???(???, ???) = ???;\n```\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Microsoft SQL's command that parses JSON fields is\n\n???\n",
    "text": "`JSON_VALUE(column,field)`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Microsoft SQL's command that parses JSON fields is\n\n???\n",
    "text": "`PARSE_JSON(column,field)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Microsoft SQL's command that parses JSON fields is\n\n???\n",
    "text": "`(column)@>(field)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Microsoft SQL's command that parses JSON fields is\n\n???\n",
    "text": "`(column)->(field)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`WHERE`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`->`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`\"$.has_evolution\"`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`TRUE`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Querying the JSON `pokemon` field in a MySQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\npokemon ??? ??? = ???;\n```\n",
    "text": "`->>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "MySQL's operator for JSON parsing is\n\n???\n",
    "text": "`->`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "MySQL's operator for JSON parsing is\n\n???\n",
    "text": "`@>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "MySQL's operator for JSON parsing is\n\n???\n",
    "text": "`==`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "MySQL's operator for JSON parsing is\n\n???\n",
    "text": "`JSON_VALUE`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "MySQL's operator for JSON parsing is\n\n???\n",
    "text": "`$`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`WHERE`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`pokemon`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`@>`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`true`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`->`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Querying the JSON `pokemon` field in a PostgreSQL database, select all Pokémon which have evolutions:\n\n```sql\n??? pokemon\n??? poke_json ???\n??? ??? '{\"has_evolution\": ???}';\n```\n",
    "text": "`->>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "PostgreSQL's operator for JSON parsing is\n\n???\n",
    "text": "`@>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "PostgreSQL's operator for JSON parsing is\n\n???\n",
    "text": "`->`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "PostgreSQL's operator for JSON parsing is\n\n???\n",
    "text": "`->>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "PostgreSQL's operator for JSON parsing is\n\n???\n",
    "text": "`@`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "PostgreSQL's operator for JSON parsing is\n\n???\n",
    "text": "`JSON_VALUE`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "AVG",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "cost",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "FROM",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "10",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "AS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "LIKE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "AVERAGE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table of items called *item*. This table has a filed called *cost*, indicating how much each item costs. We would like to know an average cost for the first 10 items in the table. Fill the gaps accordingly:\n\n    --item:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n\n    SELECT ???(???)\n    ??? item\n    LIMIT ???\n",
    "text": "SUM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called \"contest_combo\". It holds info about how much damage each combo can give. We want to know an average damage value for the second move:\n\n    --contest_combo:\n\n    id  | first_move | second_move\n    ====+============+===============\n      1 |          1 |       3\n      2 |          1 |       29\n      3 |          1 |       185\n\n      ???\n\n    --Result:\n      avg          \n    ======\n    161.52\n    (1 row)\n",
    "text": "SELECT AVG(second_move) FROM contest_combo;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table called \"contest_combo\". It holds info about how much damage each combo can give. We want to know an average damage value for the second move:\n\n    --contest_combo:\n\n    id  | first_move | second_move\n    ====+============+===============\n      1 |          1 |       3\n      2 |          1 |       29\n      3 |          1 |       185\n\n      ???\n\n    --Result:\n      avg          \n    ======\n    161.52\n    (1 row)\n",
    "text": "SELECT SUM(second_move) FROM contest_combo;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called \"contest_combo\". It holds info about how much damage each combo can give. We want to know an average damage value for the second move:\n\n    --contest_combo:\n\n    id  | first_move | second_move\n    ====+============+===============\n      1 |          1 |       3\n      2 |          1 |       29\n      3 |          1 |       185\n\n      ???\n\n    --Result:\n      avg          \n    ======\n    161.52\n    (1 row)\n",
    "text": "SELECT AVG(first_move) FROM contest_combo;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "COUNT",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "region_id",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "GROUP BY",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "ORDER BY",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "SUM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table \"location\". It has data stating the region each location belongs to. How many locations are there in each region? Display the result ordered by regions.\n\n    -- location\n    id  | region_id |      name           \n    ====+===========+===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    ...\n\n    SELECT ???(name),???\n    FROM location\n    ??? region_id\n    ORDER BY region_id;\n\n    --Result:\n    count | region_id\n    ======+===========\n       90 |         1\n       64 |         2\n       82 |         3\n      126 |         4\n      121 |         5\n      104 |         6\n       91 |          \n    (7 rows)\n",
    "text": "AVG",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Knowing that the pokemon db has a table called `item` and a field `name`, how do we count all name entries?\n\n        ???\n    --Result:\n      count\n    =========\n       746\n    (1 row)\n",
    "text": "SELECT COUNT(name) FROM item;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Knowing that the pokemon db has a table called `item` and a field `name`, how do we count all name entries?\n\n        ???\n    --Result:\n      count\n    =========\n       746\n    (1 row)\n",
    "text": "SELECT COUNT(DISTINCT name) FROM item;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Knowing that the pokemon db has a table called `item` and a field `name`, how do we count all name entries?\n\n        ???\n    --Result:\n      count\n    =========\n       746\n    (1 row)\n",
    "text": "SELECT COUNT(item) FROM name;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Knowing that the pokemon db has a table called `item` and a field `name`, how do we count all name entries?\n\n        ???\n    --Result:\n      count\n    =========\n       746\n    (1 row)\n",
    "text": "SELECT COUNT(all) FROM item;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We know that the table *pokedex_name* has a field called name with 42 entries. We would like to see how many of these are distinct values. Which query do you think will have the desired output?\n\n    SELECT COUNT(name) FROM pokedex_name;\n\n    --Result:\n    count\n    ======\n       42\n    (1 row)\n\n    ???\n\n    --Result:\n    count\n    ======\n       35\n    (1 row)\n",
    "text": "SELECT COUNT(DISTINCT name) FROM pokedex_name;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We know that the table *pokedex_name* has a field called name with 42 entries. We would like to see how many of these are distinct values. Which query do you think will have the desired output?\n\n    SELECT COUNT(name) FROM pokedex_name;\n\n    --Result:\n    count\n    ======\n       42\n    (1 row)\n\n    ???\n\n    --Result:\n    count\n    ======\n       35\n    (1 row)\n",
    "text": "SELECT * FROM pokedex_name;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We know that the table *pokedex_name* has a field called name with 42 entries. We would like to see how many of these are distinct values. Which query do you think will have the desired output?\n\n    SELECT COUNT(name) FROM pokedex_name;\n\n    --Result:\n    count\n    ======\n       42\n    (1 row)\n\n    ???\n\n    --Result:\n    count\n    ======\n       35\n    (1 row)\n",
    "text": "SELECT DISTINCT COUNT(name) FROM pokedex_name;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We know that the table *pokedex_name* has a field called name with 42 entries. We would like to see how many of these are distinct values. Which query do you think will have the desired output?\n\n    SELECT COUNT(name) FROM pokedex_name;\n\n    --Result:\n    count\n    ======\n       42\n    (1 row)\n\n    ???\n\n    --Result:\n    count\n    ======\n       35\n    (1 row)\n",
    "text": "DISTINCT SELECT COUNT(name) FROM pokedex_name;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following table and the following query. Fill the gaps such that we will have no duplicates in the resulting table:\n\n    --GRADES table:\n\n    |   NAME    | GRADES |\n    |===========|========|\n    | John      | 56%    |\n    | Sebastian | 68%    |\n    | Doris     | 56%    |\n    | Alice     | 88%    |\n    | Stefan    | 68%    |\n    | Raul      | 50%    |\n\n    SELECT ???\n    FROM ???\n    ??? BY GRADES;\n",
    "text": "`DISTINCT name`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following table and the following query. Fill the gaps such that we will have no duplicates in the resulting table:\n\n    --GRADES table:\n\n    |   NAME    | GRADES |\n    |===========|========|\n    | John      | 56%    |\n    | Sebastian | 68%    |\n    | Doris     | 56%    |\n    | Alice     | 88%    |\n    | Stefan    | 68%    |\n    | Raul      | 50%    |\n\n    SELECT ???\n    FROM ???\n    ??? BY GRADES;\n",
    "text": "`GRADES`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following table and the following query. Fill the gaps such that we will have no duplicates in the resulting table:\n\n    --GRADES table:\n\n    |   NAME    | GRADES |\n    |===========|========|\n    | John      | 56%    |\n    | Sebastian | 68%    |\n    | Doris     | 56%    |\n    | Alice     | 88%    |\n    | Stefan    | 68%    |\n    | Raul      | 50%    |\n\n    SELECT ???\n    FROM ???\n    ??? BY GRADES;\n",
    "text": "`ORDER`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following table and the following query. Fill the gaps such that we will have no duplicates in the resulting table:\n\n    --GRADES table:\n\n    |   NAME    | GRADES |\n    |===========|========|\n    | John      | 56%    |\n    | Sebastian | 68%    |\n    | Doris     | 56%    |\n    | Alice     | 88%    |\n    | Stefan    | 68%    |\n    | Raul      | 50%    |\n\n    SELECT ???\n    FROM ???\n    ??? BY GRADES;\n",
    "text": "`EMPLOYEES`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following table and the following query. Fill the gaps such that we will have no duplicates in the resulting table:\n\n    --GRADES table:\n\n    |   NAME    | GRADES |\n    |===========|========|\n    | John      | 56%    |\n    | Sebastian | 68%    |\n    | Doris     | 56%    |\n    | Alice     | 88%    |\n    | Stefan    | 68%    |\n    | Raul      | 50%    |\n\n    SELECT ???\n    FROM ???\n    ??? BY GRADES;\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "COUNT",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "is_default",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "GROUP BY",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "AVG",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "SUM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called pokemon. Two of its fields are:  \n`is_default` - it can be either true or false  \n`name`  \n\nWe want to know how many pokemon are (not) default:\n\n    SELECT ???(name),???\n    FROM pokemon\n    ??? is_default;\n\n    --Result:\n    count | is_default\n    ======+============\n       90 | f\n      721 | t\n    (2 rows)\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "AVG",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "item",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "GROUP BY",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "SUM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "ORDER BY",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In our pokemon db item is a table with the following columns:  \n`id` - unique id of the item  \n`cost` - item's cost  \n`fling_power` - \"Dark type move\"[1]  \n`item_category_id`  \n`item_fling_effect_id`  \n`name` - item's name  \n\nWe would like to get the average cost of each item category.\n\n    SELECT ???(cost),item_category_id\n    FROM ???\n    ??? item_category_id\n    ORDER BY item_category_id;\n\n    --Result:\n    avg      | item_category_id\n    =========+==================\n    550      |        1\n    20       |        2\n    20       |        3\n    12       |        4\n    20       |        5\n    20       |        6\n    18.88    |        7\n    20       |        8\n    134.28   |        9\n    1810     |        10\n\n    ...\n",
    "text": "GROUP",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "MAX",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "cost",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "item",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "expenses",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "MIN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have the table \"item\". It holds data about each item and it's cost. We want to find out the most expensive item:\n\n    --item:\n\n    id  | cost  |    name       \n    ====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    SELECT ???(???) FROM ???\n\n    --Result:\n    =======\n    10000\n    (1 row)\n",
    "text": "FROM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the table \"move_effect_change\". Choose the query that finds the move with the lowest effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n        ???\n\n    --Result:\n    =====\n       8\n    (1 row)\n",
    "text": "SELECT MIN(move_effect) FROM move_effect_change;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the table \"move_effect_change\". Choose the query that finds the move with the lowest effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n        ???\n\n    --Result:\n    =====\n       8\n    (1 row)\n",
    "text": "SELECT MAX(move_effect) FROM move_effect_change;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the table \"move_effect_change\". Choose the query that finds the move with the lowest effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n        ???\n\n    --Result:\n    =====\n       8\n    (1 row)\n",
    "text": "SELECT AVG(move_effect) FROM move_effect_change;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "SUM",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "move_effect",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "AVG",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "total",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "TOTAL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering the `move_effect_change` table. We want to know the total amount of move_effect:\n\n    -- \"move_effect_change\"\n    id | move_effect | version_group_id\n    ===+=============+==================\n     1 |           8 |               11\n     2 |          18 |                3\n     3 |          29 |                3\n\n    --Result:\n    ======\n    3884\n    (1 row)\n\nConstruct a query to do so:\n\n```sql\nSELECT ???(???) FROM move_effect_change;\n```\n",
    "text": "ADD",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called `items` that contains the name and cost of every item in Pokeland. We want to know how much it would cost to buy all items...\n\n    --items:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    --Result:   \n    ========\n     728060\n    (1 row)\n\nWhich query will do so?\n\n???\n",
    "text": "SELECT SUM(cost) FROM item;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table called `items` that contains the name and cost of every item in Pokeland. We want to know how much it would cost to buy all items...\n\n    --items:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    --Result:   \n    ========\n     728060\n    (1 row)\n\nWhich query will do so?\n\n???\n",
    "text": "SELECT AVG(cost) FROM item;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called `items` that contains the name and cost of every item in Pokeland. We want to know how much it would cost to buy all items...\n\n    --items:\n\n    id  | cost  |    name       \n    =====+======+============\n      1 |     0 | master-ball\n      2 |  1200 | ultra-ball\n      3 |   600 | great-ball\n      4 |   200 | poke-ball\n\n    --Result:   \n    ========\n     728060\n    (1 row)\n\nWhich query will do so?\n\n???\n",
    "text": "SELECT MAX(cost) FROM item;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "COUNT",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "nature_name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "ORDER BY",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "DESC",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "AVG",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "GROUP BY",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `nature_name` table has data about the nature name in multiple languages. We have the fields:\n`name`, for nature name and `language_id` to reflect the given language.\nCount how many names we have for each language and order the result in descending order:\n\n```sql\nSELECT ???(name),language_id\nFROM ???\nGROUP BY language_id\n??? language_id ???;\n```\n\n*Result:*\n\n    count | language_id\n    ======+============\n       25 |           9\n       25 |           8\n       25 |           7\n       25 |           6\n       25 |           5\n       25 |           3\n       25 |           1\n    (7 rows)\n",
    "text": "language_id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "COUNT",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "GROUP BY",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "count",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "region_id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "ORDER BY",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We have a table called location. It has data about the location's name and the region that each location belongs to. We want to count how many locations has each region. Then we want to display the results in ascending order of the counted values.\n\n```sql\nSELECT ???(name),region_id\nFROM location\n??? region_id\nORDER BY ???;\n```\n\n*Result:*\n\n    count | region_id\n    ======+===========\n       64 |         2\n       82 |         3\n       90 |         1\n       91 |          \n      104 |         6\n      121 |         5\n      126 |         4\n    (7 rows)\n",
    "text": "SUM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you order a table with SQL?\n\nConsider the `experience` table from our pokemon database:\n\n    id  | level | experience | growth_rate_id\n    ====|=======|============|================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      (...)\n\nThis table shows how much experience you need to gain in order to get to level 100 based on different growth rates. Choose the query that will get all records that have level 100 and orders them descending on the amount of experience needed:\n\n ???\n",
    "text": "SELECT * FROM experience WHERE level=100 ORDER BY experience DESC;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you order a table with SQL?\n\nConsider the `experience` table from our pokemon database:\n\n    id  | level | experience | growth_rate_id\n    ====|=======|============|================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      (...)\n\nThis table shows how much experience you need to gain in order to get to level 100 based on different growth rates. Choose the query that will get all records that have level 100 and orders them descending on the amount of experience needed:\n\n ???\n",
    "text": "SELECT * FROM experience WHERE level=100 ORDER BY growth_rate_id DESC;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you order a table with SQL?\n\nConsider the `experience` table from our pokemon database:\n\n    id  | level | experience | growth_rate_id\n    ====|=======|============|================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      (...)\n\nThis table shows how much experience you need to gain in order to get to level 100 based on different growth rates. Choose the query that will get all records that have level 100 and orders them descending on the amount of experience needed:\n\n ???\n",
    "text": "SELECT * FROM experience WHERE level=100 DESC ORDER BY experience;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you order a table with SQL?\n\nConsider the `experience` table from our pokemon database:\n\n    id  | level | experience | growth_rate_id\n    ====|=======|============|================\n      1 |     1 |          0 |              1\n      2 |     2 |         10 |              1\n      3 |     3 |         33 |              1\n      4 |     4 |         80 |              1\n      (...)\n\nThis table shows how much experience you need to gain in order to get to level 100 based on different growth rates. Choose the query that will get all records that have level 100 and orders them descending on the amount of experience needed:\n\n ???\n",
    "text": "SELECT * FROM experience WHERE level=100 ORDER DESC BY experience;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`*`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`pokemon_form`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`GET`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`FIND`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`id`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`FOR`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the columns and rows from the `pokemon_form` table.\n\n??? ???\n??? ???;\n",
    "text": "`pokemon`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`id,`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`weight,`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`name`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`pokemon`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`moves`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`GET`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`FIND`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`order`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Get all of the rows and the `id`, `weight`, `name` columns from the `pokemon` table.\n\n??? ??? ??? ???\n??? ???;\n",
    "text": "`FOR`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\nChoose the query that will get all the entries from this table:\n\n ???\n",
    "text": "SELECT * FROM ability;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\nChoose the query that will get all the entries from this table:\n\n ???\n",
    "text": "DISPLAY [all] FROM ability;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\nChoose the query that will get all the entries from this table:\n\n ???\n",
    "text": "SELECT [all] FROM ability;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What statement gets columns and rows from tables?\n\nGiven a table called `ability` from our pokemon database:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\nChoose the query that will get all the entries from this table:\n\n ???\n",
    "text": "FIND * FROM ability;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "weight > '600'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "AND",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "height > '15'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "weight IS GREATER THAN 600",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "GREATER THAN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "MORE THAN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "600",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping the rows where the weight is greater than 600 and height is greater than 15.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "15",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "name = 'bulbasaur' OR",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "name = 'ivysaur' OR",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "name = 'venusaur'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "name IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "OR",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "name IN",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "'ivysaur'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "'bulbasaur'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name equals either 'bulbasaur', 'ivysaur' or 'venusaur'.\n\n```sql\nSELECT *\nFROM pokemon\n??? ???\n???\n???;\n```\n",
    "text": "'venusaur'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select rows between two values in SQL?\n\nConsider the `move_name` table:\n\n```bash\n  id  | language_id | move_id |  name       \n======|=============|=========|=============\n    1 |           1 |       1 | はたく\n    2 |           3 |       1 | 막치기\n    3 |           5 |       1 | Écras'Face\n    4 |           6 |       1 | Pfund\n    5 |           7 |       1 | Destructor\n  (...)\n```\n\nChoose the query that will get all move names with id between 3 and 6. Also, pay attention to select those name that are used in languages with id 5 or 9:\n\n ???\n",
    "text": "SELECT name FROM move_name WHERE move_id BETWEEN 3 AND 6 AND language_id IN (5,9);",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you select rows between two values in SQL?\n\nConsider the `move_name` table:\n\n```bash\n  id  | language_id | move_id |  name       \n======|=============|=========|=============\n    1 |           1 |       1 | はたく\n    2 |           3 |       1 | 막치기\n    3 |           5 |       1 | Écras'Face\n    4 |           6 |       1 | Pfund\n    5 |           7 |       1 | Destructor\n  (...)\n```\n\nChoose the query that will get all move names with id between 3 and 6. Also, pay attention to select those name that are used in languages with id 5 or 9:\n\n ???\n",
    "text": "SELECT * FROM move_name WHERE move_id BETWEEN 3 AND 6 AND language_id IN (5,9);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select rows between two values in SQL?\n\nConsider the `move_name` table:\n\n```bash\n  id  | language_id | move_id |  name       \n======|=============|=========|=============\n    1 |           1 |       1 | はたく\n    2 |           3 |       1 | 막치기\n    3 |           5 |       1 | Écras'Face\n    4 |           6 |       1 | Pfund\n    5 |           7 |       1 | Destructor\n  (...)\n```\n\nChoose the query that will get all move names with id between 3 and 6. Also, pay attention to select those name that are used in languages with id 5 or 9:\n\n ???\n",
    "text": "SELECT name FROM move_name WHERE move_id >= 3 AND move_id <= 6 AND language_id >= 5 OR language_id <= 9;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select rows between two values in SQL?\n\nConsider the `move_name` table:\n\n```bash\n  id  | language_id | move_id |  name       \n======|=============|=========|=============\n    1 |           1 |       1 | はたく\n    2 |           3 |       1 | 막치기\n    3 |           5 |       1 | Écras'Face\n    4 |           6 |       1 | Pfund\n    5 |           7 |       1 | Destructor\n  (...)\n```\n\nChoose the query that will get all move names with id between 3 and 6. Also, pay attention to select those name that are used in languages with id 5 or 9:\n\n ???\n",
    "text": "SELECT name FROM move_name WHERE move_id IN (3,6) AND language_id >= 5 AND language_id <= 9;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "IN",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "('groudon', 'snorlax', 'wailord')",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "NAME IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "AND",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'groudon'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'snorlax'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'wailord'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name is one of: 'groudon', 'snorlax' or 'wailord'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "ALL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "LIKE",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'%saur'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "NAME IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "AND",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'saur'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the columns from the `pokemon` table, keeping only the rows where the name ends with the string 'saur'.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'saur%'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `location` table from our pokemon database:\n\n    id  | region_id |     name           \n    ====|===========|================\n      1 |         4 | canalave-city\n      2 |         1 | eterna-city\n      3 |         3 | pastoria-city\n    (...)\n\nChoose the query that will get all the location records that are based in regions 1, 2. Also, pay attention to include only locations that end in 'city':\n\n ???\n",
    "text": "SELECT * FROM location WHERE region_id < 3 AND name LIKE '%city';",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `location` table from our pokemon database:\n\n    id  | region_id |     name           \n    ====|===========|================\n      1 |         4 | canalave-city\n      2 |         1 | eterna-city\n      3 |         3 | pastoria-city\n    (...)\n\nChoose the query that will get all the location records that are based in regions 1, 2. Also, pay attention to include only locations that end in 'city':\n\n ???\n",
    "text": "SELECT * FROM location WHERE region_id < 3 AND name='%city';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `location` table from our pokemon database:\n\n    id  | region_id |     name           \n    ====|===========|================\n      1 |         4 | canalave-city\n      2 |         1 | eterna-city\n      3 |         3 | pastoria-city\n    (...)\n\nChoose the query that will get all the location records that are based in regions 1, 2. Also, pay attention to include only locations that end in 'city':\n\n ???\n",
    "text": "SELECT * FROM location WHERE BETWEEN 1 AND 2 AND name='%city';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to match a pattern in SQL?\n\nConsider the `location` table from our pokemon database:\n\n    id  | region_id |     name           \n    ====|===========|================\n      1 |         4 | canalave-city\n      2 |         1 | eterna-city\n      3 |         3 | pastoria-city\n    (...)\n\nChoose the query that will get all the location records that are based in regions 1, 2. Also, pay attention to include only locations that end in 'city':\n\n ???\n",
    "text": "SELECT * FROM location WHERE region_id < 3 AND name LIKE '_city';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "weight < '500'",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "FROM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "pokemon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the weight is less than 500.\n\n`SELECT *`\n`FROM pokemon`\n??? ???;\n",
    "text": "weight IS GREATER THAN 500",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "WHERE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "=",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "'braixen'",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "FROM",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "pokemon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select all the rows from the `pokemon` table where the name is exactly equal to `braixen`.\n\n`SELECT *`\n`FROM pokemon`\n??? ??? ??? ???;\n",
    "text": "IS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you find a particular entry in a table with SQL?\n\nConsider the `ability` table and the following query:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\n    SELECT *\n    FROM ability\n\nWe want to get the record for the ability called \"speed-boost\". Which of the following `WHERE` clauses will\nhave this result when used with the above query?\n\n ???\n",
    "text": "WHERE name='speed-boost';",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you find a particular entry in a table with SQL?\n\nConsider the `ability` table and the following query:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\n    SELECT *\n    FROM ability\n\nWe want to get the record for the ability called \"speed-boost\". Which of the following `WHERE` clauses will\nhave this result when used with the above query?\n\n ???\n",
    "text": "WHERE name IS \"speed-boost\";",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you find a particular entry in a table with SQL?\n\nConsider the `ability` table and the following query:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\n    SELECT *\n    FROM ability\n\nWe want to get the record for the ability called \"speed-boost\". Which of the following `WHERE` clauses will\nhave this result when used with the above query?\n\n ???\n",
    "text": "WHERE ability='speed-boost';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you find a particular entry in a table with SQL?\n\nConsider the `ability` table and the following query:\n\n    id   | is_main_series | generation_id |      name      \n    =====|================|===============|===============\n       1 | t              |             3 | stench\n       2 | f              |             3 | drizzle\n       3 | t              |             3 | speed-boost\n       4 | t              |             3 | battle-armor\n    (...)\n\n    SELECT *\n    FROM ability\n\nWe want to get the record for the ability called \"speed-boost\". Which of the following `WHERE` clauses will\nhave this result when used with the above query?\n\n ???\n",
    "text": "WHERE id='speed-boost';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`SELECT * FROM item`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`SELECT all FROM item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`CHOOSE * FROM item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`SELECT * TABLE item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`CHOOSE * TABLE item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will return all columns and all rows from a a table called `item`?\n\n???\n",
    "text": "`SELECT col, row FROM item`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these symbols is used to denote \"all columns\" in SQL?\n\n???\n",
    "text": "`*`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of these symbols is used to denote \"all columns\" in SQL?\n\n???\n",
    "text": "`?`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these symbols is used to denote \"all columns\" in SQL?\n\n???\n",
    "text": "`%`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these symbols is used to denote \"all columns\" in SQL?\n\n???\n",
    "text": "`#`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will retrieve only the `id` and `name` columns for all row of the `move_names` table?\n\n???\n",
    "text": "`SELECT id, name FROM move_names`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following queries will retrieve only the `id` and `name` columns for all row of the `move_names` table?\n\n???\n",
    "text": "`SELECT *, id, name FROM move_names`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will retrieve only the `id` and `name` columns for all row of the `move_names` table?\n\n???\n",
    "text": "`SELECT ONLY id, name FROM move_names`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will retrieve only the `id` and `name` columns for all row of the `move_names` table?\n\n???\n",
    "text": "`SELECT id, SELECT name, FROM move_names`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following queries will retrieve only the `id` and `name` columns for all row of the `move_names` table?\n\n???\n",
    "text": "`SELECT id AND name FROM move_names`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`WHERE accuracy < 100`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`WHEN accuracy < 100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`WHERE accuracy less than 100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`IF col accuracy < 100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`WHEN accuracy IN move < 100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to retrieve the `id` and `power` for all the rows from the `move` table where `accuracy` is less than 100.\n\n```sql\nSELECT id, power\nFROM move\n???;\n```\n",
    "text": "`IF accuracy < 100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which query will return the `language_id` for the move named `Headbutt`?\n\n???\n",
    "text": "`SELECT language_id FROM move_name WHERE name = 'Headbutt';`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which query will return the `language_id` for the move named `Headbutt`?\n\n???\n",
    "text": "`FROM 'Headbutt' SELECT language_id;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which query will return the `language_id` for the move named `Headbutt`?\n\n???\n",
    "text": "`WHERE name IS 'Headbutt' SELECT language_id;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which query will return the `language_id` for the move named `Headbutt`?\n\n???\n",
    "text": "`SELECT language_id FROM 'Headbutt' WHERE name = move_name;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which query will return the `language_id` for the move named `Headbutt`?\n\n???\n",
    "text": "`SELECT language_id FROM move_name WHERE 'Headbutt';`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n  user=???\"\n",
    "text": "aws-us-east-1-portal.29.dblayer.com",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n  user=???\"\n",
    "text": "23336",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n  user=???\"\n",
    "text": "pokemon",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n  user=???\"\n",
    "text": "ashketchum",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n user=???\"\n",
    "text": "aws-us-east-1-portal.29.dblayer.com",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n user=???\"\n",
    "text": "23336",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n user=???\"\n",
    "text": "pokemon",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the connection string with correct arguments:\n\n./psql \"sslmode=require\n host=???\n port=??? dbname=???\n user=???\"\n",
    "text": "ashketchum",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`mysql`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`gary`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`rival`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`aws-us-west-1-portal.29.dblayer.com`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`23336`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`pokemon`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`postgres`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`dbprotocol`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`hostname`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`aws-us-east-1-portal.29.dblayer.com`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`?ssl=true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a different `pokemon` database, this one hosted on MySQL. Use the username `gary`, password `rival`, to our database on `aws-us-west-1-portal.29.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???\n    /???\n",
    "text": "`mssql`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`postgres`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`spot`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`supersecret`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`aws-us-east-1-portal.42.dblayer.com`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`23336`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`pokemon`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`dbprotocol`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`hostname`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`aws-us-east-1-portal.29.dblayer.com`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`mysql`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`?ssl=true`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Connect to a `puppies` database, this one hosted on Postgres. Use the username `spot`, password `supersecret`, to our database on `aws-us-east-1-portal.42.dblayer.com`. The port is `23336`.\n\n    ???://\n    ???:???\n    @???\n    :???/???\n",
    "text": "`mssql`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Suppose we have the following connection string:\n`psql \"sslmode=require host=aws-us-east-1-portal.29.dblayer.com port=23336 dbname=pokemon user=ashketchum\"`\n\nWhat is the name of a database???\nWhat is user name???\n",
    "text": "pokemon",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose we have the following connection string:\n`psql \"sslmode=require host=aws-us-east-1-portal.29.dblayer.com port=23336 dbname=pokemon user=ashketchum\"`\n\nWhat is the name of a database???\nWhat is user name???\n",
    "text": "ashketchum",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Suppose we have the following connection string:\n`psql \"sslmode=require host=aws-us-east-1-portal.29.dblayer.com port=23336 dbname=pokemon user=ashketchum\"`\n\nWhat is the name of a database?\n???\nWhat is user name?\n???\n",
    "text": "pokemon",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Suppose we have the following connection string:\n`psql \"sslmode=require host=aws-us-east-1-portal.29.dblayer.com port=23336 dbname=pokemon user=ashketchum\"`\n\nWhat is the name of a database?\n???\nWhat is user name?\n???\n",
    "text": "ashketchum",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "jdbc",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "postgresql",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "URLaddress",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "port",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "databaseName",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "username",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Considering `c = DriverManager.getConnection(\"jdbc:postgresql://aws-us-east-1-portal.29.dblayer.com:23336/pokemon\", \"ashketchum\", \"iwannabetheverybest\");`, form a connection string:\n\nc = DriverManager.getConnection\n(\"???:???://\n???:???/???\",\n \"???\", \"???\");\n",
    "text": "password",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "What is a database driver?\n???\n",
    "text": "It is a library in a certain language and it is specific to a certain DBMS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a database driver?\n???\n",
    "text": "It is Java specific library which allows the user to connect to the MySQL database",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "pg",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "username",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "password",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "URLaddress",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "port",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Considering `var conString =\"pg://ashketchum:iwannabetheverybest@aws-us-east-1-portal.29.dblayer.com:23336/pokemon\";`, form a connection string:\n???://???:???\n@???:???/???\n",
    "text": "databaseName",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "What package is used in order to connect to a Postgres database in nodeJS?\n???\n",
    "text": "pg",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What package is used in order to connect to a Postgres database in nodeJS?\n???\n",
    "text": "mongoose",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What package is used in order to connect to a Postgres database in nodeJS?\n???\n",
    "text": "sqlite3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If we consider `psycopg2` library what's the correct order of connecting and then using it?\n\n1 - ???\n2 - ???\n3 - ???\n4 - ???\n",
    "text": "import psycopg2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If we consider `psycopg2` library what's the correct order of connecting and then using it?\n\n1 - ???\n2 - ???\n3 - ???\n4 - ???\n",
    "text": "establish a connection with the database",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "If we consider `psycopg2` library what's the correct order of connecting and then using it?\n\n1 - ???\n2 - ???\n3 - ???\n4 - ???\n",
    "text": "initialize a cursor",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "If we consider `psycopg2` library what's the correct order of connecting and then using it?\n\n1 - ???\n2 - ???\n3 - ???\n4 - ???\n",
    "text": "execute a query with the cursor",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How can you connect to a database with Python?\n???\n",
    "text": "By using dedicated libraries",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you connect to a database with Python?\n???\n",
    "text": "Python provides an inbuilt db functionality",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`berry`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`FULL OUTER JOIN`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`;`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the gaps such that the following snippet becomes a valid `FULL OUTER JOIN`:\n\n```sql\n??? *\nFROM ???\n??? berry_firmness ???\nberry.berry_firmness_id = berry_firmness.id\nWHERE berry_firmness.id = 2???\n```\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The correct syntax for fully joining two tables is:\n\n```sql\nSELECT *\nFROM pokemon_type\n??? type ???\npokemon_type.type_id = type.id\n```\n",
    "text": "`FULL JOIN`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The correct syntax for fully joining two tables is:\n\n```sql\nSELECT *\nFROM pokemon_type\n??? type ???\npokemon_type.type_id = type.id\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The correct syntax for fully joining two tables is:\n\n```sql\nSELECT *\nFROM pokemon_type\n??? type ???\npokemon_type.type_id = type.id\n```\n",
    "text": "`LEFT AND RIGHT JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The correct syntax for fully joining two tables is:\n\n```sql\nSELECT *\nFROM pokemon_type\n??? type ???\npokemon_type.type_id = type.id\n```\n",
    "text": "`OUTER JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select data from two related tables in SQL?\n\nGiven the tables called `location` and `location_area`:\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get location id, game index and region id for all records. It doesn't matter whether there is no game index for a region or vice versa. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      (...)\n        |          56|         \n      (...)\n      89|            |         6\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location FULL OUTER JOIN location_area ON location.id = location_area.id;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you select data from two related tables in SQL?\n\nGiven the tables called `location` and `location_area`:\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get location id, game index and region id for all records. It doesn't matter whether there is no game index for a region or vice versa. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      (...)\n        |          56|         \n      (...)\n      89|            |         6\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location INNER JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select data from two related tables in SQL?\n\nGiven the tables called `location` and `location_area`:\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get location id, game index and region id for all records. It doesn't matter whether there is no game index for a region or vice versa. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      (...)\n        |          56|         \n      (...)\n      89|            |         6\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location LEFT JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you select data from two related tables in SQL?\n\nGiven the tables called `location` and `location_area`:\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get location id, game index and region id for all records. It doesn't matter whether there is no game index for a region or vice versa. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      (...)\n        |          56|         \n      (...)\n      89|            |         6\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location RIGHT JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`INNER JOIN`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`item_effect_text`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Fill in the blanks such that the following snippet contains a valid JOIN operations:\n\n```sql\n??? item.id, item.name,\n  item_effect_text.short_effect,\n  item_effect_text.item_id\n??? item\n??? ??? ???\n??? = item_effect_text.item_id;\n```\n",
    "text": "`item.id`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "What's the sets theory equivalent of `INNER JOIN`?\n\n???\n",
    "text": "intersection",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the sets theory equivalent of `INNER JOIN`?\n\n???\n",
    "text": "union",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the sets theory equivalent of `INNER JOIN`?\n\n???\n",
    "text": "difference",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the sets theory equivalent of `INNER JOIN`?\n\n???\n",
    "text": "cartesian product",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you filter one table based on data in another table in SQL?\n\nConsider `pokemon` and `pokemon_species` tables. The first one has two columns `height` and `weight`. The latter has a boolean valued column `is_baby`.\nSelect the query that will get the name, height and width of all pokemon that are babies:\n\n ???\n",
    "text": "SELECT pokemon_species.name,pokemon.height,pokemon.weight FROM pokemon INNER JOIN pokemon_species ON pokemon.pokemon_species_id = pokemon_species.id WHERE pokemon_species.is_baby='t';",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you filter one table based on data in another table in SQL?\n\nConsider `pokemon` and `pokemon_species` tables. The first one has two columns `height` and `weight`. The latter has a boolean valued column `is_baby`.\nSelect the query that will get the name, height and width of all pokemon that are babies:\n\n ???\n",
    "text": "SELECT pokemon.name,pokemon.height,pokemon.weight FROM pokemon LEFT JOIN pokemon_species ON pokemon.pokemon_species_id = pokemon_species.id WHERE pokemon_species.is_baby='t';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you filter one table based on data in another table in SQL?\n\nConsider `pokemon` and `pokemon_species` tables. The first one has two columns `height` and `weight`. The latter has a boolean valued column `is_baby`.\nSelect the query that will get the name, height and width of all pokemon that are babies:\n\n ???\n",
    "text": "SELECT pokemon.name,pokemon.height,pokemon.weight FROM pokemon RIGHT JOIN pokemon_species ON pokemon.pokemon_species_id = pokemon_species.id WHERE pokemon_species.is_baby='t';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you filter one table based on data in another table in SQL?\n\nConsider `pokemon` and `pokemon_species` tables. The first one has two columns `height` and `weight`. The latter has a boolean valued column `is_baby`.\nSelect the query that will get the name, height and width of all pokemon that are babies:\n\n ???\n",
    "text": "SELECT pokemon.name,pokemon.height,pokemon.weight FROM pokemon INNER JOIN pokemon_species ON pokemon.pokemon_species_id = pokemon_species.id WHERE pokemon_species.is_baby='f';",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The difference between inner join (IJ) and left outer join (LOJ) is that\n\n???\n",
    "text": "the LOJ result contains all rows in the first table",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The difference between inner join (IJ) and left outer join (LOJ) is that\n\n???\n",
    "text": "the LOJ result contains all rows in the second table",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The difference between inner join (IJ) and left outer join (LOJ) is that\n\n???\n",
    "text": "only their name differ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The difference between inner join (IJ) and left outer join (LOJ) is that\n\n???\n",
    "text": "tables intersection can only be found as part of IJ result",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the command is a valid `RIGHT JOIN`:\n\n```sql\nSELECT *\n??? type\n??? type_efficacy ???\ntype.id = type_efficacy.target_type_id;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet such that the command is a valid `RIGHT JOIN`:\n\n```sql\nSELECT *\n??? type\n??? type_efficacy ???\ntype.id = type_efficacy.target_type_id;\n```\n",
    "text": "`RIGHT JOIN`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet such that the command is a valid `RIGHT JOIN`:\n\n```sql\nSELECT *\n??? type\n??? type_efficacy ???\ntype.id = type_efficacy.target_type_id;\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippet such that the command is a valid `RIGHT JOIN`:\n\n```sql\nSELECT *\n??? type\n??? type_efficacy ???\ntype.id = type_efficacy.target_type_id;\n```\n",
    "text": "`LEFT JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that the command is a valid `RIGHT JOIN`:\n\n```sql\nSELECT *\n??? type\n??? type_efficacy ???\ntype.id = type_efficacy.target_type_id;\n```\n",
    "text": "`WHERE`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "LEFT OR RIGHT?\n\nGiven the tables called `location_area` and `location`:\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get game_index's region, `NULL` if there is none. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      44|          44|\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location LEFT JOIN location_area ON location.id = location_area.id;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "LEFT OR RIGHT?\n\nGiven the tables called `location_area` and `location`:\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get game_index's region, `NULL` if there is none. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      44|          44|\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location FULL OUTER JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "LEFT OR RIGHT?\n\nGiven the tables called `location_area` and `location`:\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get game_index's region, `NULL` if there is none. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      44|          44|\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location INNER JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "LEFT OR RIGHT?\n\nGiven the tables called `location_area` and `location`:\n\n    id  | game_index | location_id |       name                      \n    ====|============|=============|=====================\n      1 |          1 |           1 | canalave-city-area\n      2 |          2 |           2 | eterna-city-area\n      3 |          3 |           3 | pastoria-city-area\n      4 |          4 |           4 | sunyshore-city-area\n    (...)\n\n    id  | region_id |     name           \n    ====|===========|===============\n      1 |         4 | canalave-city\n      2 |         4 | eterna-city\n      3 |         4 | pastoria-city\n    (...)\n\nNote that there are 6 regions, but not all locations belong to one of them. Get game_index's region, `NULL` if there is none. The result should look like this:\n\n    id  | game_index | region_id\n    ====|============|===========\n      1 |          1 |         4\n      2 |          2 |         4\n      3 |          3 |         4\n      (...)\n      21|          21|          \n      44|          44|\n\n ???\n",
    "text": "SELECT location.id,location_area.game_index,location.region_id FROM location RIGHT JOIN location_area ON location.id = location_area.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`RIGHT OUTER JOIN`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`AS`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`pokemon`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`OUTER JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`SELECT`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Obtain the list of moves a Pokémon learns ordered by game version and level at which it learns the move:\n\n```sql\nSELECT pokemon.name,\n  poke_move_level.level,\n  poke_move_level.name,\n  poke_move_level.version_group_id\n??? pokemon\n??? (SELECT *\nFROM pokemon_move\nLEFT JOIN move ???\npokemon_move.move_id = move.id)\n??? poke_move_level\nON pokemon.id =\n  poke_move_level.pokemon_id\nORDER BY pokemon.id,\n  LJoinRes.version_group_id,\n  LJoinRes.level;\n```\n",
    "text": "`ORDER BY`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true or false?\n\nIn order to join multiple tables together, subqueries must be used.\n\n???\n",
    "text": "false",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following statement true or false?\n\nIn order to join multiple tables together, subqueries must be used.\n\n???\n",
    "text": "true",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sometimes one is not enough?\n\nGiven the tables called `pokedex`, `version_group` and `pokedex_version_group`:\n\n    id | is_main_series | region_id |       name       \n    ===|================|===========|================\n     1 | t              |           | national\n     2 | t              |         1 | kanto\n     3 | t              |         2 | original-johto\n     4 | t              |         3 | hoenn\n\n    (...)\n\n    id | order | generation_id |           name            \n    ===|=======|===============|======================\n     1 |     1 |             1 | red-blue\n     2 |     2 |             1 | yellow\n     3 |     3 |             2 | gold-silver\n    (...)\n\n    id | pokedex_id | version_group_id\n    ===|============|==================\n     1 |          2 |                1\n     2 |          2 |                2\n     3 |          2 |                7\n\nGet the names of pokedexes and version_groups using `pokedex_version_group` table. Do not include records that don't have both, pokedex and version_group :\n\n ???\n",
    "text": "SELECT pokedex.name, version_group.name FROM pokedex_version_group INNER JOIN pokedex ON pokedex_version_group.pokedex_id = pokedex.id INNER JOIN version_group ON pokedex_version_group.version_group_id = version_group.id;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Sometimes one is not enough?\n\nGiven the tables called `pokedex`, `version_group` and `pokedex_version_group`:\n\n    id | is_main_series | region_id |       name       \n    ===|================|===========|================\n     1 | t              |           | national\n     2 | t              |         1 | kanto\n     3 | t              |         2 | original-johto\n     4 | t              |         3 | hoenn\n\n    (...)\n\n    id | order | generation_id |           name            \n    ===|=======|===============|======================\n     1 |     1 |             1 | red-blue\n     2 |     2 |             1 | yellow\n     3 |     3 |             2 | gold-silver\n    (...)\n\n    id | pokedex_id | version_group_id\n    ===|============|==================\n     1 |          2 |                1\n     2 |          2 |                2\n     3 |          2 |                7\n\nGet the names of pokedexes and version_groups using `pokedex_version_group` table. Do not include records that don't have both, pokedex and version_group :\n\n ???\n",
    "text": "SELECT pokedex.name, version_group.name FROM pokedex_version_group RIGHT JOIN pokedex ON pokedex_version_group.pokedex_id = pokedex.id LEFT JOIN version_group ON pokedex_version_group.version_group_id = version_group.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sometimes one is not enough?\n\nGiven the tables called `pokedex`, `version_group` and `pokedex_version_group`:\n\n    id | is_main_series | region_id |       name       \n    ===|================|===========|================\n     1 | t              |           | national\n     2 | t              |         1 | kanto\n     3 | t              |         2 | original-johto\n     4 | t              |         3 | hoenn\n\n    (...)\n\n    id | order | generation_id |           name            \n    ===|=======|===============|======================\n     1 |     1 |             1 | red-blue\n     2 |     2 |             1 | yellow\n     3 |     3 |             2 | gold-silver\n    (...)\n\n    id | pokedex_id | version_group_id\n    ===|============|==================\n     1 |          2 |                1\n     2 |          2 |                2\n     3 |          2 |                7\n\nGet the names of pokedexes and version_groups using `pokedex_version_group` table. Do not include records that don't have both, pokedex and version_group :\n\n ???\n",
    "text": "SELECT pokedex.name, version_group.name FROM pokedex_version_group FULL OUTER JOIN pokedex ON pokedex_version_group.pokedex_id = pokedex.id FULL OUTER JOIN version_group ON pokedex_version_group.version_group_id = version_group.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sometimes one is not enough?\n\nGiven the tables called `pokedex`, `version_group` and `pokedex_version_group`:\n\n    id | is_main_series | region_id |       name       \n    ===|================|===========|================\n     1 | t              |           | national\n     2 | t              |         1 | kanto\n     3 | t              |         2 | original-johto\n     4 | t              |         3 | hoenn\n\n    (...)\n\n    id | order | generation_id |           name            \n    ===|=======|===============|======================\n     1 |     1 |             1 | red-blue\n     2 |     2 |             1 | yellow\n     3 |     3 |             2 | gold-silver\n    (...)\n\n    id | pokedex_id | version_group_id\n    ===|============|==================\n     1 |          2 |                1\n     2 |          2 |                2\n     3 |          2 |                7\n\nGet the names of pokedexes and version_groups using `pokedex_version_group` table. Do not include records that don't have both, pokedex and version_group :\n\n ???\n",
    "text": "SELECT pokedex.name, version_group.name FROM pokedex_version_group LEFT JOIN pokedex ON pokedex_version_group.pokedex_id = pokedex.id RIGHT JOIN version_group ON pokedex_version_group.version_group_id = version_group.id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`FROM`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`UNION`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`name`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`region_name`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`ON`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`OUTER JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Retrieve the `UNION` of the `region` and `region_name` tables:\n\n```sql\nSELECT name\n??? region\n???\nSELECT ???\nFROM ???\nWHERE region_name.region_id = 2;\n```\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? command retrieves all rows, *even duplicated*, of the union.\n",
    "text": "`UNION ALL`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "??? command retrieves all rows, *even duplicated*, of the union.\n",
    "text": "`UNION`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? command retrieves all rows, *even duplicated*, of the union.\n",
    "text": "`FULL JOIN`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? command retrieves all rows, *even duplicated*, of the union.\n",
    "text": "`SELECT UNION`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use a UNION of SELECTs?\n\nGiven the tables called `item_pocket` and `item_category`:\n\n    id |   name    \n    ===|===========\n     1 | misc\n     2 | medicine\n     3 | pokeballs\n    (...)\n\n    id   | item_pocket_id |    name       \n    =====|================|=============\n       1 |              7 | stat-boosts\n       2 |              5 | effort-drop\n       3 |              5 | medicine\n       4 |              5 | other\n       5 |              5 | in-a-pinch\n    (...)\n\nRetrieve `item_category`s' id and names together with `item_pocket`s' names without duplicates.\nThe result should look like this:\n\n      id   | pocket_name |   name       \n    =======|=============|===============\n         1 | battle      | stat-boosts\n         2 | berries     | effort-drop\n         3 | misc        | medicine\n\n ???\n",
    "text": "SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category RIGHT JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id UNION SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category LEFT JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can you use a UNION of SELECTs?\n\nGiven the tables called `item_pocket` and `item_category`:\n\n    id |   name    \n    ===|===========\n     1 | misc\n     2 | medicine\n     3 | pokeballs\n    (...)\n\n    id   | item_pocket_id |    name       \n    =====|================|=============\n       1 |              7 | stat-boosts\n       2 |              5 | effort-drop\n       3 |              5 | medicine\n       4 |              5 | other\n       5 |              5 | in-a-pinch\n    (...)\n\nRetrieve `item_category`s' id and names together with `item_pocket`s' names without duplicates.\nThe result should look like this:\n\n      id   | pocket_name |   name       \n    =======|=============|===============\n         1 | battle      | stat-boosts\n         2 | berries     | effort-drop\n         3 | misc        | medicine\n\n ???\n",
    "text": "SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category FULL JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id UNION ALL SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category RIGHT JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use a UNION of SELECTs?\n\nGiven the tables called `item_pocket` and `item_category`:\n\n    id |   name    \n    ===|===========\n     1 | misc\n     2 | medicine\n     3 | pokeballs\n    (...)\n\n    id   | item_pocket_id |    name       \n    =====|================|=============\n       1 |              7 | stat-boosts\n       2 |              5 | effort-drop\n       3 |              5 | medicine\n       4 |              5 | other\n       5 |              5 | in-a-pinch\n    (...)\n\nRetrieve `item_category`s' id and names together with `item_pocket`s' names without duplicates.\nThe result should look like this:\n\n      id   | pocket_name |   name       \n    =======|=============|===============\n         1 | battle      | stat-boosts\n         2 | berries     | effort-drop\n         3 | misc        | medicine\n\n ???\n",
    "text": "SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category RIGHT JOIN item_pocket ON item_pocket.name = item_category.name UNION SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category RIGHT JOIN item_pocket ON item_pocket.name = item_category.name;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can you use a UNION of SELECTs?\n\nGiven the tables called `item_pocket` and `item_category`:\n\n    id |   name    \n    ===|===========\n     1 | misc\n     2 | medicine\n     3 | pokeballs\n    (...)\n\n    id   | item_pocket_id |    name       \n    =====|================|=============\n       1 |              7 | stat-boosts\n       2 |              5 | effort-drop\n       3 |              5 | medicine\n       4 |              5 | other\n       5 |              5 | in-a-pinch\n    (...)\n\nRetrieve `item_category`s' id and names together with `item_pocket`s' names without duplicates.\nThe result should look like this:\n\n      id   | pocket_name |   name       \n    =======|=============|===============\n         1 | battle      | stat-boosts\n         2 | berries     | effort-drop\n         3 | misc        | medicine\n\n ???\n",
    "text": "SELECT item_category.id, item_pocket.name AS pocket_name, item_category.name FROM item_category RIGHT JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id UNION SELECT item_category.id FROM item_category RIGHT JOIN item_pocket ON item_pocket.id = item_category.item_pocket_id;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a type of database server?\n???\n",
    "text": "Node.js Server",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a type of database server?\n???\n",
    "text": "MS Access",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a type of database server?\n???\n",
    "text": "MS SQL server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a type of database server?\n???\n",
    "text": "MySQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a type of database server?\n???\n",
    "text": "Postgres",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database is open-source, *and* does not require a license for commercial use?\n\n???\n",
    "text": "Postgres",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which database is open-source, *and* does not require a license for commercial use?\n\n???\n",
    "text": "MySQL",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database is open-source, *and* does not require a license for commercial use?\n\n???\n",
    "text": "MS Access",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database is open-source, *and* does not require a license for commercial use?\n\n???\n",
    "text": "Oracle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which database is open-source, *and* does not require a license for commercial use?\n\n???\n",
    "text": "MS SQL Server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software through which information in a database is queried is called\n\n???\n",
    "text": "Database Client",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The software through which information in a database is queried is called\n\n???\n",
    "text": "Database Server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software through which information in a database is queried is called\n\n???\n",
    "text": "Server Manager",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software through which information in a database is queried is called\n\n???\n",
    "text": "Database Application",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a Database Client?\n\n???\n",
    "text": "The software that queries information from the database server",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a Database Client?\n\n???\n",
    "text": "An optional program that a user can install on top of the Database Server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a Database Client?\n\n???\n",
    "text": "The software through which memory is allocated on the server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software on which information in a database is *stored* is called\n\n???\n",
    "text": "Database Server",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The software on which information in a database is *stored* is called\n\n???\n",
    "text": "Database Client",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software on which information in a database is *stored* is called\n\n???\n",
    "text": "Server Manager",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The software on which information in a database is *stored* is called\n\n???\n",
    "text": "Database Application",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a Database Server?\n\n???\n",
    "text": "The software that stores information for later retrieval",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a Database Server?\n\n???\n",
    "text": "The software that requests information from where it is stored",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a Database Server?\n\n???\n",
    "text": "An optional program that a user can install on top of the Database Client",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a Database Server?\n\n???\n",
    "text": "The software through which memory is allocated on the server",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `products`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`CREATE TABLE products`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you think we could create a table called `products`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`MAKE TABLE products`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `products`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`rdbms.createTable('products')`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `products`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`sql.create.table('products')`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `coupons`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`CREATE TABLE coupons`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you think we could create a table called `coupons`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`MAKE TABLE coupons`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `coupons`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`rdbms.createTable('coupons')`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you think we could create a table called `coupons`?\n\n```sql\n??? (\n  id INT,\n  name VARCHAR(500),\n  cost FLOAT\n);\n```\n",
    "text": "`sql.create.table('coupons')`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Have you ever used SQL before? Even if you haven't, it's meant to be readable by a human.\n\nSee if you can get all the information from a table called `items`:\n\n???\n",
    "text": "`SELECT * FROM items;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Have you ever used SQL before? Even if you haven't, it's meant to be readable by a human.\n\nSee if you can get all the information from a table called `items`:\n\n???\n",
    "text": "`GO GET ALL ITEMS`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Have you ever used SQL before? Even if you haven't, it's meant to be readable by a human.\n\nSee if you can get all the information from a table called `items`:\n\n???\n",
    "text": "`SELECT EVERYTHING FROM items`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Have you ever used SQL before? Even if you haven't, it's meant to be readable by a human.\n\nSee if you can get all the information from a table called `items`:\n\n???\n",
    "text": "`SELECT * from users`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you select all the rows and columns from a table called `products`?\n\n???\n",
    "text": "`SELECT * FROM products;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you select all the rows and columns from a table called `products`?\n\n???\n",
    "text": "`GO GET ALL PRODUCTS`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you select all the rows and columns from a table called `products`?\n\n???\n",
    "text": "`SELECT EVERYTHING FROM products`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you select all the rows and columns from a table called `products`?\n\n???\n",
    "text": "`SELECT * FROM items`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"egg_group\" table. This time we want to delete the first 5 values:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n```sql\n??? FROM egg_group\nWHERE id ??? 1 and 5;\n```\n",
    "text": "DELETE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the \"egg_group\" table. This time we want to delete the first 5 values:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n```sql\n??? FROM egg_group\nWHERE id ??? 1 and 5;\n```\n",
    "text": "between",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the \"egg_group\" table. This time we want to delete the first 5 values:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n```sql\n??? FROM egg_group\nWHERE id ??? 1 and 5;\n```\n",
    "text": "=",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the \"egg_group\" table. This time we want to delete the first 5 values:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n```sql\n??? FROM egg_group\nWHERE id ??? 1 and 5;\n```\n",
    "text": "UPDATE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We want to delete the 15th element of \"egg_group\" table:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n???\n",
    "text": "DELETE FROM egg_group WHERE id= 15;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "We want to delete the 15th element of \"egg_group\" table:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n???\n",
    "text": "UPDATE egg_group DELETE WHERE id=15;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "We want to delete the 15th element of \"egg_group\" table:\n\n    --egg_group:\n    id |     name      \n    ===+===============\n     1 | monster\n     2 | water1\n     3 | bug\n     4 | flying\n     5 | ground\n     6 | fairy\n     7 | plant\n     8 | humanshape\n     9 | water3\n    10 | mineral\n    11 | indeterminate\n    12 | water2\n    13 | ditto\n    14 | dragon\n    15 | no-eggs\n    (15 rows)\n\n???\n",
    "text": "DELETE FROM egg_group;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`INSERT`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`INTO`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`SELECT`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`pokemon_type.type_id`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`ON`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Complete the following query to insert values into a new table called `water_pokemon`:\n\n```sql\n??? ??? water_pokemon\n??? * FROM (SELECT pokemon.name\nFROM pokemon_type\nLEFT JOIN type ON\ntype.id = ???\nRIGHT JOIN pokemon ???\npokemon.id = pokemon_type.pokemon_id\n??? type.id = 11) AS water;\n```\n",
    "text": "`WHERE`",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Which syntax can be used to insert values in non-consecutive columns?\n\n```sql\n/* Syntax A */\nINSERT INTO table\nSELECT * FROM\n(subquery);\n\n/* Syntax B */\nINSERT INTO table (column1, column2,\n    column3)\nVALUES (value1, 'value2', value3);\n\n/* Syntax C */\nINSERT INTO table\nVALUES (value1, 'value2', value3);\n```\n\n???\n",
    "text": "`B`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which syntax can be used to insert values in non-consecutive columns?\n\n```sql\n/* Syntax A */\nINSERT INTO table\nSELECT * FROM\n(subquery);\n\n/* Syntax B */\nINSERT INTO table (column1, column2,\n    column3)\nVALUES (value1, 'value2', value3);\n\n/* Syntax C */\nINSERT INTO table\nVALUES (value1, 'value2', value3);\n```\n\n???\n",
    "text": "`A`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which syntax can be used to insert values in non-consecutive columns?\n\n```sql\n/* Syntax A */\nINSERT INTO table\nSELECT * FROM\n(subquery);\n\n/* Syntax B */\nINSERT INTO table (column1, column2,\n    column3)\nVALUES (value1, 'value2', value3);\n\n/* Syntax C */\nINSERT INTO table\nVALUES (value1, 'value2', value3);\n```\n\n???\n",
    "text": "`C`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "UPDATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "6",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "'generation-vi'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "CHANGE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "WHERE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "SET",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "NEW",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the `generation` table:\n\n    id | region_id |      name      \n    ===+===========+===============\n     1 |         1 | generation-i\n     2 |         2 | generation-ii\n     3 |         3 | generation-iii\n     4 |         4 | generation-iv\n     5 |         5 | generation-v\n     6 |         6 | generation-vii\n    (6 rows)\n\n```sql\n??? generation\nSET ???='generation-vi'\nWHERE id=???;\n```\n\nWe would like to update the table contents such that the last generation is generation \"vi\" instead of \"vii\".\n",
    "text": "region_id",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "UPDATE",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "SET",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "neutral",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "WHERE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "DELETE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following table:\n\n    --gender\n    id |    name    \n    ===+============\n     1 | female\n     2 | male\n     3 | genderless\n    (3 rows)\n\n```sql\n??? gender\n??? name = '???'\n```\n\nWe want to update the table such that all genders will be neutral.\n",
    "text": "CHANGE",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is an empty alt attribute considered appropriate?\n\n    <img src=”image.png” alt=””>\n\n???\n",
    "text": "Yes, when the image is purely decorative.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is an empty alt attribute considered appropriate?\n\n    <img src=”image.png” alt=””>\n\n???\n",
    "text": "No, a value is always required.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is an empty alt attribute considered appropriate?\n\n    <img src=”image.png” alt=””>\n\n???\n",
    "text": "No, as the image will not display properly.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is an empty alt attribute considered appropriate?\n\n    <img src=”image.png” alt=””>\n\n???\n",
    "text": "Yes, it is always appropriate.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about alt attributes is false?\n\n???\n",
    "text": "Alt attributes are displayed on top of each image.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement about alt attributes is false?\n\n???\n",
    "text": "The alt attribute exists to specify an alternate text for an image that cannot be displayed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about alt attributes is false?\n\n???\n",
    "text": "It is used to provide information to the user if they cannot view the image.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about alt attributes is false?\n\n???\n",
    "text": "Empty alt attributes are appropriate when the image is purely decorative.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is incorrect about opening and closing  HTML5 elements?\n\n???\n",
    "text": "All the elements in HTML5 require both the opening and closing tag otherwise they do not work.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is incorrect about opening and closing  HTML5 elements?\n\n???\n",
    "text": "Although HTML5 isn’t strict about using open and close tags, using them certainly does makes the document easier to inspect.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is incorrect about opening and closing  HTML5 elements?\n\n???\n",
    "text": "Certain elements like `<body>` or `<head>` don't require the use of either of the tags, however, it helps with readability.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is incorrect about opening and closing  HTML5 elements?\n\n???\n",
    "text": "Most HTML elements have to have a closing tag to be displayed properly.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are conditional comments written for versions of IE prior to IE10?\n\n???\n",
    "text": "`<!--[if IE]> HTML CODE HERE <![endif]-->`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How are conditional comments written for versions of IE prior to IE10?\n\n???\n",
    "text": "`<!-[if IE]> HTML CODE HERE <[endif]->`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are conditional comments written for versions of IE prior to IE10?\n\n???\n",
    "text": "`<-[if IE]> HTML CODE HERE <![endif]-!>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How are conditional comments written for versions of IE prior to IE10?\n\n???\n",
    "text": "`<![if IE]> HTML CODE HERE <![endifIE]!>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Conditional comments only work in Internet Explorer, versions prior to IE10. Which version are these?\n\n???\n",
    "text": "versions 5 through 9.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Conditional comments only work in Internet Explorer, versions prior to IE10. Which version are these?\n\n???\n",
    "text": "versions 1 through 9.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Conditional comments only work in Internet Explorer, versions prior to IE10. Which version are these?\n\n???\n",
    "text": "versions 7 through 9.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Conditional comments only work in Internet Explorer, versions prior to IE10. Which version are these?\n\n???\n",
    "text": "versions 8 and 9.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What declaration is always first in an HTML web page?\n\n???\n",
    "text": "`<!DOCTYPE html>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What declaration is always first in an HTML web page?\n\n???\n",
    "text": "`<body>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What declaration is always first in an HTML web page?\n\n???\n",
    "text": "`<html>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What declaration is always first in an HTML web page?\n\n???\n",
    "text": "`<!HTML document>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.html” extension considered acceptable over “.htm”?\n\n???\n",
    "text": "When Unix OS removed the 3 character limitation.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When was the “.html” extension considered acceptable over “.htm”?\n\n???\n",
    "text": "When Mac OS switched to a 4 character limit.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.html” extension considered acceptable over “.htm”?\n\n???\n",
    "text": "When the `.htm.` extension became deprecated.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.html” extension considered acceptable over “.htm”?\n\n???\n",
    "text": "It was never considered acceptable.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.htm” extension used?\n\n???\n",
    "text": "When early DOS limited all extensions to 3 characters.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When was the “.htm” extension used?\n\n???\n",
    "text": "It was never used.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.htm” extension used?\n\n???\n",
    "text": "It is still mandatory on MAC OS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When was the “.htm” extension used?\n\n???\n",
    "text": "When only 3 letter extensions existed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what reason is HTML encouraged to be written in lowercase?\n\n???\n",
    "text": "Easier to read",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For what reason is HTML encouraged to be written in lowercase?\n\n???\n",
    "text": "Code doesn't work in Uppercase letters",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what reason is HTML encouraged to be written in lowercase?\n\n???\n",
    "text": "Lowercase letters take up less space",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For what reason is HTML encouraged to be written in lowercase?\n\n???\n",
    "text": "It is not just encouraged it is also mandatory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of HTML5 is NOT written correctly?\n\n???\n",
    "text": "<a href=”#” class=”lg btn>Click Me</a>",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of HTML5 is NOT written correctly?\n\n???\n",
    "text": "<a href=\"#\" class=\"md btn\">Click Me</a>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of HTML5 is NOT written correctly?\n\n???\n",
    "text": "<a href=’#’ class=’sm btn’>Click Me</a>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of HTML5 is NOT written correctly?\n\n???\n",
    "text": "<a href=# class=btn>Click Me</a>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Attribute values can never work without quotation",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Easier readability",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Easier to maintain(Empty attributes)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Easier to use \"find and replace\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Consistency",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is not true about using quotation marks?\n\n???\n",
    "text": "Converting HTML to XHTML becomes easier because in XHTML quotations are necessary",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about quoting attributes?\n\nWhich statement about quoting attributes is correct?\n\n???\n",
    "text": "Quoting attribute values is optional",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about quoting attributes?\n\nWhich statement about quoting attributes is correct?\n\n???\n",
    "text": "Quoting attribute values is mandatory",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about quoting attributes?\n\nWhich statement about quoting attributes is correct?\n\n???\n",
    "text": "Attribute values can only work with single quotation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about quoting attributes?\n\nWhich statement about quoting attributes is correct?\n\n???\n",
    "text": "Attribute values are harder to read with quotation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "Best for postal addresses",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "Contact information of author",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "When placed in `<body>` represents information for the document",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "When placed in `<article>` represents information for that article",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "Displayed as block element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<address>` element is not correct?\n\n???\n",
    "text": "Default font-style is italic",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to contain contact information for its nearest `<article>` or `<body>` that is not related to the primary contact information of the site?\n\n???\n",
    "text": "`<address>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to contain contact information for its nearest `<article>` or `<body>` that is not related to the primary contact information of the site?\n\n???\n",
    "text": "`<contact>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to contain contact information for its nearest `<article>` or `<body>` that is not related to the primary contact information of the site?\n\n???\n",
    "text": "`<info>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to contain contact information for its nearest `<article>` or `<body>` that is not related to the primary contact information of the site?\n\n???\n",
    "text": "`<postal>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to contain contact information for its nearest `<article>` or `<body>` that is not related to the primary contact information of the site?\n\n???\n",
    "text": "`<authorship>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<blockquote>` element is correct?\n\n    <blockquote>\n      The best thing about a boolean\n      is even if you are wrong,\n      you are only off by a bit.\n    </blockquote>\n\n???\n",
    "text": "used for indicating long quotations",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement about the `<blockquote>` element is correct?\n\n    <blockquote>\n      The best thing about a boolean\n      is even if you are wrong,\n      you are only off by a bit.\n    </blockquote>\n\n???\n",
    "text": "quotation marks usually added around text by browsers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<blockquote>` element is correct?\n\n    <blockquote>\n      The best thing about a boolean\n      is even if you are wrong,\n      you are only off by a bit.\n    </blockquote>\n\n???\n",
    "text": "used for indicating short quotations",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<blockquote>` element is correct?\n\n    <blockquote>\n      The best thing about a boolean\n      is even if you are wrong,\n      you are only off by a bit.\n    </blockquote>\n\n???\n",
    "text": "used within non-quoted paragraphs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<blockquote>` element is correct?\n\n    <blockquote>\n      The best thing about a boolean\n      is even if you are wrong,\n      you are only off by a bit.\n    </blockquote>\n\n???\n",
    "text": "displays as an inline element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "display: inline;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "display: block;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "margin-top: 1em;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "margin-bottom: 1em;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "margin-left: 40px;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the default CSS style that is not typically associated with the `<blockquote>` element:\n\n???\n",
    "text": "margin-right: 40px;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<bdi>` element is correct?\n\n???\n",
    "text": "preserves unknown text direction",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement about the `<bdi>` element is correct?\n\n???\n",
    "text": "displays the letters backwards.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<bdi>` element is correct?\n\n???\n",
    "text": "displays the letters mirrored.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<bdi>` element is correct?\n\n???\n",
    "text": "helps search engines understand the directory of text.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<bdi>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<bdo>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<ltr>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<rtl>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<format>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to isolate a span of text that might be formatted in a different direction from other text outside it in within a multi-language document - for such languages as Arabic and Hebrew?  \n\n???\n",
    "text": "`<lang>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "bdo",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "dir",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "rtl",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "/bdo",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "ltr",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "mld",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "lang",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "/mld",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to display the word \"backwards\" backwards.\n\n`<p>`This is such a `<??? ???=\"???\">`backwards`<???>` thing to do!`</p>`\n",
    "text": "/lang",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<bdo>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<bdio>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<ltr>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<rtl>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<mld>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to change the direction of specific sections of text within a multi-language document - for such languages as Arabic and Hebrew?\n\n???\n",
    "text": "`<lang>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "displays the letters backwards.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "displays the letters upside down.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "displays the letters mirrored.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "displays the letters flipped.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "helps search engines understand the directory of text.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about typography effects in HTML?\n\nWhat does the `<bdo>` element do in this code?\n\n`<p>`Have you watched `<bdo dir=\"rtl\">`Stranger Things`</bdo>` on Netflix?`</p>`\n\n???\n",
    "text": "doesn't do anything without CSS styles.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "displays as a block element",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "used for indicating a citation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "default font style is italic",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "works such as book, essay, poem, & script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "works such as movie, play, song, & TV show.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement about the `<cite>` element is not correct?\n\n???\n",
    "text": "displays as an inline element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<cite>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<quote>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<blockquote>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<q>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<movie>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to use in this example?\n\n    <p>\n    The 1939 movie\n    <tag>The Wizard of Oz</tag>\n    was originally filmed in both\n    sepia-toned black-and-white\n    and Technicolor.\n    </p>\n\n    <p>\n      <tag>The Wonderful Wizard of Oz</tag>\n       was written by L. Frank Baum\n       and published in 1900.\n    </p>\n\ntag = ???\n",
    "text": "`<title>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements about the `<q>` element is not correct?\n\n    <p>\n      <cite>\n        Carrie Bradshaw\n      </cite>\n      said\n      <q cite=\"#\">\n        Shopping is my cardio\n      </q>\n      and that is pretty awesome.\n    </p>\n\n???\n",
    "text": "used when quotation spans multiple lines",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statements about the `<q>` element is not correct?\n\n    <p>\n      <cite>\n        Carrie Bradshaw\n      </cite>\n      said\n      <q cite=\"#\">\n        Shopping is my cardio\n      </q>\n      and that is pretty awesome.\n    </p>\n\n???\n",
    "text": "used for indicating short quotations",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements about the `<q>` element is not correct?\n\n    <p>\n      <cite>\n        Carrie Bradshaw\n      </cite>\n      said\n      <q cite=\"#\">\n        Shopping is my cardio\n      </q>\n      and that is pretty awesome.\n    </p>\n\n???\n",
    "text": "quotation marks usually added around text by browsers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements about the `<q>` element is not correct?\n\n    <p>\n      <cite>\n        Carrie Bradshaw\n      </cite>\n      said\n      <q cite=\"#\">\n        Shopping is my cardio\n      </q>\n      and that is pretty awesome.\n    </p>\n\n???\n",
    "text": "displays as an inline element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "q",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "quote",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "blockquote",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "quot",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "mark",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "cite",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the most appropriate HTML element to use here?\n\n    <p> As\n      <cite>Ron Burgundy</cite>\n      shouted\n      <tag cite=\"#\">\n        I'm not a baby!\n        I'm a man!\n        An ANCHORMAN!\n      </tag>\n    </p>\n\ntag = ???\n",
    "text": "sq",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content is best to style when using the `<code>` element?\n\n???\n",
    "text": "All 4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What content is best to style when using the `<code>` element?\n\n???\n",
    "text": "HTML elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content is best to style when using the `<code>` element?\n\n???\n",
    "text": "CSS Rules",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content is best to style when using the `<code>` element?\n\n???\n",
    "text": "filenames",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content is best to style when using the `<code>` element?\n\n???\n",
    "text": "JS scripts",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to visually highlight the difference of the paragraph elements in an appropriate way?\n\n`<p>`The ```<???>``<p>``</p>``</???>``` tags are used in HTML to create paragraphs.`</p>`\n\n???\n",
    "text": "code",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML element is used to visually highlight the difference of the paragraph elements in an appropriate way?\n\n`<p>`The ```<???>``<p>``</p>``</???>``` tags are used in HTML to create paragraphs.`</p>`\n\n???\n",
    "text": "kbd",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What HTML element is used to visually highlight the difference of the paragraph elements in an appropriate way?\n\n`<p>`The ```<???>``<p>``</p>``</???>``` tags are used in HTML to create paragraphs.`</p>`\n\n???\n",
    "text": "samp",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What HTML element is used to visually highlight the difference of the paragraph elements in an appropriate way?\n\n`<p>`The ```<???>``<p>``</p>``</???>``` tags are used in HTML to create paragraphs.`</p>`\n\n???\n",
    "text": "pre",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to visually highlight the difference of the paragraph elements in an appropriate way?\n\n`<p>`The ```<???>``<p>``</p>``</???>``` tags are used in HTML to create paragraphs.`</p>`\n\n???\n",
    "text": "var",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using the `<kbd>` element, which statement is not true?\n\n???\n",
    "text": "represents preformatted text",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When using the `<kbd>` element, which statement is not true?\n\n???\n",
    "text": "represents user input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using the `<kbd>` element, which statement is not true?\n\n???\n",
    "text": "displayed in the browser's default monospace font",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using the `<kbd>` element, which statement is not true?\n\n???\n",
    "text": "when nested inside `<samp>`, represents input echoed by the system.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using the `<kbd>` element, which statement is not true?\n\n???\n",
    "text": "when containing `<samp>`, represents input based on system output.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "kbd",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "key",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "keyboard",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "k",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "kb",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element wraps around keyboard names to display the text differently than the surrounding text?\n\n???\n",
    "text": "kn",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is true about the `<pre>` element?\n\n???\n",
    "text": "Shows the content exactly as it is formatted, including whitespace and line breaks",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is true about the `<pre>` element?\n\n???\n",
    "text": "produces an inline element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is true about the `<pre>` element?\n\n???\n",
    "text": "represents user input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is true about the `<pre>` element?\n\n???\n",
    "text": "represents sample output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is true about the `<pre>` element?\n\n???\n",
    "text": "whitespace is removed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "pre",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "samp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "white-space",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "standard",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is used to display the text exactly as it is laid out within the element?\n\n???\n",
    "text": "output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about text formatting with HTML elements?\n\nWhich HTML element is best used for \"???\" to properly display this code within a webpage:  \n\n`<???>`\n.alert {\n  color:red;\n}\n`<???>`\n",
    "text": "pre",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about text formatting with HTML elements?\n\nWhich HTML element is best used for \"???\" to properly display this code within a webpage:  \n\n`<???>`\n.alert {\n  color:red;\n}\n`<???>`\n",
    "text": "code",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How much do you know about text formatting with HTML elements?\n\nWhich HTML element is best used for \"???\" to properly display this code within a webpage:  \n\n`<???>`\n.alert {\n  color:red;\n}\n`<???>`\n",
    "text": "perf",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "How much do you know about text formatting with HTML elements?\n\nWhich HTML element is best used for \"???\" to properly display this code within a webpage:  \n\n`<???>`\n.alert {\n  color:red;\n}\n`<???>`\n",
    "text": "samp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true about using the `<var>` element?\n\n???\n",
    "text": "represents user input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is not true about using the `<var>` element?\n\n???\n",
    "text": "represents a variable in a mathematical expression",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true about using the `<var>` element?\n\n???\n",
    "text": "represents a variable in a programming context",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true about using the `<var>` element?\n\n???\n",
    "text": "produces an inline element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true about using the `<var>` element?\n\n???\n",
    "text": "Default text style is italic.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "var",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "samp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "kbd",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "pre",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "math",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML element is best to display mathematical expressions or a programming context differently than the surrounding text?\n\n???\n",
    "text": "output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "var",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "samp",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "code",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "kbd",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "pre",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "math",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML elements?\n\nWhich HTML element is best to substitute for \"tag\" within this code:  \n\n`<p>`A simple equation: `<tag>`x`</tag>` = `<tag>`y`</tag>` + 2`</p>`\n\n???\n",
    "text": "output",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these is not true about headings:\n\n???\n",
    "text": "Headings are more important for page style than search engine ranking.  ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of these is not true about headings:\n\n???\n",
    "text": "There are 6 heading sizes ranging from `<h1>` to `<h6>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these is not true about headings:\n\n???\n",
    "text": "By default, `<h4>` is the same size as a paragraph `<p>`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these is not true about headings:\n\n???\n",
    "text": "Every web page should have at least one `<h1>`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the largest text heading?\n\n???\n",
    "text": "h1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is the largest text heading?\n\n???\n",
    "text": "h6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the largest text heading?\n\n???\n",
    "text": "h10",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the largest text heading?\n\n???\n",
    "text": "heading",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the largest text heading?\n\n???\n",
    "text": "head",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "h1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML headings?\n\nWhich text heading is the same size as a paragraph by default?\n\n???\n",
    "text": "none",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML tags create a paragraph of text?\n\n???\n",
    "text": "`<p>Text Here</p>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML tags create a paragraph of text?\n\n???\n",
    "text": "`<para>Text Here</para>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML tags create a paragraph of text?\n\n???\n",
    "text": "`<p>Text Here<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML tags create a paragraph of text?\n\n???\n",
    "text": "`</p>Text Here</p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML tags create a paragraph of text?\n\n???\n",
    "text": "`<paragraph>Text Here</paragraph>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "Start a paragraph",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "End a paragraph",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "Adds passcode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "Start a page",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "Represents pixel",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<p>` tag is used in HTML to do what?\n\n???\n",
    "text": "Adds portal",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "16 pixels",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "10 em",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "8 em",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "4 em",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "12 pixels",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML paragraphs?\n\nWhat is the default HTML text size of a paragraph in a browser?\n\n???\n",
    "text": "14 pixels",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`href`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`http://enkipro.com`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`target`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`_blank`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`a`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`img`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`link`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`src`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a hyperlink text that opens a webpage in a new window:\n\n    <tag ???=\"???\"\n    ???=\"???\">\n      Link to Enki\n    </tag>\n\ntag = ???\n",
    "text": "`_new`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "over the text within the `<a>` element.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`#`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "It is blue and underlined.",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "anywhere within the `<main>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "anywhere within the web page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "The cursor doesn’t change in this case",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`\"\"`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`_empty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`_self`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "`Leave empty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "It is blue and bold.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When will the cursor change to a pointer with the following code?\n\n    <main>\n      <a\n        href=\"http://www.enkipro.com\">\n        Check out Enki\n      </a>\n    </main>\n\nWhen the mouse hovers: ???\n\nHow is a placeholder link created, where the link works, but it doesn't open a new page?\n\n`<a href=\"???\">Empty href</a>`\n\nWhat is the default style of a text link in HTML?\n\n???\n",
    "text": "There is no visual change to a text link.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML hyperlinks?\n\nWhich line of code will link text to open a new window?\n\n???\n",
    "text": "`<a href=\"http://enkipro.com\" target=\"_blank\">Link to Enki</a>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML hyperlinks?\n\nWhich line of code will link text to open a new window?\n\n???\n",
    "text": "`<link href=\"http://enkipro.com\" open=\"new\">Link to Enki</link>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML hyperlinks?\n\nWhich line of code will link text to open a new window?\n\n???\n",
    "text": "`<a src=\"http://enkipro.com\" window=\"_new\">Link to Enki</a>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML hyperlinks?\n\nWhich line of code will link text to open a new window?\n\n???\n",
    "text": "`<a href=\"http://enkipro.com\" target=\"_new\">Link to Enki</a>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`img`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`src`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`images/logo.svg`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`alt`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`image`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`a`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`href`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`photo`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code to insert an image:\n\n`<??? ???=\"???\" ???=\"Enki Logo\">`\n",
    "text": "`images/logo.img`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code will place an image into the HTML page?\n\n???\n\nIf an image cannot load properly in a web page, what attribute will display text in its place?\n\n???\n\nWhich of these are not a common web image format:\n\n???\n\nIf an image does not have an assigned height and width using HTML or CSS, how will the image display within a web page?\n\n???\n",
    "text": "At its original image size.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code will place an image into the HTML page?\n\n???\n\nIf an image cannot load properly in a web page, what attribute will display text in its place?\n\n???\n\nWhich of these are not a common web image format:\n\n???\n\nIf an image does not have an assigned height and width using HTML or CSS, how will the image display within a web page?\n\n???\n",
    "text": "Will resize filling the container it is within.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which line of code will place an image into the HTML page?\n\n???\n\nIf an image cannot load properly in a web page, what attribute will display text in its place?\n\n???\n\nWhich of these are not a common web image format:\n\n???\n\nIf an image does not have an assigned height and width using HTML or CSS, how will the image display within a web page?\n\n???\n",
    "text": "Will resize by default to 100px wide.",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Which line of code will place an image into the HTML page?\n\n???\n\nIf an image cannot load properly in a web page, what attribute will display text in its place?\n\n???\n\nWhich of these are not a common web image format:\n\n???\n\nIf an image does not have an assigned height and width using HTML or CSS, how will the image display within a web page?\n\n???\n",
    "text": "It will only resize if the image is larger than the viewing area.",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "How much do you know about HTML `<img>` element?\n\nWhy is assigning height & width attributes to an image size more useful than setting the image size in CSS?\n\n???\n",
    "text": "Page loads with assigned space for images preventing layout shifts.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML `<img>` element?\n\nWhy is assigning height & width attributes to an image size more useful than setting the image size in CSS?\n\n???\n",
    "text": "Using HTML height & width attributes is never better than CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML `<img>` element?\n\nWhy is assigning height & width attributes to an image size more useful than setting the image size in CSS?\n\n???\n",
    "text": "When image size needs to override the CSS size setting.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML `<img>` element?\n\nWhy is assigning height & width attributes to an image size more useful than setting the image size in CSS?\n\n???\n",
    "text": "When the height and width is differen than the default image size.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input type creates a HTML form’s input text field?\n\n`<input type=\"???\">`\n",
    "text": "text",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input type creates a HTML form’s input text field?\n\n`<input type=\"???\">`\n",
    "text": "string",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input type creates a HTML form’s input text field?\n\n`<input type=\"???\">`\n",
    "text": "default",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input type creates a HTML form’s input text field?\n\n`<input type=\"???\">`\n",
    "text": "_blank",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "text",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "number",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "field",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "user_name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a text field to collect a user's name in a form:\n\n`<input type=\"???\" name=\"user_name\">`\n",
    "text": "null",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "action",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "get",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "post",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "path",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the definitions with the proper terms:\n\n??? : Form attribute used to specify where to send the data.\n??? : Method used to send the form data encoded within the URL.\n??? : Method used to encode the data within the message body of the HTTP request.\n",
    "text": "catch",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<form>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<field>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<embed>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<data>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Interactive elements like textfields, radio buttons, and check boxes, must be placed within which HTML element to collect user input.\n\n???\n",
    "text": "`<fieldset>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<input>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<field>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<embed>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<data>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<fieldset>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you about `<form>` elements?\n\nWhich form element is used to collect user data?\n\n???\n",
    "text": "`<collect>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "reset",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "value",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "`<input type=\"submit\" value=\"Send\">`",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "send",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "`<submit value=\"Send\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "`<input submit=\"Send\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a reset button.\n\n`<??? ???=\"???\" ???=\"Reset\">`\n\nWhich line of code defines the button that sends the data when clicked?\n\n???\n",
    "text": "`<input value=\"submit\" type=\"Send\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "submit",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "value",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "send",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a submit button.\n\n`<??? ???=\"???\" ???=\"Send\">`\n",
    "text": "data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`textarea`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`name`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`textbox`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`/textarea`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`form`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`input`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`textinput`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`/textinput`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a multi-line input for text.\n\n    <??? ???=\"???\">\n    <???>\n",
    "text": "`value`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element creates a multi-line input field that is 10 lines of text in height and 30 average characters in width.\n\n???\n",
    "text": "`<textarea name=\"message\" rows=\"10\" cols=\"30\"></textarea>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which element creates a multi-line input field that is 10 lines of text in height and 30 average characters in width.\n\n???\n",
    "text": "`<textarea name=\"message\" rows=\"30\" cols=\"10\"></textarea>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element creates a multi-line input field that is 10 lines of text in height and 30 average characters in width.\n\n???\n",
    "text": "`<input type=\"textarea\" name=\"message\" rows=\"10\" cols=\"30\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element creates a multi-line input field that is 10 lines of text in height and 30 average characters in width.\n\n???\n",
    "text": "`<input name=\"message\" rows=\"10\" cols=\"30\"></input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "Lines of Text",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "Average character width",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "able Column",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "Table Row",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "Unicode code points",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about text fields?\n\nIn this code, how are rows and columns measured?\n\n`<textarea name=\"message\" rows=\"20\" cols=\"50\"></textarea>`\n\nRows: ???\nColumns: ???\n",
    "text": "Number of characters",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a single line input for text.\n\n    <??? ???=\"???\">\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a single line input for text.\n\n    <??? ???=\"???\">\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a single line input for text.\n\n    <??? ???=\"???\">\n",
    "text": "text",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a single line input for text.\n\n    <??? ???=\"???\">\n",
    "text": "form",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a single line input for text.\n\n    <??? ???=\"???\">\n",
    "text": "text",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates a HTML form’s input text field?\n\n???\n",
    "text": "`<input type=\"text\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line creates a HTML form’s input text field?\n\n???\n",
    "text": "`<textfield type=\"input\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates a HTML form’s input text field?\n\n???\n",
    "text": "`<form input=\"textfield\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates a HTML form’s input text field?\n\n???\n",
    "text": "`<textinput type=\"text\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML input `type=\"text\"`?\n\nWhat does the required attribute do in this code?\n\n    <form>\n      <div>\n        <label\n          for=\"name\">First Name:\n        </label>\n        <input\n          type=\"text\" id=\"name\"\n          name=\"name\" required>\n      </div>\n      <div>\n        <button>\n          Submit\n        </button>\n      </div>\n    </form>\n\n???\n",
    "text": "Makes the form not submittable without a value",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the HTML input `type=\"text\"`?\n\nWhat does the required attribute do in this code?\n\n    <form>\n      <div>\n        <label\n          for=\"name\">First Name:\n        </label>\n        <input\n          type=\"text\" id=\"name\"\n          name=\"name\" required>\n      </div>\n      <div>\n        <button>\n          Submit\n        </button>\n      </div>\n    </form>\n\n???\n",
    "text": "Standard when creating any input type",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML input `type=\"text\"`?\n\nWhat does the required attribute do in this code?\n\n    <form>\n      <div>\n        <label\n          for=\"name\">First Name:\n        </label>\n        <input\n          type=\"text\" id=\"name\"\n          name=\"name\" required>\n      </div>\n      <div>\n        <button>\n          Submit\n        </button>\n      </div>\n    </form>\n\n???\n",
    "text": "makes the text turn blue",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML input `type=\"text\"`?\n\nWhat does the required attribute do in this code?\n\n    <form>\n      <div>\n        <label\n          for=\"name\">First Name:\n        </label>\n        <input\n          type=\"text\" id=\"name\"\n          name=\"name\" required>\n      </div>\n      <div>\n        <button>\n          Submit\n        </button>\n      </div>\n    </form>\n\n???\n",
    "text": "Makes the user type only text as input, no numbers allowed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a checkbox.\n\n    <??? ???=\"???\">\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a checkbox.\n\n    <??? ???=\"???\">\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a checkbox.\n\n    <??? ???=\"???\">\n",
    "text": "checkbox",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a checkbox.\n\n    <??? ???=\"???\">\n",
    "text": "check",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a checkbox.\n\n    <??? ???=\"???\">\n",
    "text": "select",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s checkbox?\n\n???\n",
    "text": "`<input type=\"checkbox\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line creates an HTML form’s checkbox?\n\n???\n",
    "text": "`<input type=\"check\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s checkbox?\n\n???\n",
    "text": "`<form input=\"check\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s checkbox?\n\n???\n",
    "text": "`<form input=\"checkbox\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Checkboxes have three possible states, these are `checked`, `unchecked` and:\n\n???\n",
    "text": "`indeterminate`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Checkboxes have three possible states, these are `checked`, `unchecked` and:\n\n???\n",
    "text": "`on`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Checkboxes have three possible states, these are `checked`, `unchecked` and:\n\n???\n",
    "text": "`off`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Checkboxes have three possible states, these are `checked`, `unchecked` and:\n\n???\n",
    "text": "`intermidiate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Checkboxes have three possible states, these are `checked`, `unchecked` and:\n\n???\n",
    "text": "There is no third state",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "form",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "input",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "checkbox",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "checked",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "label",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "/label",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "input",
    "correct": true,
    "correctIndex": 6
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "checkbox",
    "correct": true,
    "correctIndex": 7
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "label",
    "correct": true,
    "correctIndex": 8
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "/label",
    "correct": true,
    "correctIndex": 9
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "/form",
    "correct": true,
    "correctIndex": 10
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "squarebox",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "/squarebox",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "button",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "/button",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Create a checkbox group with two checkboxes and larger clickable area\n\n    <???>\n     <legend>\n       Choose favorite meal\n     </legend>\n       <div>\n        <???\n           type=\"???\" id=\"soup\"\n           name=\"meal\" value=\"soup\" ???>\n        <???\n           for=\"soup\">Soup\n        <???>\n       </div>\n       <div>\n        <???\n           type=\"???\" id=\"burgers\"\n           name=\"meal\" value=\"burgers\">\n        <???\n           for=\"burgers\">Burgers\n        </???>\n       </div\n    <???>\n",
    "text": "userInput",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about checkboxes?\n\nHow are checkboxes styled?\n\n???\n",
    "text": "With CSS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about checkboxes?\n\nHow are checkboxes styled?\n\n???\n",
    "text": "Can't be styled",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about checkboxes?\n\nHow are checkboxes styled?\n\n???\n",
    "text": "With proper HTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about checkboxes?\n\nHow are checkboxes styled?\n\n???\n",
    "text": "Using the `style` menu each browser provides for HTML editting",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "select",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "option",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "/option",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "/select",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "type",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "dropdown",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "/dropdown",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "item",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an item of a dropdown.\n\n    <???>\n      <??? value=\"a value\">DropDown Item #1<???>\n    <???>\n",
    "text": "/item",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code creates form’s dropdown list with a single item?\n\n???\n",
    "text": "`<select><option value=\"item1\">DropDown Item #1</option></select>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code creates form’s dropdown list with a single item?\n\n???\n",
    "text": "`<input><option value=\"item1\">DropDown Item #1</option></input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code creates form’s dropdown list with a single item?\n\n???\n",
    "text": "`<dropdown><option value=\"item1\">DropDown Item #1</option></dropdown>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code creates form’s dropdown list with a single item?\n\n???\n",
    "text": "`<select><dropdown value=\"item1\">DropDown Item #1</dropdown></select>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about dropdowns?\n\nWhen a form’s drop-down has an option other than the first item that needs to display by default, what attribute is used?\n\n    <select>\n      <option\n        value=\"item1\" ???>\n        Item #1\n       </option>\n    </select>\n",
    "text": "selected",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about dropdowns?\n\nWhen a form’s drop-down has an option other than the first item that needs to display by default, what attribute is used?\n\n    <select>\n      <option\n        value=\"item1\" ???>\n        Item #1\n       </option>\n    </select>\n",
    "text": "checked",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about dropdowns?\n\nWhen a form’s drop-down has an option other than the first item that needs to display by default, what attribute is used?\n\n    <select>\n      <option\n        value=\"item1\" ???>\n        Item #1\n       </option>\n    </select>\n",
    "text": "preselected",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about dropdowns?\n\nWhen a form’s drop-down has an option other than the first item that needs to display by default, what attribute is used?\n\n    <select>\n      <option\n        value=\"item1\" ???>\n        Item #1\n       </option>\n    </select>\n",
    "text": "default",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about dropdowns?\n\nWhen a form’s drop-down has an option other than the first item that needs to display by default, what attribute is used?\n\n    <select>\n      <option\n        value=\"item1\" ???>\n        Item #1\n       </option>\n    </select>\n",
    "text": "select",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define items of a drop-down list within a `select` element?\n\n    <select>\n      <__ value=\"apple\">Apples</__>\n      <__ value=\"banana\">Bananas</__>\n      <__ value=\"orange\">Oranges</__>\n    </select>\n\n???\n",
    "text": "`option`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to define items of a drop-down list within a `select` element?\n\n    <select>\n      <__ value=\"apple\">Apples</__>\n      <__ value=\"banana\">Bananas</__>\n      <__ value=\"orange\">Oranges</__>\n    </select>\n\n???\n",
    "text": "`optgroup`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define items of a drop-down list within a `select` element?\n\n    <select>\n      <__ value=\"apple\">Apples</__>\n      <__ value=\"banana\">Bananas</__>\n      <__ value=\"orange\">Oranges</__>\n    </select>\n\n???\n",
    "text": "`selectitem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define items of a drop-down list within a `select` element?\n\n    <select>\n      <__ value=\"apple\">Apples</__>\n      <__ value=\"banana\">Bananas</__>\n      <__ value=\"orange\">Oranges</__>\n    </select>\n\n???\n",
    "text": "`menuitem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define groups of related option of a drop-down list within a select element?\n\n    <select>\n     <__ label=\"Fav Fruit\">\n       <option\n         value=\"apple\">Apples\n       </option>\n       <option\n         value=\"banana\">Bananas\n       </option>\n     </__>\n     <__ label=\"Fav Veggie\">\n      <option\n       value=”carrot\">Carrot\n      </option>\n      <option\n       value=\"broccoli\">Broccoli\n      </option>\n     </__>\n    </select>\n\n???\n",
    "text": "`optgroup`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to define groups of related option of a drop-down list within a select element?\n\n    <select>\n     <__ label=\"Fav Fruit\">\n       <option\n         value=\"apple\">Apples\n       </option>\n       <option\n         value=\"banana\">Bananas\n       </option>\n     </__>\n     <__ label=\"Fav Veggie\">\n      <option\n       value=”carrot\">Carrot\n      </option>\n      <option\n       value=\"broccoli\">Broccoli\n      </option>\n     </__>\n    </select>\n\n???\n",
    "text": "`option`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define groups of related option of a drop-down list within a select element?\n\n    <select>\n     <__ label=\"Fav Fruit\">\n       <option\n         value=\"apple\">Apples\n       </option>\n       <option\n         value=\"banana\">Bananas\n       </option>\n     </__>\n     <__ label=\"Fav Veggie\">\n      <option\n       value=”carrot\">Carrot\n      </option>\n      <option\n       value=\"broccoli\">Broccoli\n      </option>\n     </__>\n    </select>\n\n???\n",
    "text": "`selectitem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to define groups of related option of a drop-down list within a select element?\n\n    <select>\n     <__ label=\"Fav Fruit\">\n       <option\n         value=\"apple\">Apples\n       </option>\n       <option\n         value=\"banana\">Bananas\n       </option>\n     </__>\n     <__ label=\"Fav Veggie\">\n      <option\n       value=”carrot\">Carrot\n      </option>\n      <option\n       value=\"broccoli\">Broccoli\n      </option>\n     </__>\n    </select>\n\n???\n",
    "text": "`menuitem`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the html `select` element?\n\nWhich statement is true regarding drop-down lists in HTML?\n\n???\n",
    "text": "The `<select>` element is used to create drop-down lists.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the html `select` element?\n\nWhich statement is true regarding drop-down lists in HTML?\n\n???\n",
    "text": "The `<option>` element is used to create drop-down lists.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the html `select` element?\n\nWhich statement is true regarding drop-down lists in HTML?\n\n???\n",
    "text": "The `<optgroup>` element is used to create drop-down lists.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the html `select` element?\n\nWhich statement is true regarding drop-down lists in HTML?\n\n???\n",
    "text": "The `<list>` element is used to create drop-down lists.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the input field displays a dropdown list.\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input [A]=\"fruits\" [B]=\"snacks\">\n      <[C] [D]=\"fruits\">\n        <[E] value=\"apples\">Apples</[E]>\n        <[E] value=\"bananas\">Bananas</[E]>\n        <[E] value=\"oranges\">Oranges</[E]>\n      </[C]>\n      <input type=\"submit\">\n    </form>\n\n`[A]`: ???\n`[B]`: ???\n`[C]`: ???\n`[D]`: ???\n`[E]`: ???\n",
    "text": "list",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code so that the input field displays a dropdown list.\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input [A]=\"fruits\" [B]=\"snacks\">\n      <[C] [D]=\"fruits\">\n        <[E] value=\"apples\">Apples</[E]>\n        <[E] value=\"bananas\">Bananas</[E]>\n        <[E] value=\"oranges\">Oranges</[E]>\n      </[C]>\n      <input type=\"submit\">\n    </form>\n\n`[A]`: ???\n`[B]`: ???\n`[C]`: ???\n`[D]`: ???\n`[E]`: ???\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code so that the input field displays a dropdown list.\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input [A]=\"fruits\" [B]=\"snacks\">\n      <[C] [D]=\"fruits\">\n        <[E] value=\"apples\">Apples</[E]>\n        <[E] value=\"bananas\">Bananas</[E]>\n        <[E] value=\"oranges\">Oranges</[E]>\n      </[C]>\n      <input type=\"submit\">\n    </form>\n\n`[A]`: ???\n`[B]`: ???\n`[C]`: ???\n`[D]`: ???\n`[E]`: ???\n",
    "text": "datalist",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code so that the input field displays a dropdown list.\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input [A]=\"fruits\" [B]=\"snacks\">\n      <[C] [D]=\"fruits\">\n        <[E] value=\"apples\">Apples</[E]>\n        <[E] value=\"bananas\">Bananas</[E]>\n        <[E] value=\"oranges\">Oranges</[E]>\n      </[C]>\n      <input type=\"submit\">\n    </form>\n\n`[A]`: ???\n`[B]`: ???\n`[C]`: ???\n`[D]`: ???\n`[E]`: ???\n",
    "text": "id",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the code so that the input field displays a dropdown list.\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input [A]=\"fruits\" [B]=\"snacks\">\n      <[C] [D]=\"fruits\">\n        <[E] value=\"apples\">Apples</[E]>\n        <[E] value=\"bananas\">Bananas</[E]>\n        <[E] value=\"oranges\">Oranges</[E]>\n      </[C]>\n      <input type=\"submit\">\n    </form>\n\n`[A]`: ???\n`[B]`: ???\n`[C]`: ???\n`[D]`: ???\n`[E]`: ???\n",
    "text": "option",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "list",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "formlist",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "datalistid",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "options",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "listoptions",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to connect pre-defined options of a datalist as an input dropdown?\n\n    <form\n      action=\"file.php\"\n      method=\"get\">\n     <input\n      ???=\"browsers\" name=\"browser\">\n      <datalist id=\"browsers\">\n        <option value=\"Microsoft Edge\">\n        <option value=\"Firefox\">\n        <option value=\"Chrome\">\n        <option value=\"Safari\">\n      </datalist>\n      <input type=\"submit\">\n    </form>\n",
    "text": "dataoptions",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "radio",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "/input",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates a radio button.\n\n`<??? ???=\"???\" name=\"topic\" value=\"item\"> Item <???>`\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s radio buttons?\n\n???\n",
    "text": "`<input type=\"radio\" name=\"topic\" value=\"item\"> Item </input>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line creates an HTML form’s radio buttons?\n\n???\n",
    "text": "`<radio name=\"topic\" value=\"item\"> Item </radio>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s radio buttons?\n\n???\n",
    "text": "`<input radio=\"topic\" value=\"item\"> Item </input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line creates an HTML form’s radio buttons?\n\n???\n",
    "text": "`<input type=\"radio\" value=\"topic\" name=\"item\"> Item </input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding step attributes within forms?\n\n???\n",
    "text": "Works with fractions, like 1/2 written as \".5\".",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is NOT true regarding step attributes within forms?\n\n???\n",
    "text": "Specifies the legal number intervals for an `<input>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding step attributes within forms?\n\n???\n",
    "text": "Can be used with min & max to create range of legal values.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding step attributes within forms?\n\n???\n",
    "text": "Works with these input types: number, date, & time.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute allows a number to be entered in a specified interval, such as (-5, 0, 5, 10, etc)?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      ???=\"5\">\n      <input\n      type=\"submit\">\n    </form>\n",
    "text": "`step`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute allows a number to be entered in a specified interval, such as (-5, 0, 5, 10, etc)?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      ???=\"5\">\n      <input\n      type=\"submit\">\n    </form>\n",
    "text": "`range`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute allows a number to be entered in a specified interval, such as (-5, 0, 5, 10, etc)?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      ???=\"5\">\n      <input\n      type=\"submit\">\n    </form>\n",
    "text": "`gap`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute allows a number to be entered in a specified interval, such as (-5, 0, 5, 10, etc)?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      ???=\"5\">\n      <input\n      type=\"submit\">\n    </form>\n",
    "text": "`space`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute allows a number to be entered in a specified interval, such as (-5, 0, 5, 10, etc)?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      ???=\"5\">\n      <input\n      type=\"submit\">\n    </form>\n",
    "text": "`span`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about restricted numbers in HTML form fields?\n\nWhich values would be accepted by this input field?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      step=\"5\">\n     <input\n      type=\"submit\">\n    </form>\n\n???\n",
    "text": "`-5, 0, 5, 10`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about restricted numbers in HTML form fields?\n\nWhich values would be accepted by this input field?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      step=\"5\">\n     <input\n      type=\"submit\">\n    </form>\n\n???\n",
    "text": "`1, 2, 3, 4, 5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about restricted numbers in HTML form fields?\n\nWhich values would be accepted by this input field?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      step=\"5\">\n     <input\n      type=\"submit\">\n    </form>\n\n???\n",
    "text": "`0, 1, 2, 3, 4, 5`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about restricted numbers in HTML form fields?\n\nWhich values would be accepted by this input field?\n\n    <form\n      action=\"file.php\">\n     <input\n      type=\"number\"\n      name=\"points\"\n      step=\"5\">\n     <input\n      type=\"submit\">\n    </form>\n\n???\n",
    "text": "`5, 6, 7, 8, 9`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding min and max attributes within forms?\n\n???\n",
    "text": "`min` & `max` are required to be used together.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is NOT true regarding min and max attributes within forms?\n\n???\n",
    "text": "`<input min=\"date\">` specifies the minimum date allowed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding min and max attributes within forms?\n\n???\n",
    "text": "`<input max=\"number\">` specifies the maximum number allowed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is NOT true regarding min and max attributes within forms?\n\n???\n",
    "text": "`min` & `max` attributes work with datetime, month, range, number, week, time and datetime-local.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "min",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "max",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "low",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "high",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "minimum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attributes are used within an input to set low and high values?\n\n    <form\n      action=\"/action.php\">\n     Rate your experience from 1-5:\n      <input\n       type=\"number\" name=\"rating\"\n        ???=\"1\" ???=\"5\">  \n     <input type=\"submit\">\n    </form>\n",
    "text": "maximum",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the min and max attributes?\n\n???\n",
    "text": "When setting the min value it can be greater than the max value, and vice-versa.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the min and max attributes?\n\n???\n",
    "text": "When setting the min value it cannot be greater than the max value, and vice-versa.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the min and max attributes?\n\n???\n",
    "text": "`<input min=\"date\">` specifies the minimum date allowed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the min and max attributes?\n\n???\n",
    "text": "`<input max=\"number\">` specifies the maximum number allowed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Mark the string that would NOT pass this pattern:\n\n    <input\n      type=\"text\" name=\"test\"\n      pattern=\"[a-zA-Z0-9]{10}\"\n      title=\"\">\n\n???\n",
    "text": "`http://enki.com`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Mark the string that would NOT pass this pattern:\n\n    <input\n      type=\"text\" name=\"test\"\n      pattern=\"[a-zA-Z0-9]{10}\"\n      title=\"\">\n\n???\n",
    "text": "`enkiCode`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Mark the string that would NOT pass this pattern:\n\n    <input\n      type=\"text\" name=\"test\"\n      pattern=\"[a-zA-Z0-9]{10}\"\n      title=\"\">\n\n???\n",
    "text": "`Colorado`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Mark the string that would NOT pass this pattern:\n\n    <input\n      type=\"text\" name=\"test\"\n      pattern=\"[a-zA-Z0-9]{10}\"\n      title=\"\">\n\n???\n",
    "text": "`12Num34`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Mark the string that would NOT pass this pattern:\n\n    <input\n      type=\"text\" name=\"test\"\n      pattern=\"[a-zA-Z0-9]{10}\"\n      title=\"\">\n\n???\n",
    "text": "`8675309`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to only allow a value that follows a unique expression?\n\n    <form\n      action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"us-state\"\n      ???=\"[A-Za-z]{2}\"\n      title=\"US State Abbrivation\">\n     <input type=\"submit\">\n    </form>\n",
    "text": "pattern",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to only allow a value that follows a unique expression?\n\n    <form\n      action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"us-state\"\n      ???=\"[A-Za-z]{2}\"\n      title=\"US State Abbrivation\">\n     <input type=\"submit\">\n    </form>\n",
    "text": "expression",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to only allow a value that follows a unique expression?\n\n    <form\n      action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"us-state\"\n      ???=\"[A-Za-z]{2}\"\n      title=\"US State Abbrivation\">\n     <input type=\"submit\">\n    </form>\n",
    "text": "compare",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to only allow a value that follows a unique expression?\n\n    <form\n      action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"us-state\"\n      ???=\"[A-Za-z]{2}\"\n      title=\"US State Abbrivation\">\n     <input type=\"submit\">\n    </form>\n",
    "text": "limitation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about forms and accepting certain data?\n\nWhen you look at the title, which regular expression do you think should be set as the pattern?\n\n    <form action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"username\"\n      pattern=\"???\"\n     title=\"Only letters (either case),\n      all numbers, and the underscore;\n      no more than 15 characters.\">\n     <input\n      type=\"submit\">\n    </form>\n",
    "text": "`[A-Za-z0-9_]{1,15}`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about forms and accepting certain data?\n\nWhen you look at the title, which regular expression do you think should be set as the pattern?\n\n    <form action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"username\"\n      pattern=\"???\"\n     title=\"Only letters (either case),\n      all numbers, and the underscore;\n      no more than 15 characters.\">\n     <input\n      type=\"submit\">\n    </form>\n",
    "text": "`[A-Za-z0-9_]{1-15}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about forms and accepting certain data?\n\nWhen you look at the title, which regular expression do you think should be set as the pattern?\n\n    <form action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"username\"\n      pattern=\"???\"\n     title=\"Only letters (either case),\n      all numbers, and the underscore;\n      no more than 15 characters.\">\n     <input\n      type=\"submit\">\n    </form>\n",
    "text": "`[a-zA-Z0-9_]{15}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about forms and accepting certain data?\n\nWhen you look at the title, which regular expression do you think should be set as the pattern?\n\n    <form action=\"file.php\">\n     Country code:\n     <input\n      type=\"text\" name=\"username\"\n      pattern=\"???\"\n     title=\"Only letters (either case),\n      all numbers, and the underscore;\n      no more than 15 characters.\">\n     <input\n      type=\"submit\">\n    </form>\n",
    "text": "`[A-Z-a-z-0-9_]{1-15}`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding placeholder?\n\n???\n",
    "text": "Provides a short hint within the input.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true regarding placeholder?\n\n???\n",
    "text": "Works with all elements, input, button, header, etc.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding placeholder?\n\n???\n",
    "text": "Numbers are not accepted as a placeholder.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding placeholder?\n\n???\n",
    "text": "Does not work with the following input types: url, tel, & password",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute shares a short hint that describes the expected value of an input field and will be overwritten by their input?\n\n    <input\n      type=\"text\" name=\"fname\"\n      ???=\"Full name\">\n",
    "text": "placeholder",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute shares a short hint that describes the expected value of an input field and will be overwritten by their input?\n\n    <input\n      type=\"text\" name=\"fname\"\n      ???=\"Full name\">\n",
    "text": "hint",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute shares a short hint that describes the expected value of an input field and will be overwritten by their input?\n\n    <input\n      type=\"text\" name=\"fname\"\n      ???=\"Full name\">\n",
    "text": "sample",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute shares a short hint that describes the expected value of an input field and will be overwritten by their input?\n\n    <input\n      type=\"text\" name=\"fname\"\n      ???=\"Full name\">\n",
    "text": "tip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute shares a short hint that describes the expected value of an input field and will be overwritten by their input?\n\n    <input\n      type=\"text\" name=\"fname\"\n      ???=\"Full name\">\n",
    "text": "note",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete this code where the range slider is between 1 and 100 and starts in the middle at 50 with the appropriate ID.\n\n    <input\n      type=\"???\"\n      ???=\"1\"\n      ???=\"100\"\n      ???=\"50\"\n      ???=\"myRange\">\n    <p>\n      Value: <span id=\"demo\"></span>\n    </p>\n\n    <script>\n     var slider =\n      document.getElementById(\"myRange\");\n     var output =\n      document.getElementById(\"demo\");\n     output.innerHTML = slider.value;\n\n     slider.oninput = function() {\n      output.innerHTML = this.value;\n     }\n    </script>\n",
    "text": "range",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete this code where the range slider is between 1 and 100 and starts in the middle at 50 with the appropriate ID.\n\n    <input\n      type=\"???\"\n      ???=\"1\"\n      ???=\"100\"\n      ???=\"50\"\n      ???=\"myRange\">\n    <p>\n      Value: <span id=\"demo\"></span>\n    </p>\n\n    <script>\n     var slider =\n      document.getElementById(\"myRange\");\n     var output =\n      document.getElementById(\"demo\");\n     output.innerHTML = slider.value;\n\n     slider.oninput = function() {\n      output.innerHTML = this.value;\n     }\n    </script>\n",
    "text": "min",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete this code where the range slider is between 1 and 100 and starts in the middle at 50 with the appropriate ID.\n\n    <input\n      type=\"???\"\n      ???=\"1\"\n      ???=\"100\"\n      ???=\"50\"\n      ???=\"myRange\">\n    <p>\n      Value: <span id=\"demo\"></span>\n    </p>\n\n    <script>\n     var slider =\n      document.getElementById(\"myRange\");\n     var output =\n      document.getElementById(\"demo\");\n     output.innerHTML = slider.value;\n\n     slider.oninput = function() {\n      output.innerHTML = this.value;\n     }\n    </script>\n",
    "text": "max",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete this code where the range slider is between 1 and 100 and starts in the middle at 50 with the appropriate ID.\n\n    <input\n      type=\"???\"\n      ???=\"1\"\n      ???=\"100\"\n      ???=\"50\"\n      ???=\"myRange\">\n    <p>\n      Value: <span id=\"demo\"></span>\n    </p>\n\n    <script>\n     var slider =\n      document.getElementById(\"myRange\");\n     var output =\n      document.getElementById(\"demo\");\n     output.innerHTML = slider.value;\n\n     slider.oninput = function() {\n      output.innerHTML = this.value;\n     }\n    </script>\n",
    "text": "value",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete this code where the range slider is between 1 and 100 and starts in the middle at 50 with the appropriate ID.\n\n    <input\n      type=\"???\"\n      ???=\"1\"\n      ???=\"100\"\n      ???=\"50\"\n      ???=\"myRange\">\n    <p>\n      Value: <span id=\"demo\"></span>\n    </p>\n\n    <script>\n     var slider =\n      document.getElementById(\"myRange\");\n     var output =\n      document.getElementById(\"demo\");\n     output.innerHTML = slider.value;\n\n     slider.oninput = function() {\n      output.innerHTML = this.value;\n     }\n    </script>\n",
    "text": "id",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Which form input type defines a slider control?\n\n???\n",
    "text": "`range`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form input type defines a slider control?\n\n???\n",
    "text": "`max-min`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form input type defines a slider control?\n\n???\n",
    "text": "`controls`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form input type defines a slider control?\n\n???\n",
    "text": "`slider`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form input type defines a slider control?\n\n???\n",
    "text": "`drag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true about the \"type=password\" attribute:\n\n???\n",
    "text": "Each input character appears as asterisk.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true about the \"type=password\" attribute:\n\n???\n",
    "text": "Each input character appears as a dollar sign",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true about the \"type=password\" attribute:\n\n???\n",
    "text": "Each input character does not appear.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true about the \"type=password\" attribute:\n\n???\n",
    "text": "Must use `width` to adjust input text size vs `font-size`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When sensitive data is input into a text field that should display as `*` in place of characters, which form attribute is used?\n\n???\n",
    "text": "password",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When sensitive data is input into a text field that should display as `*` in place of characters, which form attribute is used?\n\n???\n",
    "text": "private",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When sensitive data is input into a text field that should display as `*` in place of characters, which form attribute is used?\n\n???\n",
    "text": "hidden",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When sensitive data is input into a text field that should display as `*` in place of characters, which form attribute is used?\n\n???\n",
    "text": "secret",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When sensitive data is input into a text field that should display as `*` in place of characters, which form attribute is used?\n\n???\n",
    "text": "astrisk",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "formaction",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "form",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "action",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "submit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "form-data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code so that the second button links properly to the action_page2.php file.\n\n    <form action=\"page1.php\"\n        method=\"get\">\n      Name: <input type=\"text\"\n        name=\"name\">\n      <button type=\"submit\">\n        Submit\n      </button>\n      <button type=\"submit\"\n        ???=\"page2.php\">\n        Submit to Page2\n      </button>\n    </form>\n",
    "text": "formpath",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "formaction",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "form",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "action",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "submit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "form-data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used with the submit button when multiple buttons are used to help determine the location for the sent data?\n\n???\n",
    "text": "formpath",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding `enctype`?\n\n???\n",
    "text": "Specifies how the form-data should be encoded when submitted to server.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true regarding `enctype`?\n\n???\n",
    "text": "can be used only if `method=\"get\"`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding `enctype`?\n\n???\n",
    "text": "The values `application/x-www-form-urlencoded` and `text/plain` convert spaces into `-` symbols.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to specify an encoding type for your form?\n\n???\n",
    "text": "enctype",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute is used to specify an encoding type for your form?\n\n???\n",
    "text": "form-data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to specify an encoding type for your form?\n\n???\n",
    "text": "encode",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to specify an encoding type for your form?\n\n???\n",
    "text": "urlencoded",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to specify an encoding type for your form?\n\n???\n",
    "text": "form",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the possible values with their description related to the method attribute.\n\n    <form\n      action=\"file1.php\" method=\"get\">\n    </form>\n    <form\n      action=\"file2.php\" method=\"post\">\n    </form>\n\nget : ???\npost : ???\n",
    "text": "Form data is appended to the URL when submitted.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the possible values with their description related to the method attribute.\n\n    <form\n      action=\"file1.php\" method=\"get\">\n    </form>\n    <form\n      action=\"file2.php\" method=\"post\">\n    </form>\n\nget : ???\npost : ???\n",
    "text": "Form data is not appended to the URL.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which input form attribute specifies the HTTP method to use when the form is submitted?\n\n???\n",
    "text": "method",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute specifies the HTTP method to use when the form is submitted?\n\n???\n",
    "text": "http",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute specifies the HTTP method to use when the form is submitted?\n\n???\n",
    "text": "submit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute specifies the HTTP method to use when the form is submitted?\n\n???\n",
    "text": "data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute specifies the HTTP method to use when the form is submitted?\n\n???\n",
    "text": "get/post",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to disable the validation within the form element and in the submit button.\n\n    <form\n     action=\"/action_page.php\" ??? >\n     E-mail:\n     <input type=\"email\"\n      name=\"user_email\">\n     <input type=\"submit\" ??? >\n    </form>\n",
    "text": "novalidate",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to disable the validation within the form element and in the submit button.\n\n    <form\n     action=\"/action_page.php\" ??? >\n     E-mail:\n     <input type=\"email\"\n      name=\"user_email\">\n     <input type=\"submit\" ??? >\n    </form>\n",
    "text": "formnovalidate",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to disable the validation within the form element and in the submit button.\n\n    <form\n     action=\"/action_page.php\" ??? >\n     E-mail:\n     <input type=\"email\"\n      name=\"user_email\">\n     <input type=\"submit\" ??? >\n    </form>\n",
    "text": "validate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to disable the validation within the form element and in the submit button.\n\n    <form\n     action=\"/action_page.php\" ??? >\n     E-mail:\n     <input type=\"email\"\n      name=\"user_email\">\n     <input type=\"submit\" ??? >\n    </form>\n",
    "text": "form-data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to disable the validation within the form element and in the submit button.\n\n    <form\n     action=\"/action_page.php\" ??? >\n     E-mail:\n     <input type=\"email\"\n      name=\"user_email\">\n     <input type=\"submit\" ??? >\n    </form>\n",
    "text": "datavalidate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "formtarget",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "_blank",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "target",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "_new",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "frame",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to submit the data to a new window.\n\n    <form\n      action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\">\n        <br>\n      <input type=\"submit\"\n        ???=\"???\">\n    </form>\n",
    "text": "frameset",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute, with values such as “_blank” and “framename”, indicates where to display the response that is received after submitting the form?\n\n???\n",
    "text": "formtarget",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute, with values such as “_blank” and “framename”, indicates where to display the response that is received after submitting the form?\n\n???\n",
    "text": "target",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute, with values such as “_blank” and “framename”, indicates where to display the response that is received after submitting the form?\n\n???\n",
    "text": "_target",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute, with values such as “_blank” and “framename”, indicates where to display the response that is received after submitting the form?\n\n???\n",
    "text": "frame",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute, with values such as “_blank” and “framename”, indicates where to display the response that is received after submitting the form?\n\n???\n",
    "text": "frameset",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements are not true regarding height & width attributes within forms?\n\n???\n",
    "text": "CSS cannot assign height & width attributes within forms.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statements are not true regarding height & width attributes within forms?\n\n???\n",
    "text": "Important to add to reserve space during page load.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements are not true regarding height & width attributes within forms?\n\n???\n",
    "text": "The height attribute is used only with `<input type=\"image\">`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statements are not true regarding height & width attributes within forms?\n\n???\n",
    "text": "The measurements are in pixels.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "width",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "height",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "wide",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "tall",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "vert",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code by adding the appropriate input form attributes to assign the size of the submit button (20 pixels wide by 30 pixels tall).\n\n    <form\n     action=\"file.php\">\n      Name:\n        <input type=\"text\"\n          name=\"name\"><br>\n      <input type=\"image\"\n        src=\"submit.svg\"\n        alt=\"Submit\"\n        ???=\"20\" ???=\"30\">\n    </form>\n",
    "text": "hor",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nIdentify which statement is true regarding the use of height and width with input form attributes?\n\n???\n",
    "text": "Both the height and width attribute are used only with `<input type=\"image\">`.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nIdentify which statement is true regarding the use of height and width with input form attributes?\n\n???\n",
    "text": "The height attribute is used with `<input type=\"image\">` and `<input type=\"button\">`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nIdentify which statement is true regarding the use of height and width with input form attributes?\n\n???\n",
    "text": "The width attribute is used with `<input type=\"image\">` and `<input type=\"button\">`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nIdentify which statement is true regarding the use of height and width with input form attributes?\n\n???\n",
    "text": "You can only set the attributes height and width with CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "input",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "type",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "image",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "src",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "alt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the form code that creates an image button.\n\n`<??? ???=\"???\" ???=\"button.png\" alt=\"Send\" >`\n",
    "text": "submit",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code is used to replace a form's submit button with an image?\n\n???\n",
    "text": "`<input type=\"image\" src=\"button.png\" >`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What code is used to replace a form's submit button with an image?\n\n???\n",
    "text": "`<img type=\"submit\" src=\"button.png\" >`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code is used to replace a form's submit button with an image?\n\n???\n",
    "text": "`<input type=\"submit\" src=\"button.png\" >`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code is used to replace a form's submit button with an image?\n\n???\n",
    "text": "`<img type=\"image\" src=\"button.png\" >`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding autocomplete?\n\n???\n",
    "text": "Can automatically complete fields based on the user's history",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true regarding autocomplete?\n\n???\n",
    "text": "The data is stored on the webpage.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding autocomplete?\n\n???\n",
    "text": "Items like credit card numbers should not be auto-completed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "autocomplete",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "cookies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "sessionStorage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "objects",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute is used to store input field data and re-populate within similar fields on other websites.\n\n???\n",
    "text": "storage",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement isn't true regarding autofocus?\n\n???\n",
    "text": "It should be assigned to every control in the form.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement isn't true regarding autofocus?\n\n???\n",
    "text": "Automatically sets focus to assigned control when the page loads.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement isn't true regarding autofocus?\n\n???\n",
    "text": "User can start using assigned control without having to select it first.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement isn't true regarding autofocus?\n\n???\n",
    "text": "Can be assiged as: `autofocus` or `autofocus=\"autofocus\"`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "autofocus",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "mark",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "active",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "focus",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which input form attribute sets a selected input as active when the page loads?\n\n???\n",
    "text": "auto",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true regarding the `multiple` attribute within forms?\n\n???\n",
    "text": "Works with min and max range input type, separated by |.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is not true regarding the `multiple` attribute within forms?\n\n???\n",
    "text": "When present, more than one value can be added in the `<input>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true regarding the `multiple` attribute within forms?\n\n???\n",
    "text": "Works with email input type, separated by commas.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is not true regarding the `multiple` attribute within forms?\n\n???\n",
    "text": "Works with file input type, by holding down CTRL or SHIFT keys while selecting.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "multiple",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "options",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "multi",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "more",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "assorted",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to allow the user the option to enter more than one value in an input element, such as input and file?\n\n    <form action=\"file.php\">\n     Select images:\n      <input type=\"file\"\n        name=\"img\" ???>\n     <input type=\"submit\">\n    </form>\n",
    "text": "plural",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the `multiple` input form attribute?\n\n???\n",
    "text": "Works with data input type, separated by semicolons.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the `multiple` input form attribute?\n\n???\n",
    "text": "When present, more than one value can be added in the `<input>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the `multiple` input form attribute?\n\n???\n",
    "text": "Works with email input type, separated by commas.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML input form attributes?\n\nWhich statement is not true regarding the `multiple` input form attribute?\n\n???\n",
    "text": "Works with file input type, by holding down CTRL or SHIFT keys while selecting.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the form attributes with their descriptions.\n\noninput: ???\nonchange: ???\n",
    "text": "occurs immediately after the value of an element has changed.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the form attributes with their descriptions.\n\noninput: ???\nonchange: ???\n",
    "text": "occurs after the content has been changed and the element loses focus.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the form attributes with their descriptions.\n\noninput: ???\nonchange: ???\n",
    "text": "occurs immediately when the element gains focus.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to call a JavaScript when a user writes something within an `<input>` field?\n\n    <input\n      type=\"text\"\n      ???=\"jsFunction()\">\n",
    "text": "oninput",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which form attribute is used to call a JavaScript when a user writes something within an `<input>` field?\n\n    <input\n      type=\"text\"\n      ???=\"jsFunction()\">\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to call a JavaScript when a user writes something within an `<input>` field?\n\n    <input\n      type=\"text\"\n      ???=\"jsFunction()\">\n",
    "text": "action",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to call a JavaScript when a user writes something within an `<input>` field?\n\n    <input\n      type=\"text\"\n      ???=\"jsFunction()\">\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which form attribute is used to call a JavaScript when a user writes something within an `<input>` field?\n\n    <input\n      type=\"text\"\n      ???=\"jsFunction()\">\n",
    "text": "call",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about events in HTML?\n\nWhich event occurs immediately after the value of an element has changed.\n\n???\n",
    "text": "oninput",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about events in HTML?\n\nWhich event occurs immediately after the value of an element has changed.\n\n???\n",
    "text": "onoutput",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about events in HTML?\n\nWhich event occurs immediately after the value of an element has changed.\n\n???\n",
    "text": "script",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about events in HTML?\n\nWhich event occurs immediately after the value of an element has changed.\n\n???\n",
    "text": "function",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the form attributes that are specific for the `<output>` element with their descriptions.\n\nfor: ???\nform: ???\nname: ???\n",
    "text": "Specifies an explicit relationship between the result of a calculation and the elements that represent the values.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the form attributes that are specific for the `<output>` element with their descriptions.\n\nfor: ???\nform: ???\nname: ???\n",
    "text": "Associates the output with a form.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the form attributes that are specific for the `<output>` element with their descriptions.\n\nfor: ???\nform: ???\nname: ???\n",
    "text": "Specifies the name of this element.",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Which HTML element is used to display form values, such as the result of a calculation or user action, that displays outside the form elsewhere on the page?\n\n???\n",
    "text": "output",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to display form values, such as the result of a calculation or user action, that displays outside the form elsewhere on the page?\n\n???\n",
    "text": "values",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to display form values, such as the result of a calculation or user action, that displays outside the form elsewhere on the page?\n\n???\n",
    "text": "numform",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to display form values, such as the result of a calculation or user action, that displays outside the form elsewhere on the page?\n\n???\n",
    "text": "outside",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to display form values, such as the result of a calculation or user action, that displays outside the form elsewhere on the page?\n\n???\n",
    "text": "display",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "span`s are seen as ??? elements.\n",
    "text": "stylistic",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "span`s are seen as ??? elements.\n",
    "text": "structural",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "span`s are seen as ??? elements.\n",
    "text": "not",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h6",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The smallest sized heading is\n\n???\n",
    "text": "h5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "All headings are ??? by default.\n",
    "text": "bold",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "All headings are ??? by default.\n",
    "text": "italic",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "All headings are ??? by default.\n",
    "text": "bigger than paragraphs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "All headings are ??? by default.\n",
    "text": "smaller than paragraphs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet in order for it to be valid:\n\n```html\n<tag ???=\"www.mywebsite.com\">\n  My website\n</tag>\n```\n\ntag = ???\n",
    "text": "`href`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet in order for it to be valid:\n\n```html\n<tag ???=\"www.mywebsite.com\">\n  My website\n</tag>\n```\n\ntag = ???\n",
    "text": "`a`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet in order for it to be valid:\n\n```html\n<tag ???=\"www.mywebsite.com\">\n  My website\n</tag>\n```\n\ntag = ???\n",
    "text": "`style`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet in order for it to be valid:\n\n```html\n<tag ???=\"www.mywebsite.com\">\n  My website\n</tag>\n```\n\ntag = ???\n",
    "text": "`p`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet in order for it to be valid:\n\n```html\n<tag ???=\"www.mywebsite.com\">\n  My website\n</tag>\n```\n\ntag = ???\n",
    "text": "`link`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The tag denoting a hyperlink is ???.\n",
    "text": "`<a>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The tag denoting a hyperlink is ???.\n",
    "text": "`<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The tag denoting a hyperlink is ???.\n",
    "text": "`<body>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The tag denoting a hyperlink is ???.\n",
    "text": "`<div>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The two main components of a HTML document are ???.\n",
    "text": "<head> and <body>",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The two main components of a HTML document are ???.\n",
    "text": "<heading> and <body>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The two main components of a HTML document are ???.\n",
    "text": "<p> and <a>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The two main components of a HTML document are ???.\n",
    "text": "<h> and <body>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that it contains valid code:\n\n```html\n<img ???=\"example.com/path/dog.jpg\"/>\n```\n",
    "text": "src",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet such that it contains valid code:\n\n```html\n<img ???=\"example.com/path/dog.jpg\"/>\n```\n",
    "text": "href",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that it contains valid code:\n\n```html\n<img ???=\"example.com/path/dog.jpg\"/>\n```\n",
    "text": "link",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet such that it contains valid code:\n\n```html\n<img ???=\"example.com/path/dog.jpg\"/>\n```\n",
    "text": "source",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the \"&\" character entity display in this line of code?\n\n`<p>The symbol \"&amp;\" should be pretty easy to recognize.</p>`\n\n???\n",
    "text": "&",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the \"&\" character entity display in this line of code?\n\n`<p>The symbol \"&amp;\" should be pretty easy to recognize.</p>`\n\n???\n",
    "text": "*",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the \"&\" character entity display in this line of code?\n\n`<p>The symbol \"&amp;\" should be pretty easy to recognize.</p>`\n\n???\n",
    "text": "'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the \"&\" character entity display in this line of code?\n\n`<p>The symbol \"&amp;\" should be pretty easy to recognize.</p>`\n\n???\n",
    "text": "^",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the \"&\" character entity display in this line of code?\n\n`<p>The symbol \"&amp;\" should be pretty easy to recognize.</p>`\n\n???\n",
    "text": "@",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert an ampersand symbol (\"&\")?\n\n???\n",
    "text": "&",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML character entity is used to insert an ampersand symbol (\"&\")?\n\n???\n",
    "text": "&&;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert an ampersand symbol (\"&\")?\n\n???\n",
    "text": "¤t;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert an ampersand symbol (\"&\")?\n\n???\n",
    "text": "&;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert an ampersand symbol (\"&\")?\n\n???\n",
    "text": "&ersand;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML character entities?\n\nIf you have a webpage called “black&white”, what character entity is best to use in the following URL:\n\n`<a href=\"?page=black???white&action=view\">Link to B/W</a>`\n",
    "text": "&",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML character entities?\n\nIf you have a webpage called “black&white”, what character entity is best to use in the following URL:\n\n`<a href=\"?page=black???white&action=view\">Link to B/W</a>`\n",
    "text": "&",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML character entities?\n\nIf you have a webpage called “black&white”, what character entity is best to use in the following URL:\n\n`<a href=\"?page=black???white&action=view\">Link to B/W</a>`\n",
    "text": "%20",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML character entities?\n\nIf you have a webpage called “black&white”, what character entity is best to use in the following URL:\n\n`<a href=\"?page=black???white&action=view\">Link to B/W</a>`\n",
    "text": "&and",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML character entities?\n\nIf you have a webpage called “black&white”, what character entity is best to use in the following URL:\n\n`<a href=\"?page=black???white&action=view\">Link to B/W</a>`\n",
    "text": "%a2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why can using \"©\" for a copyright symbol be easier to code?\n\n???\n",
    "text": "Because © isn't available on your keyboard.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Why can using \"©\" for a copyright symbol be easier to code?\n\n???\n",
    "text": "Typing © on your keyboard is easier than using \"©\".",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why can using \"©\" for a copyright symbol be easier to code?\n\n???\n",
    "text": "There is no good way to code the copyright symbol.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why can using \"©\" for a copyright symbol be easier to code?\n\n???\n",
    "text": "© is smaller in filesize, loading faster.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert a copyright symbol into a document?\n\n???\n",
    "text": "©",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML character entity is used to insert a copyright symbol into a document?\n\n???\n",
    "text": "@",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert a copyright symbol into a document?\n\n???\n",
    "text": "©",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert a copyright symbol into a document?\n\n???\n",
    "text": "©right",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to insert a copyright symbol into a document?\n\n???\n",
    "text": "@c",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code that will display this HTML tag properly: \"`<p>` is an HTML paragraph tag.\"\n\n???p??? is an HTML paragraph tag.\n",
    "text": "`&lt;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the code that will display this HTML tag properly: \"`<p>` is an HTML paragraph tag.\"\n\n???p??? is an HTML paragraph tag.\n",
    "text": "`&gt;`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the code that will display this HTML tag properly: \"`<p>` is an HTML paragraph tag.\"\n\n???p??? is an HTML paragraph tag.\n",
    "text": "`&rt;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code that will display this HTML tag properly: \"`<p>` is an HTML paragraph tag.\"\n\n???p??? is an HTML paragraph tag.\n",
    "text": "`<`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the code that will display this HTML tag properly: \"`<p>` is an HTML paragraph tag.\"\n\n???p??? is an HTML paragraph tag.\n",
    "text": "`>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In HTML the browser always assumes `<` and `>` represent the start and end of an HTML tag. What is one of the correct ways of displaying these two characters?\n\n???\n",
    "text": "Using their character entity name(`&lt;`,`&gt;`)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In HTML the browser always assumes `<` and `>` represent the start and end of an HTML tag. What is one of the correct ways of displaying these two characters?\n\n???\n",
    "text": "Using the designated (<) and (>) buttons on the keyboard",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In HTML the browser always assumes `<` and `>` represent the start and end of an HTML tag. What is one of the correct ways of displaying these two characters?\n\n???\n",
    "text": "Enclosing the characters in single quotation '<','>'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In HTML the browser always assumes `<` and `>` represent the start and end of an HTML tag. What is one of the correct ways of displaying these two characters?\n\n???\n",
    "text": "Escape them like so: `\\<` and `\\>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding a non-breaking space:\n\n???\n",
    "text": "Prevents an empty cell in a table from collapsing in some browsers.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which statement is true regarding a non-breaking space:\n\n???\n",
    "text": "Useful for creating indented paragraphs.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding a non-breaking space:\n\n???\n",
    "text": "Long strings of them are good ways of creating gaps of space.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which statement is true regarding a non-breaking space:\n\n???\n",
    "text": "They are easier to read than a space character.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": " ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": " ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": "<sp;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": "empty space: \" \"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": "&space",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What HTML character entity is used to prevent the browser from breaking the line between certain words or web page elements?\n\n`<p>5???km</p>`\n",
    "text": "&gap",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "`href` and `target`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "Quotation marks",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "`<p>` and `<a>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "`href` and `<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "`https://www.enkipro.com` and `_blank`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "Parenthesis",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "Commas",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two attributes of this code?\n\n    <p>\n      This is a\n      <a\n       href=\"https://www.enkipro.com\"\n       target=\"_blank\">link\n      </a>\n    </p>\n\n???\n\nAttribute values should always be enclosed within what symbols?\n\n???\n",
    "text": "Periods",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "Within the opening tag.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "False",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "Within the closing tag.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "Between the opening and closing tags.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "Before the opening tag.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "HTML attributes are required to be placed where?\n\n???\n\nTrue or False? `Every HTML element requires an attribute.`\n\n???\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML attributes?\n\nHTML attributes usually come in what format?\n\n???\n",
    "text": "pairs like: name=\"value\"",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML attributes?\n\nHTML attributes usually come in what format?\n\n???\n",
    "text": "styles like: font-size",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML attributes?\n\nHTML attributes usually come in what format?\n\n???\n",
    "text": "values like: color=\"red\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML attributes?\n\nHTML attributes usually come in what format?\n\n???\n",
    "text": "measurements like: pixels",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML attributes?\n\nHTML attributes usually come in what format?\n\n???\n",
    "text": "names like: labels=\"container\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In regards to HTML comments, which of the following is true?:\n\n???\n",
    "text": "The code `<!--` starts a comment. The code `->` ends a comment.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In regards to HTML comments, which of the following is true?:\n\n???\n",
    "text": "The comment is placed within `<!- xxx ->`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In regards to HTML comments, which of the following is true?:\n\n???\n",
    "text": "The comment is placed within `*/ xxx /*`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In regards to HTML comments, which of the following is true?:\n\n???\n",
    "text": "The comment is placed within `/* xxx */`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In regards to HTML comments, which of the following is true?:\n\n???\n",
    "text": "HTML does not support comments.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which option is NOT true: \"HTML comments using this code `<!-- stuff here -->`, can...\"\n\n???\n",
    "text": "only comment out one line of code at a time.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which option is NOT true: \"HTML comments using this code `<!-- stuff here -->`, can...\"\n\n???\n",
    "text": "place notes for other developers.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which option is NOT true: \"HTML comments using this code `<!-- stuff here -->`, can...\"\n\n???\n",
    "text": "be used to add reminders for yourself about the code.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which option is NOT true: \"HTML comments using this code `<!-- stuff here -->`, can...\"\n\n???\n",
    "text": "be used to debug by hiding blocks of HTML code.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which option is NOT true: \"HTML comments using this code `<!-- stuff here -->`, can...\"\n\n???\n",
    "text": "visually break up long pages of code into sections.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML comments?\n\nWhat is happening to this heading text?\n\n    <!--<h1>Heading</h1>-->\n\n???\n",
    "text": "It is not displayed in the browser.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML comments?\n\nWhat is happening to this heading text?\n\n    <!--<h1>Heading</h1>-->\n\n???\n",
    "text": "It is displayed larger than normal.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML comments?\n\nWhat is happening to this heading text?\n\n    <!--<h1>Heading</h1>-->\n\n???\n",
    "text": "It is displayed as a Heading 1 in the web page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML comments?\n\nWhat is happening to this heading text?\n\n    <!--<h1>Heading</h1>-->\n\n???\n",
    "text": "It is removed from the HTML code.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Paragraphs and Anchors",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Anchors and Headings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Headings and Paragraphs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Images and Links",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Parameters and Anchors",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What elements are used in this code?\n\n    <p>\n      Check out this\n        <a href=\"http://www.enkipro.com\">\n      website.\n    </p>\n\n???\n",
    "text": "Anchors and Headings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is an HTML element called that does not have a closing tag?\n\n???\n",
    "text": "`self closing`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is an HTML element called that does not have a closing tag?\n\n???\n",
    "text": "`tag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is an HTML element called that does not have a closing tag?\n\n???\n",
    "text": "`closed element`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is an HTML element called that does not have a closing tag?\n\n???\n",
    "text": "`opening tag`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is an HTML element called that does not have a closing tag?\n\n???\n",
    "text": "`< />`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "element",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "attribute",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "attribute's value",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "content",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Identify the terms defining this HTML code:\n\n     A  B          C                D  \n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\n",
    "text": "rule",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "opening tag",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "element",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "attribute",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "attribute's value",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "content",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "closing tag",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "value",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the terms defining this HTML code:\n\n    AB  C      D                    E  F\n    <a href=\"http://enkipro.com/\">Enki</a>\n\n    <!--IMAGE: html-structure-define.svg-->\n\nA: ???\nB: ???\nC: ???\nD: ???\nE: ???\nF: ???\n",
    "text": "rule",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how HTML elements are structured?\n\nWhich of these HTML elements is structured properly?\n\n???\n",
    "text": "`<a href=\"http://enkipro.com/\">Enki</a>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you know how HTML elements are structured?\n\nWhich of these HTML elements is structured properly?\n\n???\n",
    "text": "`<a></a> href=\"http://enkipro.com/\">Enki`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how HTML elements are structured?\n\nWhich of these HTML elements is structured properly?\n\n???\n",
    "text": "`<a>Enki</a> href=\"http://enkipro.com/\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how HTML elements are structured?\n\nWhich of these HTML elements is structured properly?\n\n???\n",
    "text": "`<href a=\"http://enkipro.com/\">Enki</href>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "`/`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "lowercase",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "5",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "`^`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "`<`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "`>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "`*`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "uppercase",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "camelcase",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these characters is used to represent an end tag?\n\n???\n\nHTML tags are recommended to be written in which case?\n\n???\n\nHow many tags are used in this code:\n\n    <h1>Large Text Heading</h1>\n    <img src=\"photos/image.jpg\">\n    <p>I’m just a simple paragraph.</p>\n\n???\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "closing tag has a / within it.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "there is no different between opening & closing tags.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "opening tag has a / within it.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Every HTML element requires both an opening and closing HTML tag.\n\n???\n\nWhat is the difference between an opening and closing HTML tag?\n\n???\n",
    "text": "closing tag is an empty element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML tags?\n\nWhich language requires HTML tags to be written in lowercase and has influenced  developers to continue to write HTML tags that way?\n\n???\n",
    "text": "XHTML",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML tags?\n\nWhich language requires HTML tags to be written in lowercase and has influenced  developers to continue to write HTML tags that way?\n\n???\n",
    "text": "HTML1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML tags?\n\nWhich language requires HTML tags to be written in lowercase and has influenced  developers to continue to write HTML tags that way?\n\n???\n",
    "text": "HTML4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML tags?\n\nWhich language requires HTML tags to be written in lowercase and has influenced  developers to continue to write HTML tags that way?\n\n???\n",
    "text": "CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "HTML4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "eXtensible Hypertext Markup Language",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "all tags, once opened, must be closed in XHTML, but not in HTML4",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "`<form>`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "HTML2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "HTML3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "eXtensible Hypertext Markup Library",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "all tags, once opened, must be closed in HTML4, but not in XHTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "all elements must be written in uppercase in XHTML, but not in HTML4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "`<font>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which version of HTML is the oldest still in use today?\n\n???\n\nWhat does XHTML stand for?\n\n???\n\nWhat is the main difference between HTML4 and XHTML?\n\n???\n\nWhich of these HTML elements was not removed in HTML5?\n\n???\n",
    "text": "`<strike>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is this statement true?\nHTML5 supports approx. 50% of the presentational attributes that were in HTML4?\n\n???\n",
    "text": "No because there are no presentational attributes from HTML4 that are supported in HTML5.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is this statement true?\nHTML5 supports approx. 50% of the presentational attributes that were in HTML4?\n\n???\n",
    "text": "No, because all presentational attributes from HTML4 are supported in HTML5.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is this statement true?\nHTML5 supports approx. 50% of the presentational attributes that were in HTML4?\n\n???\n",
    "text": "Yes.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is this statement true?\nHTML5 supports approx. 50% of the presentational attributes that were in HTML4?\n\n???\n",
    "text": "No, because presentational attributes only existed in HTML1.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Test your HTML knowledge.\n\nWhen referring to deprecated HTML tags, what does that mean?\n\n???\n",
    "text": "HTML elements which are no longer supported and are replaced with better and more functional CSS alternatives.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Test your HTML knowledge.\n\nWhen referring to deprecated HTML tags, what does that mean?\n\n???\n",
    "text": "HTML elements that are best used with certain features.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Test your HTML knowledge.\n\nWhen referring to deprecated HTML tags, what does that mean?\n\n???\n",
    "text": "HTML elements that will never be obsolete.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Test your HTML knowledge.\n\nWhen referring to deprecated HTML tags, what does that mean?\n\n???\n",
    "text": "HTML elements that are not appreciated enough.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a best way to treat alt tags for images that are used in the interface and does not contain useful content for the user?\n\n???\n",
    "text": "Use an empty alt attribute.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is a best way to treat alt tags for images that are used in the interface and does not contain useful content for the user?\n\n???\n",
    "text": "Write the description only in lowercase.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a best way to treat alt tags for images that are used in the interface and does not contain useful content for the user?\n\n???\n",
    "text": "Write the description only in uppercase.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is a best way to treat alt tags for images that are used in the interface and does not contain useful content for the user?\n\n???\n",
    "text": "Don't use an alt attribute.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which description(s) of using image alt attributes is not true:\n\n???\n",
    "text": "Image will not display properly without an alt.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which description(s) of using image alt attributes is not true:\n\n???\n",
    "text": "Required on every image for page validation.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which description(s) of using image alt attributes is not true:\n\n???\n",
    "text": "Important to help support screen readers.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which description(s) of using image alt attributes is not true:\n\n???\n",
    "text": "Useful for webpage viewer when image path is broken.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which description(s) of using image alt attributes is not true:\n\n???\n",
    "text": "Linked image descriptions should be of the destination and not the image itself.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "U S A",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "USA",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "usa",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "U.S.A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "U-S-A",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know the best way to write acronyms (like \"USA\") within image alt attribute?\n\nHint: The best way helps screen readers read the alt properly as it prevents \"ITS in the US\" from being read as \"It’s in the us\".\n\n`<img src=\"usa-map.jpg\" alt=\"______\">`\n\n???\n",
    "text": "\"U\"\"S\"\"A\"",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`head`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`base`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`href=\"http://www.enkipro.com/images/\"`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`/head`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`img`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`src`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`nav`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Assign the link path for every image on the webpage:\n\n    <???>\n      <??? ???>\n    <???>\n",
    "text": "`/nav`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`base`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`http://enkipro.com/`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`image`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`link`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`target`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`[no path is needed]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`enkipro.com/`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The link path to every image on the webpage can be assigned using what HTML element?\n\n???\n\nComplete the code if a `<base>` URL is assigned and an image is used within an OpenGraph meta-tag.\n\n    <head>\n      <base href=\"http://enkipro.com/\">\n      <meta property='og:image'\n        content='???facebook-image.jpg'>\n    </head>\n\n???\n",
    "text": "`path`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code assigns the default of every link within the web page to open a new page?\n\n???\n",
    "text": "`<base target=\"_blank\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What code assigns the default of every link within the web page to open a new page?\n\n???\n",
    "text": "`<link target=\"_blank\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code assigns the default of every link within the web page to open a new page?\n\n???\n",
    "text": "`<a target=\"_blank\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What code assigns the default of every link within the web page to open a new page?\n\n???\n",
    "text": "`<* target=\"_blank\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the appropriate attributes/values for creating an image in HTML?\n\n`<??? ???=\"image.svg\" ???=\"200\" ???=\"200\">`\n",
    "text": "length",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the appropriate attributes/values for creating an image in HTML?\n\n`<??? ???=\"image.svg\" ???=\"200\" ???=\"200\">`\n",
    "text": "size",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the appropriate attributes/values for creating an image in HTML?\n\n`<??? ???=\"image.svg\" ???=\"200\" ???=\"200\">`\n",
    "text": "tall",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill in the appropriate attributes/values for creating an image in HTML?\n\n`<??? ???=\"image.svg\" ???=\"200\" ???=\"200\">`\n",
    "text": "wide",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "rect",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "circle",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "_blank",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "poly",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "usemap",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "rectangle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "polygon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "pentagon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "square",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add map elements to create clickable areas within a single image.\n\n    <map name=\"objects\">\n      <area shape=\"???\" coords=\"10,50,82,126\"\n        alt=\"\" href=\"object1.htm\">\n      <area shape=\"???\" coords=\"90,58,3\"\n        alt=\"\" href=\"object2.htm\"\n          target=\"???\">\n      <area shape=\"???\"\n        coords=\"14,24,12,32,25,41,34,33,32,25\"\n          alt=\"\" href=\"object3.htm\">\n    </map>\n\n    <img ???=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "mapclick",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "rect",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "circle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "poly",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "rectangle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "polygon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "pentagon",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about create clickable image maps?\n\nPlace the shape value within the appropriate location to create the proper code.\n\n    <map name=\"objects\">\n     <area shape=\"???\"\n       coords=\"10,50,82,126\"\n       alt=\"\" href=\"object.htm\">\n    </map>\n\n    <img usemap=\"#objects\" src=\"#\" alt=\"\">\n",
    "text": "square",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "img",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "src",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "title",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "href",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "text",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "desc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add a visual tooltip when the cursor is over the image.\n\n`<??? ???=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "alt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "title",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "tooltip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "tool",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "tip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "t",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What adds a visual tooltip when the cursor is over the image?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "text",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "title",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "tooltip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "tip",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "t",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "text",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "alt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Do you know how to create a visual tooltip using just HTML?\n\nWhen the cursor is over the image, what code will add a visual tooltip?\n\n`<img src=\"logo.svg\" ???=\"Tooltip Text Here\">`\n",
    "text": "src",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "raster",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "vector",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "XML",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "compound",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "stereo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "HTML",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "SVX",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the image format with the most accurate description.\n\n??? = best for photographs and other information-dense images.\n??? = best for Logos, icons, and simple image patterns.\n\nGraphics that are created in the SVG format are defined by?\n\n???\n",
    "text": "Graphical data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "No, all images can be animated using CSS.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "No images can be animated using CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "Yes, but the web page will not validate.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "Yes, but not without numerous limitations.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Are GIF images the only image format that can be animated using CSS on a web page?\n\n???\n\nCan SVG images be directly inserted into an HTML page as code without linked to a standalone image file?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "audio",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "src",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "\"/music/good_enough.mp3\"",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "controls",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "/audio",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "href",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Add an audio player with controls for a single song:\n\n    <??? ???=??? ???>\n      <p>\n      If you are reading this,\n      it is because your browser does not\n      support the audio element.\n      </p>\n    <???>\n",
    "text": "alt",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert an audio file into the document?\n\n???\n",
    "text": "`<audio>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to insert an audio file into the document?\n\n???\n",
    "text": "`<mp3>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert an audio file into the document?\n\n???\n",
    "text": "`<sound>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert an audio file into the document?\n\n???\n",
    "text": "`<music>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert an audio file into the document?\n\n???\n",
    "text": "`<itunes>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the statement that is not true regarding the `<embed>` element:\n\n???\n",
    "text": "Plug-ins are supported on all mobile devices.  ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select the statement that is not true regarding the `<embed>` element:\n\n???\n",
    "text": "No closing tag is used.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the statement that is not true regarding the `<embed>` element:\n\n???\n",
    "text": "Introduced in HTML5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the statement that is not true regarding the `<embed>` element:\n\n???\n",
    "text": "used for embedding an external application",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the statement that is not true regarding the `<embed>` element:\n\n???\n",
    "text": "used for embedding plug-ins",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<embed>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<app>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<external>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<plugin>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<flash>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to define the container for an external app or plugin, like Adobe Flash?\n\n???\n",
    "text": "`<object>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": ".mp4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": ".webm",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": "h.246",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": "codec",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": ".mp3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Finish the sentence:\n\nIn order for videos today to be supports on all major web browsers you should use either the `???` or `???` format.\n",
    "text": ".oog",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<video>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<vid>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<media>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<youtube>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<stream>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is used to insert a movie clip or video stream into the document?\n\n???\n",
    "text": "`<movie>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about web videos?\n\nIf your video plays OK on your local computer, but doesn't play on the web server, what can fix this?\n\n???\n",
    "text": ".htaccess file adding video types needs to be added to server.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about web videos?\n\nIf your video plays OK on your local computer, but doesn't play on the web server, what can fix this?\n\n???\n",
    "text": "Hosting videos on your server will not be possible.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about web videos?\n\nIf your video plays OK on your local computer, but doesn't play on the web server, what can fix this?\n\n???\n",
    "text": "The video will be viewable by others, just not you.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about web videos?\n\nIf your video plays OK on your local computer, but doesn't play on the web server, what can fix this?\n\n???\n",
    "text": "The video file needs to be converted properly to be posted online.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about web videos?\n\nIf your video plays OK on your local computer, but doesn't play on the web server, what can fix this?\n\n???\n",
    "text": "Close the browser, reopen it, and test the video again.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "meta",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "author",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "content",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "John Doe",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "developer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "creator",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that states that 'John Doe' built the web page.\n\n    <??? ???=\"???\" \n        ???=\"???\">\n",
    "text": "person",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the creator of the web page?\n\n???\n",
    "text": "`<meta name=\"author\" content=\"John Doe\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code shares info about the creator of the web page?\n\n???\n",
    "text": "`<meta creator=\"author\" content=\"John Doe\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the creator of the web page?\n\n???\n",
    "text": "`<meta author=\"name\" content=\"John Doe\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the creator of the web page?\n\n???\n",
    "text": "`<meta name=\"author\" author=\"John Doe\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the creator of the web page?\n\n???\n",
    "text": "`<meta name=\"author\" creator=\"John Doe\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about meta-elements?\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Author",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about meta-elements?\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Title",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about meta-elements?\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Description",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about meta-elements?\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Headings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about meta-elements?\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Paragraphs  ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "meta",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "charset",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "utf-8",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "First line of code within the `<head>` element.",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "char",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "metatag",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "iso-8859-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "8-utf",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "First line of code in the document.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "Immediately after the DOCTYPE.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "Anywhere within the `<head>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "Last line of code within the `<head>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag for the necessary HTML5 character set.\n\n`<??? ???=\"???\">`\n\nAs a best practice, where is the HTML5 character set best placed?\n\n???\n",
    "text": "Anywhere before the first character in the document.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code provides the necessary HTML5 character set?\n\n???\n",
    "text": "`<meta charset=\"utf-8\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code provides the necessary HTML5 character set?\n\n???\n",
    "text": "`<meta charset=\"iso-8859-1\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code provides the necessary HTML5 character set?\n\n???\n",
    "text": "`<charset meta=\"utf-8\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code provides the necessary HTML5 character set?\n\n???\n",
    "text": "`<meta char=\"utf-8\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code provides the necessary HTML5 character set?\n\n???\n",
    "text": "`<meta character=\"utf-8\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about character encoding!\n\nThe `<meta charset=\"utf-8\">` will best help the browser understand which line of code?\n\n???\n",
    "text": "`<p>I love a good soufflé.<p>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Answer a quick question about character encoding!\n\nThe `<meta charset=\"utf-8\">` will best help the browser understand which line of code?\n\n???\n",
    "text": "`<p><sup>1 tsp.</sup> sugar<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about character encoding!\n\nThe `<meta charset=\"utf-8\">` will best help the browser understand which line of code?\n\n???\n",
    "text": "`<h3>The total cost was $24.50</h3>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about character encoding!\n\nThe `<meta charset=\"utf-8\">` will best help the browser understand which line of code?\n\n???\n",
    "text": "`<p>Bunt cake takes 3 c. flour<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "meta",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "description",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "content",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "metatag",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "desc",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "type",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code that provides info for search engines to review and display within the results:\n\n`<??? ???=\"???\" ???=\"This would be the write-up.\">`\n",
    "text": "info",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the website for search engines?\n\n???\n",
    "text": "`<meta name=\"description\" content=\"Info here.\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code shares info about the website for search engines?\n\n???\n",
    "text": "`<meta name=\"desc\" content=\"Info here.\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the website for search engines?\n\n???\n",
    "text": "`<meta content=\"description\" info=\"Info here.\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the website for search engines?\n\n???\n",
    "text": "`<desc meta=\"description\" content=\"Info here.\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code shares info about the website for search engines?\n\n???\n",
    "text": "`<meta name=\"description\" info=\"Info here.\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What makes a good meta description?\n\nChoose the best option from these:\n\n???\n",
    "text": "`<meta name=\"description\" content=\"Rescue puppies from your local shelter.\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What makes a good meta description?\n\nChoose the best option from these:\n\n???\n",
    "text": "`<meta name=\"description\" content=\"puppy dogs rescue local shelters adoption\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What makes a good meta description?\n\nChoose the best option from these:\n\n???\n",
    "text": "`<meta name=\"description\" content=\"http://www.puppyrescue.com\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What makes a good meta description?\n\nChoose the best option from these:\n\n???\n",
    "text": "`<meta name=\"description\" content=\"Austin, Texas\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "meta",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "http-equiv",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "refresh",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "content",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "30;",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "URL=redirectedpage.html",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "redirect",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that automatically redirects users from one webpage to another after 30 seconds.\n\n`<??? ????=\"???\" ???=\"??? ???\">`\n",
    "text": "<http://redirectedpage.html>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code automatically redirect users from one webpage to another after 45 seconds?\n\n???\n",
    "text": "`<meta http-equiv=\"refresh\" content=\"45; URL=redirectedpage.html\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code automatically redirect users from one webpage to another after 45 seconds?\n\n???\n",
    "text": "`<meta http-equiv=\"redirect\" content=\"45; URL=redirectedpage.html\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code automatically redirect users from one webpage to another after 45 seconds?\n\n???\n",
    "text": "`<meta http-equiv=\"refresh\" content=\".45; URL=redirectedpage.html\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code automatically redirect users from one webpage to another after 45 seconds?\n\n???\n",
    "text": "`<meta http-equiv=\"refresh\" content=\"45; http://redirectedpage.html\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code automatically redirect users from one webpage to another after 45 seconds?\n\n???\n",
    "text": "`<meta http-equiv=\"direct\" content=\"45; URL=redirectedpage.html\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML meta `http-equiv` attribute?\n\nThe easiest way to redirect a web page to another is using a meta redirect tag in the `<head>`, but is it the best way?\n\n    <meta\n      http-equiv=\"refresh\"\n      content=\"0;\n      URL=redirectedpage.html\">\n\n???\n",
    "text": "No",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the HTML meta `http-equiv` attribute?\n\nThe easiest way to redirect a web page to another is using a meta redirect tag in the `<head>`, but is it the best way?\n\n    <meta\n      http-equiv=\"refresh\"\n      content=\"0;\n      URL=redirectedpage.html\">\n\n???\n",
    "text": "Yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML meta `http-equiv` attribute?\n\nThe easiest way to redirect a web page to another is using a meta redirect tag in the `<head>`, but is it the best way?\n\n    <meta\n      http-equiv=\"refresh\"\n      content=\"0;\n      URL=redirectedpage.html\">\n\n???\n",
    "text": "There is an error in the sample code.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML meta `http-equiv` attribute?\n\nThe easiest way to redirect a web page to another is using a meta redirect tag in the `<head>`, but is it the best way?\n\n    <meta\n      http-equiv=\"refresh\"\n      content=\"0;\n      URL=redirectedpage.html\">\n\n???\n",
    "text": "This way doesn't work at all.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Keywords are fairly pointless today in helping search engines to properly identify and rank your web page.\n\n???\n",
    "text": "True",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Keywords are fairly pointless today in helping search engines to properly identify and rank your web page.\n\n???\n",
    "text": "False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tag is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Keywords",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which tag is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Title",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tag is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Description",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tag is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Headings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which tag is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Paragraphs",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about meta element tags!\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Keywords",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Answer a quick question about meta element tags!\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Title",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about meta element tags!\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Description",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about meta element tags!\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Headings",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about meta element tags!\n\nWhat is the least influential tag for search engines in a web page?\n\n???\n",
    "text": "Paragraphs  ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Some of the data can be displayed in the web page.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Google will ignore meta tags it doesn't recognize.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Are added to the `<head>` of nearly every web page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Are used to provide information to all sorts of clients.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Some specific data will display in search engine results.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Meta tags do all but which of the following:\n\n???\n",
    "text": "Some of the tags will help improve the pages SEO.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is used to provide search engines with information about the content/purpose of the web site?\n\n???\n",
    "text": "metatags",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is used to provide search engines with information about the content/purpose of the web site?\n\n???\n",
    "text": "cookies",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is used to provide search engines with information about the content/purpose of the web site?\n\n???\n",
    "text": "reach",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is used to provide search engines with information about the content/purpose of the web site?\n\n???\n",
    "text": "tracking",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is used to provide search engines with information about the content/purpose of the web site?\n\n???\n",
    "text": "declaration",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Title",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Description",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Robots",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Follow",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Advertise",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Keyword",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Facebook",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Twitter",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Answer a quick question about the HTML meta element!\n\nCan you name three types of the most common meta tags?\n\n1) ???\n2) ???\n3) ???\n",
    "text": "Google",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "meta",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "name",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "robots",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "content",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "noindex",
    "correct": true,
    "correctIndex": 4
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "nofollow",
    "correct": true,
    "correctIndex": 5
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "search",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "engines",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Write the meta tag that tells search engines not to index you webpage.\n\n`<??? ????=\"???\" ????=\"???, ???\">`\n",
    "text": "end",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code tells search engines not to index or scan your webpage?\n\n???\n",
    "text": "`<meta name=\"robots\" content=\"noindex, nofollow\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which line of code tells search engines not to index or scan your webpage?\n\n???\n",
    "text": "`<meta name=\"web\" content=\"noindex, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code tells search engines not to index or scan your webpage?\n\n???\n",
    "text": "`<meta name=\"index\" content=\"noindex, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code tells search engines not to index or scan your webpage?\n\n???\n",
    "text": "`<meta name=\"search\" content=\"noindex, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which line of code tells search engines not to index or scan your webpage?\n\n???\n",
    "text": "`<meta name=\"archive\" content=\"noindex, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML robots tag?\n\nWhat is the default value of the robots meta tag?\n\n???\n",
    "text": "`<meta name=\"robots\" content=\"index, follow\">`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the HTML robots tag?\n\nWhat is the default value of the robots meta tag?\n\n???\n",
    "text": "`<meta name=\"robots\" content=\"noindex, follow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML robots tag?\n\nWhat is the default value of the robots meta tag?\n\n???\n",
    "text": "`<meta name=\"robots\" content=\"index, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML robots tag?\n\nWhat is the default value of the robots meta tag?\n\n???\n",
    "text": "`<meta name=\"robots\" content=\"noindex, nofollow\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is a useful way of using a div container in a webpage?\n\n???\n",
    "text": "Generic content for stylistic purposes.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is a useful way of using a div container in a webpage?\n\n???\n",
    "text": "Primary content of a document",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is a useful way of using a div container in a webpage?\n\n???\n",
    "text": "Sub-sections of content",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is a useful way of using a div container in a webpage?\n\n???\n",
    "text": "Contact information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is a useful way of using a div container in a webpage?\n\n???\n",
    "text": "Forum posts",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<div>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<main>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<aside>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<article>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML element is best used here?\n\n    <body>\n      <TAG class=\"wrapper\">\n        <!--rest of site content-->\n      </TAG>\n    </body>\n\nTAG: ???\n",
    "text": "`<wrap>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you come across a website that uses this code, which statement is most appropriate?\n\n    <div class=\"nav\">...</nav>\n\n???\n",
    "text": "This code is not semantic and follows older HTML4 layouts.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If you come across a website that uses this code, which statement is most appropriate?\n\n    <div class=\"nav\">...</nav>\n\n???\n",
    "text": "Navigation buttons will typically be found within it.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you come across a website that uses this code, which statement is most appropriate?\n\n    <div class=\"nav\">...</nav>\n\n???\n",
    "text": "This code is not written properly and will fail validation.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you come across a website that uses this code, which statement is most appropriate?\n\n    <div class=\"nav\">...</nav>\n\n???\n",
    "text": "Multiple classes called \"nav\" can be added to various containers.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If you come across a website that uses this code, which statement is most appropriate?\n\n    <div class=\"nav\">...</nav>\n\n???\n",
    "text": "This most likely contains the primary navigation to the web page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<footer>` element is encouraged to contain which of the following?\n\n???\n",
    "text": "copyright or contact information, links to related or to the top of the page and sitemap",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `<footer>` element is encouraged to contain which of the following?\n\n???\n",
    "text": "additional `<footer>` elements and to be added within `<header>` element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<footer>` element is encouraged to contain which of the following?\n\n???\n",
    "text": "display one or more heading (h1-h6) elements be used only once in a page for validation.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<footer>` element is encouraged to contain which of the following?\n\n???\n",
    "text": "hold a graphical logo or an image, passwords and/or other sensitive data",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<footer>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<foot>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<bottom>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<main>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which container is best to organize the top of a web page or content section?\n\n???\n",
    "text": "`<nav>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "crucial information",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "copyright information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "contact information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "links to related pages",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "link back to top of page",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<footer>` HTML element?\n\nThe HTML `<footer>` element should NOT contain what?\n\n???\n",
    "text": "sitemap",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<header>` element is encouraged to do which of the following?\n\n???\n",
    "text": "All four",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `<header>` element is encouraged to do which of the following?\n\n???\n",
    "text": "contain website navigation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<header>` element is encouraged to do which of the following?\n\n???\n",
    "text": "display one or more heading (h1-h6) elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<header>` element is encouraged to do which of the following?\n\n???\n",
    "text": "hold a graphical logo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<header>` element is encouraged to do which of the following?\n\n???\n",
    "text": "display authorship information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "be added within a `<footer>` element.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "contain website navigation",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "display one or more heading (h1-h6) elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "hold a graphical logo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "display authorship information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Anwer a quick question about the `<header>` element!\n\nThe HTML `<header>` element cannot what?\n\n???\n",
    "text": "have multiple `<header>` elements within the same doc.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<main>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<nav>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<head>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<footer>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<one>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should only be used once within a page layout?\n\n???\n",
    "text": "`<solo>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<main>` container?\n\n???\n",
    "text": "Yes, but it will fail validation.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can a webpage contain more than one `<main>` container?\n\n???\n",
    "text": "Yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<main>` container?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML `<main>` element?\n\nSelect which of the following items should be contained within a `<main>` container?\n\n???\n",
    "text": "body content",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the HTML `<main>` element?\n\nSelect which of the following items should be contained within a `<main>` container?\n\n???\n",
    "text": "webpage logo",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML `<main>` element?\n\nSelect which of the following items should be contained within a `<main>` container?\n\n???\n",
    "text": "navigation links",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML `<main>` element?\n\nSelect which of the following items should be contained within a `<main>` container?\n\n???\n",
    "text": "copyright information",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML `<main>` element?\n\nSelect which of the following items should be contained within a `<main>` container?\n\n???\n",
    "text": "search forms",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the item that would be useful placing within a `<nav>` container.\n\n???\n",
    "text": "Navigational links",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Select the item that would be useful placing within a `<nav>` container.\n\n???\n",
    "text": "Link to Email",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the item that would be useful placing within a `<nav>` container.\n\n???\n",
    "text": "Links within main content",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the item that would be useful placing within a `<nav>` container.\n\n???\n",
    "text": "Tags in a blog post",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Select the item that would be useful placing within a `<nav>` container.\n\n???\n",
    "text": "Image Links",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "Yes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "No",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "Yes, but it will fail validation.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "No",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "Yes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Can a webpage contain more than one `<nav>` container?\n\n???\n\nShould all links within a webpage be placed within a `<nav>` element?\n\n???\n",
    "text": "No, but it will fail validation.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<nav>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<navigation>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<header>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<navigate>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<navi>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<menu>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Quick question about organizing buttons in HTML?\n\nWhich container is best to organize the buttons that link the primary pages of the website?\n\n???\n",
    "text": "`<buttons>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<article>` element can contain which of the following?\n\n???\n",
    "text": "All 4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `<article>` element can contain which of the following?\n\n???\n",
    "text": "Forum post",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<article>` element can contain which of the following?\n\n???\n",
    "text": "Blog post",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<article>` element can contain which of the following?\n\n???\n",
    "text": "News story",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<article>` element can contain which of the following?\n\n???\n",
    "text": "Magazine",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<article>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<blog>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<comment>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<news>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<record>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element should be used to hold independent, self-contained content that is possible to share on its own outside the website?\n\n???\n",
    "text": "`<forum>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<article>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<main>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<comment>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<news>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<aside>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the HTML sectioning elements?\n\nWhich HTML container would be best when used on its own in a feed reader?\n\n???\n",
    "text": "`<forum>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content would be well placed within an aside?\n\n???\n",
    "text": "all 4",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What content would be well placed within an aside?\n\n???\n",
    "text": "pull quotes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content would be well placed within an aside?\n\n???\n",
    "text": "sidebar",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content would be well placed within an aside?\n\n???\n",
    "text": "advertising",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What content would be well placed within an aside?\n\n???\n",
    "text": "groups of `<nav>` elements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<aside>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<article>`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<comment>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<news>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<record>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "`<forum>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "False",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which HTML container element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content?\n\n???\n\nAn `<aside>` should usually contain a navigation list on either the left- or right-hand side of the webpage.\n\n???\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML container elements?\n\nWhat container element would best be used here?\n\n    <p>\n      My family and I visited\n      the Louvre this summer.\n    </p>\n    <TAG>\n      <h4>Louvre Museum</h4>\n      <p>\n        The Louvre Museum is the world's\n        largest art museum in Paris, France.\n      </p>\n    </TAG>\n\nTAG: ???\n",
    "text": "`<aside>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about HTML container elements?\n\nWhat container element would best be used here?\n\n    <p>\n      My family and I visited\n      the Louvre this summer.\n    </p>\n    <TAG>\n      <h4>Louvre Museum</h4>\n      <p>\n        The Louvre Museum is the world's\n        largest art museum in Paris, France.\n      </p>\n    </TAG>\n\nTAG: ???\n",
    "text": "`<main>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML container elements?\n\nWhat container element would best be used here?\n\n    <p>\n      My family and I visited\n      the Louvre this summer.\n    </p>\n    <TAG>\n      <h4>Louvre Museum</h4>\n      <p>\n        The Louvre Museum is the world's\n        largest art museum in Paris, France.\n      </p>\n    </TAG>\n\nTAG: ???\n",
    "text": "`<block>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML container elements?\n\nWhat container element would best be used here?\n\n    <p>\n      My family and I visited\n      the Louvre this summer.\n    </p>\n    <TAG>\n      <h4>Louvre Museum</h4>\n      <p>\n        The Louvre Museum is the world's\n        largest art museum in Paris, France.\n      </p>\n    </TAG>\n\nTAG: ???\n",
    "text": "`<article>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about HTML container elements?\n\nWhat container element would best be used here?\n\n    <p>\n      My family and I visited\n      the Louvre this summer.\n    </p>\n    <TAG>\n      <h4>Louvre Museum</h4>\n      <p>\n        The Louvre Museum is the world's\n        largest art museum in Paris, France.\n      </p>\n    </TAG>\n\nTAG: ???\n",
    "text": "`<section>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "figure",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "figcaption",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "annotate",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "reference",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "caption",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Match the code with the tags to properly define a caption for the photo.\n\n    <tag1>\n      <img src=\"waterfall.jpg\"\n      alt=\"Seljalandsfoss waterfall\n           in Iceland\">\n      <tag2>\n        The Seljalandsfoss waterfall\n        in Iceland.\n      Original by\n        <a href=\"http://www.flickr.com\n                /photos/enki/\">\n           Enki Pro\n        </a>\n      </tag2>\n    </tag1>\n\ntag1 = ???\ntag2 = ???\n",
    "text": "figtitle",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use ??? when the content is related, but not required to follow along.\nUse ??? when the content is required to follow along, but it can be placed anywhere in the flow of the content.\nUse ??? when the content is required and the position is important in the context of the content.\n",
    "text": "`<aside>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Use ??? when the content is related, but not required to follow along.\nUse ??? when the content is required to follow along, but it can be placed anywhere in the flow of the content.\nUse ??? when the content is required and the position is important in the context of the content.\n",
    "text": "`<figure>`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Use ??? when the content is related, but not required to follow along.\nUse ??? when the content is required to follow along, but it can be placed anywhere in the flow of the content.\nUse ??? when the content is required and the position is important in the context of the content.\n",
    "text": "`<div>`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Use ??? when the content is related, but not required to follow along.\nUse ??? when the content is required to follow along, but it can be placed anywhere in the flow of the content.\nUse ??? when the content is required and the position is important in the context of the content.\n",
    "text": "`<content>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Use ??? when the content is related, but not required to follow along.\nUse ??? when the content is required to follow along, but it can be placed anywhere in the flow of the content.\nUse ??? when the content is required and the position is important in the context of the content.\n",
    "text": "`<article>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which DOCTYPE is needed for viewing HTML5 webpages?\n\n???\n",
    "text": "`<!DOCTYPE html>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which DOCTYPE is needed for viewing HTML5 webpages?\n\n???\n",
    "text": "`<!DOCTYPE html5>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which DOCTYPE is needed for viewing HTML5 webpages?\n\n???\n",
    "text": "`<!DOCTYPE HTML5>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which DOCTYPE is needed for viewing HTML5 webpages?\n\n???\n",
    "text": "`<!DOCTYPE \"html\">`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which DOCTYPE is needed for viewing HTML5 webpages?\n\n???\n",
    "text": "`<!DOCTYPE html en>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these statements is not correct about the `<!DOCTYPE html>`?\n\n???\n",
    "text": "It is an HTML element.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of these statements is not correct about the `<!DOCTYPE html>`?\n\n???\n",
    "text": "It is written as the very first line of the file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these statements is not correct about the `<!DOCTYPE html>`?\n\n???\n",
    "text": "It tells the browser what version the code is written in.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these statements is not correct about the `<!DOCTYPE html>`?\n\n???\n",
    "text": "It is required for every web page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these statements is not correct about the `<!DOCTYPE html>`?\n\n???\n",
    "text": "It can be written in both uppercase or lowercase.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which item should NOT be contained in the `<head>` element?\n\n???\n",
    "text": "Primary heading of a page",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which item should NOT be contained in the `<head>` element?\n\n???\n",
    "text": "Web page title",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which item should NOT be contained in the `<head>` element?\n\n???\n",
    "text": "Character encoding language",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which item should NOT be contained in the `<head>` element?\n\n???\n",
    "text": "Page descriptions for search engines",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which item should NOT be contained in the `<head>` element?\n\n???\n",
    "text": "Links to CSS and JS files",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<head>` of web pages can contain all but one of these, which one?\n\n???\n",
    "text": "Web page logo",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `<head>` of web pages can contain all but one of these, which one?\n\n???\n",
    "text": "Web page title",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<head>` of web pages can contain all but one of these, which one?\n\n???\n",
    "text": "Character encoding language",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<head>` of web pages can contain all but one of these, which one?\n\n???\n",
    "text": "Page descriptions for search engines",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `<head>` of web pages can contain all but one of these, which one?\n\n???\n",
    "text": "Links to CSS and JS files",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<head>` HTML element?\n\nWhat order is recommended for adding CSS & JS in the `<head>` of an HTML page?\n\n???\n",
    "text": "CSS first, then JS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about the `<head>` HTML element?\n\nWhat order is recommended for adding CSS & JS in the `<head>` of an HTML page?\n\n???\n",
    "text": "JS first, then CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<head>` HTML element?\n\nWhat order is recommended for adding CSS & JS in the `<head>` of an HTML page?\n\n???\n",
    "text": "CSS only, never JS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about the `<head>` HTML element?\n\nWhat order is recommended for adding CSS & JS in the `<head>` of an HTML page?\n\n???\n",
    "text": "JS only, never CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is meant by the html element being the root of an HTML page?\n\n???\n",
    "text": "It's the single HTML element that contains every other HTML element.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is meant by the html element being the root of an HTML page?\n\n???\n",
    "text": "It is the deepest node of a tree of HTML nodes.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is meant by the html element being the root of an HTML page?\n\n???\n",
    "text": "It represents every HTML attribute specified.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is meant by the html element being the root of an HTML page?\n\n???\n",
    "text": "It provides a simple fix to the issues of the browser wars of the 1990s.  ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`<html>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`html`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`<head>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`<body>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`<root>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`tree`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`head`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the root element of an HTML document?\n\n???\n\nWhat HTML element is best to assign the document’s primary language?\n\n`<??? lang=\"en-GB\">`\n",
    "text": "`body`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "`<html>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "`<body>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "`<head>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "`<main>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "`<root>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about using CSS with HTML?\n\nUsing a `:root` selector in CSS will target which HTML element?\n\n???\n",
    "text": "every HTML element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of these elements is implied even if the string is not located in the markup?\n\n???\n",
    "text": "`<html>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which one of these elements is implied even if the string is not located in the markup?\n\n???\n",
    "text": "`<audio>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of these elements is implied even if the string is not located in the markup?\n\n???\n",
    "text": "`<link>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which one of these elements is implied even if the string is not located in the markup?\n\n???\n",
    "text": "`<mainelement>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which page structure is recommended by Google for HTML5 pages today?\n\n    ---------Option 1--------------\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Option #1</title>\n      </head>\n      <body>\n        <p>Hello.</p>\n      </body>\n    </html>\n\n    ---------Option 2--------------\n    <!DOCTYPE html>\n    <title>Option #2</title>\n    <p>Hello.\n\n???\n",
    "text": "Option 1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which page structure is recommended by Google for HTML5 pages today?\n\n    ---------Option 1--------------\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Option #1</title>\n      </head>\n      <body>\n        <p>Hello.</p>\n      </body>\n    </html>\n\n    ---------Option 2--------------\n    <!DOCTYPE html>\n    <title>Option #2</title>\n    <p>Hello.\n\n???\n",
    "text": "Option 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about optional elements?\n\nWhat are optional elements?\n\n???\n",
    "text": "Elements where either the starting, ending or both tags may be omitted.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How much do you know about optional elements?\n\nWhat are optional elements?\n\n???\n",
    "text": "Elements that are always there, even if the code for them isn't.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about optional elements?\n\nWhat are optional elements?\n\n???\n",
    "text": "Elements that have different options within them.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How much do you know about optional elements?\n\nWhat are optional elements?\n\n???\n",
    "text": "Optional elements is just a name for HTML elements.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which keyword determines the actions an element should follow during the animation?\n\n???\n",
    "text": "`keyframes`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which keyword determines the actions an element should follow during the animation?\n\n???\n",
    "text": "`animation`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which keyword determines the actions an element should follow during the animation?\n\n???\n",
    "text": "`actions`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which keyword determines the actions an element should follow during the animation?\n\n???\n",
    "text": "`move`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "keyframes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "animation",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "sequence",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "transition",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "movements",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "frames",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "There are two main properties when it comes to animating.\n\n??? are the actions an element should follow throughout the animation.\n\n??? is how an element should transition (duration, speed).\n",
    "text": "splits",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property is used to chain animations?\n\n???\n",
    "text": "animation-delay",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What property is used to chain animations?\n\n???\n",
    "text": "animation-chained",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property is used to chain animations?\n\n???\n",
    "text": "delay",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What property is used to chain animations?\n\n???\n",
    "text": "animation-chain",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property can be used to chain animations together?\n\n???\n",
    "text": "`animation-delay`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which CSS property can be used to chain animations together?\n\n???\n",
    "text": "`animation-chain`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property can be used to chain animations together?\n\n???\n",
    "text": "`animation-hold`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property can be used to chain animations together?\n\n???\n",
    "text": "`animation-pause`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what way does `will-animate` make your pages run faster? ???\n",
    "text": "It makes animations run faster.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In what way does `will-animate` make your pages run faster? ???\n",
    "text": "It makes code faster.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In what way does `will-animate` make your pages run faster? ???\n",
    "text": "It helps people read your page faster.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following examples are using the CSS `transition` property with the transition values in the correct order? ???\n\n```css\n// Option A\ntransition: background .2s linear;\n\n// Option B\ntransition: .2s linear background;\n\n// Option C\ntransition: linear background .2s;\n```\n",
    "text": "Option A",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following examples are using the CSS `transition` property with the transition values in the correct order? ???\n\n```css\n// Option A\ntransition: background .2s linear;\n\n// Option B\ntransition: .2s linear background;\n\n// Option C\ntransition: linear background .2s;\n```\n",
    "text": "Option B",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following examples are using the CSS `transition` property with the transition values in the correct order? ???\n\n```css\n// Option A\ntransition: background .2s linear;\n\n// Option B\ntransition: .2s linear background;\n\n// Option C\ntransition: linear background .2s;\n```\n",
    "text": "Option C",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`animation-play-state`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`paused`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`animation-delay`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`-4`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`stop`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pause the animation at second 4:\n\n```css\n.debugAnimation{\n  animation: animate 6s\n             linear infinite;\n  ???: ???;\n  ???: ???;\n```\n",
    "text": "`animation-time`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following lines of code is the line using an animation delay to help with debugging:\n\n```css\nanimation-play-state: wait;\nanimation-play-state: freeze;\nanimation-play-state: paused;\n```\n\n???\n",
    "text": "Line 3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following lines of code is the line using an animation delay to help with debugging:\n\n```css\nanimation-play-state: wait;\nanimation-play-state: freeze;\nanimation-play-state: paused;\n```\n\n???\n",
    "text": "Line 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following lines of code is the line using an animation delay to help with debugging:\n\n```css\nanimation-play-state: wait;\nanimation-play-state: freeze;\nanimation-play-state: paused;\n```\n\n???\n",
    "text": "Line 1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the shorthand declaration, where is the style of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the shorthand declaration, where is the style of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the shorthand declaration, where is the style of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the shorthand declaration, where is the color of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the shorthand declaration, where is the color of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the shorthand declaration, where is the color of the border located?\n\n    border: 1 2 3;\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the `padding` shorthand declaration, which value is the `padding-left`?\n\n    padding: 10px 0px 13px 5px;\n\n???\n",
    "text": "Fourth ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the `padding` shorthand declaration, which value is the `padding-left`?\n\n    padding: 10px 0px 13px 5px;\n\n???\n",
    "text": "First",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the `padding` shorthand declaration, which value is the `padding-left`?\n\n    padding: 10px 0px 13px 5px;\n\n???\n",
    "text": "Second",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the `padding` shorthand declaration, which value is the `padding-left`?\n\n    padding: 10px 0px 13px 5px;\n\n???\n",
    "text": "Third",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The ??? property expands the borders of the element, while ??? property pushes it from other adjacent ones.\n",
    "text": "padding",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The ??? property expands the borders of the element, while ??? property pushes it from other adjacent ones.\n",
    "text": "margin",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "The ??? property expands the borders of the element, while ??? property pushes it from other adjacent ones.\n",
    "text": "border",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The ??? property expands the borders of the element, while ??? property pushes it from other adjacent ones.\n",
    "text": "box",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the inside-out order for the *box model* components?\n\n???\n",
    "text": "Content/Padding/Border/Margin",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is the inside-out order for the *box model* components?\n\n???\n",
    "text": "Content/Border/Padding/Margin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the inside-out order for the *box model* components?\n\n???\n",
    "text": "Padding/Content/Border/Margin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the inside-out order for the *box model* components?\n\n???\n",
    "text": "Content/Padding/Margin/Border",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "are you familiar with the box model?\n\nWhat’s the correct outside-in order of the elements contained by the Box Model?\n\n ???\n",
    "text": "Margin/Border/Padding/Content",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "are you familiar with the box model?\n\nWhat’s the correct outside-in order of the elements contained by the Box Model?\n\n ???\n",
    "text": "Border/Margin/Padding/Content",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "are you familiar with the box model?\n\nWhat’s the correct outside-in order of the elements contained by the Box Model?\n\n ???\n",
    "text": "Margin/Padding/Border/Content",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "are you familiar with the box model?\n\nWhat’s the correct outside-in order of the elements contained by the Box Model?\n\n ???\n",
    "text": "Content/Border/Margin/Padding",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains both the content and the padding?\n\n    box-sizing: ???;\n",
    "text": "`padding-box`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains both the content and the padding?\n\n    box-sizing: ???;\n",
    "text": "`border-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains both the content and the padding?\n\n    box-sizing: ???;\n",
    "text": "`content-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains both the content and the padding?\n\n    box-sizing: ???;\n",
    "text": "`margin-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains the content, the padding and the border?\n\n    box-sizing: ???;\n",
    "text": "`border-box`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains the content, the padding and the border?\n\n    box-sizing: ???;\n",
    "text": "`padding-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains the content, the padding and the border?\n\n    box-sizing: ???;\n",
    "text": "`content-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which `box-sizing` value, the `width` property contains the content, the padding and the border?\n\n    box-sizing: ???;\n",
    "text": "`margin-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements does not accept top and bottom margin?\n\n???\n",
    "text": "Inline",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following elements does not accept top and bottom margin?\n\n???\n",
    "text": "Block",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements does not accept top and bottom margin?\n\n???\n",
    "text": "Inline-block",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements does not accept top and bottom margin?\n\n???\n",
    "text": "Those that have `display:none`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How does `display:none` affect the element's descendants?\n\n???\n",
    "text": "They won't be displayed either.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How does `display:none` affect the element's descendants?\n\n???\n",
    "text": "It does not affect them.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How does `display:none` affect the element's descendants?\n\n???\n",
    "text": "They will be invisible, but clickable.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n#class {\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n}\n```\n",
    "text": "Horizontally centres a block with an unknown width.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n#class {\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n}\n```\n",
    "text": "Horizontally flips a block with an unknown width.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n#class {\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n}\n```\n",
    "text": "Sets a blocks left side to be 50% across the document.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n#class {\n   position: absolute;\n   left: 50%;\n   transform: translateX(-50%);\n}\n```\n",
    "text": "Sets the blocks position to absolute and flips it horizontally.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n#class {\n   width: 960px;\n   margin: 0 auto;\n}\n```\n",
    "text": "Horizontally centres a block element with a known width.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n#class {\n   width: 960px;\n   margin: 0 auto;\n}\n```\n",
    "text": "Gets rid of the margin.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n#class {\n   width: 960px;\n   margin: 0 auto;\n}\n```\n",
    "text": "Vertically centres a block element with a known width.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n#class {\n   width: 960px;\n   margin: 0 auto;\n}\n```\n",
    "text": "Horizontally centres a block element with an unknown width.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n}\n```\n",
    "text": "Vertically centres a fluid block.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n}\n```\n",
    "text": "Vertically flips a fluid block.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n}\n```\n",
    "text": "Sets a blocks top side to be 50% of the way up the document.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   transform: translateY(-50%);\n}\n```\n",
    "text": "Sets the blocks position to absolute and flips it vertically.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   height: 400px;\n   margin-top: -200px;\n}\n```\n",
    "text": "Vertically centres a block element with a known height.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   height: 400px;\n   margin-top: -200px;\n}\n```\n",
    "text": "Vertically centres a block element with unknown height.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   height: 400px;\n   margin-top: -200px;\n}\n```\n",
    "text": "Horizontally centres a block element with a known height.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\n#class {\n   position: absolute;\n   top: 50%;\n   height: 400px;\n   margin-top: -200px;\n}\n```\n",
    "text": "Horizontally centres a block element with unknown height.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can verically-center elements inside a flex container with:\n\n    .container{\n     display: flex;\n     ??? : ???;\n    }\n",
    "text": "`align-items`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You can verically-center elements inside a flex container with:\n\n    .container{\n     display: flex;\n     ??? : ???;\n    }\n",
    "text": "`center`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "You can verically-center elements inside a flex container with:\n\n    .container{\n     display: flex;\n     ??? : ???;\n    }\n",
    "text": "`justify-content`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can verically-center elements inside a flex container with:\n\n    .container{\n     display: flex;\n     ??? : ???;\n    }\n",
    "text": "`vertical-center`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You can verically-center elements inside a flex container with:\n\n    .container{\n     display: flex;\n     ??? : ???;\n    }\n",
    "text": "`flex-center`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the following example, what is the distance between the first and the second line, if the text spreads on two lines?\n\n```css\n.vertical-center-text{\n  height: 50px;\n  line-height: 50px;\n```\n\n???\n",
    "text": "`50px`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the following example, what is the distance between the first and the second line, if the text spreads on two lines?\n\n```css\n.vertical-center-text{\n  height: 50px;\n  line-height: 50px;\n```\n\n???\n",
    "text": "`25px`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the following example, what is the distance between the first and the second line, if the text spreads on two lines?\n\n```css\n.vertical-center-text{\n  height: 50px;\n  line-height: 50px;\n```\n\n???\n",
    "text": "`5px`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following CSS code snippets will vertically centre a line of text?\n\n```css\n/* Option a */\n.vertical-center {\n   centre: true;\n   height: 20px;\n\n/* Option b */\n.vertical-center {\n   height: 28px;\n   line-height: 28px;\n\n/* Option c */\n.vertical-center {\n   height: 12px;\n   line-height: 100%;\n   centre:true\n}\n```\n\n???\n",
    "text": "b",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following CSS code snippets will vertically centre a line of text?\n\n```css\n/* Option a */\n.vertical-center {\n   centre: true;\n   height: 20px;\n\n/* Option b */\n.vertical-center {\n   height: 28px;\n   line-height: 28px;\n\n/* Option c */\n.vertical-center {\n   height: 12px;\n   line-height: 100%;\n   centre:true\n}\n```\n\n???\n",
    "text": "a",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following CSS code snippets will vertically centre a line of text?\n\n```css\n/* Option a */\n.vertical-center {\n   centre: true;\n   height: 20px;\n\n/* Option b */\n.vertical-center {\n   height: 28px;\n   line-height: 28px;\n\n/* Option c */\n.vertical-center {\n   height: 12px;\n   line-height: 100%;\n   centre:true\n}\n```\n\n???\n",
    "text": "c",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `currentColor` property in CSS do? ???\n",
    "text": "Reuse's the calculated value of the element's colour property.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the `currentColor` property in CSS do? ???\n",
    "text": "Sets colour equal to the most used colour in the stylesheet.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `currentColor` property in CSS do? ???\n",
    "text": "Sets colour equal to the least used colour in the stylesheet.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code do? ???\n\n```css\nlabel {\n   border: 2px dotted transparent;\n}\n\nlabel:hover {\n   border-color: black\n}\n```\n",
    "text": "Makes the border black instead of transparent when the label is hovered over.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code do? ???\n\n```css\nlabel {\n   border: 2px dotted transparent;\n}\n\nlabel:hover {\n   border-color: black\n}\n```\n",
    "text": "Makes the border transparent instead of block when the label is hovered over.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code do? ???\n\n```css\nlabel {\n   border: 2px dotted transparent;\n}\n\nlabel:hover {\n   border-color: black\n}\n```\n",
    "text": "Makes the label solid instead of transparent when hovered over.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code do? ???\n\n```css\nlabel {\n   border: 2px dotted transparent;\n}\n\nlabel:hover {\n   border-color: black\n}\n```\n",
    "text": "Makes the label disappear when hovered over.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For `rgba()` colour values, what do the four values stand for, in order? ???\n\n```css\n/* For example */\ncolor: rgba(12, 255, 40, 0.3);\n```\n",
    "text": "Red, Green, Blue, Alpha",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For `rgba()` colour values, what do the four values stand for, in order? ???\n\n```css\n/* For example */\ncolor: rgba(12, 255, 40, 0.3);\n```\n",
    "text": "Red, Blue, Green, Alpha",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For `rgba()` colour values, what do the four values stand for, in order? ???\n\n```css\n/* For example */\ncolor: rgba(12, 255, 40, 0.3);\n```\n",
    "text": "Green, Blue, Red, Alpha",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For `rgba()` colour values, what do the four values stand for, in order? ???\n\n```css\n/* For example */\ncolor: rgba(12, 255, 40, 0.3);\n```\n",
    "text": "Blue, Red, Green, Alpha",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`9`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`F`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`10`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`G`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Hexadecimal numbers run from 0 to ???, and from A to ???.\n",
    "text": "`Z`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these hexadecimal colors are not the same?\n\n???\n",
    "text": "#FFFFF and #FFF",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of these hexadecimal colors are not the same?\n\n???\n",
    "text": "#FFF and #FFFFFF",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of these hexadecimal colors are not the same?\n\n???\n",
    "text": "#FFC125 and #ffc125",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to change an images hue to match a websites color theme:\n\n```css\nfilter: sepia(1.0)\n        ???(250deg);\n```\n",
    "text": "`hue-rotate`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to change an images hue to match a websites color theme:\n\n```css\nfilter: sepia(1.0)\n        ???(250deg);\n```\n",
    "text": "`hue`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to change an images hue to match a websites color theme:\n\n```css\nfilter: sepia(1.0)\n        ???(250deg);\n```\n",
    "text": "`hue-diff`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to change an images hue to match a websites color theme:\n\n```css\nfilter: sepia(1.0)\n        ???(250deg);\n```\n",
    "text": "`hue-change`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the tool called which calculates which prefixes are required and which are outdated? ???\n",
    "text": "`Autoprefixer`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the tool called which calculates which prefixes are required and which are outdated? ???\n",
    "text": "`Prefixer`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the tool called which calculates which prefixes are required and which are outdated? ???\n",
    "text": "`Webkitprefixer`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`rotate`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`-45deg`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`translate`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`45%`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`-45%`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`90deg`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the missing values required to transform a diamond into a square?\n\n```css\n#transform {\n   transform: ???(???);\n}\n```\n",
    "text": "`center`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape would the following CSS produce? ???\n\n```css\n#shape {\n   width: 0;\n   height: 0;\n   border-left: 80px solid transparent;\n   border-right: 80px solid transparent;\n   border-top: 80px solid red;\n   border-bottom: 80px solid transparent;\n}\n```\n",
    "text": "A triangle.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What shape would the following CSS produce? ???\n\n```css\n#shape {\n   width: 0;\n   height: 0;\n   border-left: 80px solid transparent;\n   border-right: 80px solid transparent;\n   border-top: 80px solid red;\n   border-bottom: 80px solid transparent;\n}\n```\n",
    "text": "A square.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape would the following CSS produce? ???\n\n```css\n#shape {\n   width: 0;\n   height: 0;\n   border-left: 80px solid transparent;\n   border-right: 80px solid transparent;\n   border-top: 80px solid red;\n   border-bottom: 80px solid transparent;\n}\n```\n",
    "text": "A circle.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape would the following CSS produce? ???\n\n```css\n#shape {\n   width: 0;\n   height: 0;\n   border-left: 80px solid transparent;\n   border-right: 80px solid transparent;\n   border-top: 80px solid red;\n   border-bottom: 80px solid transparent;\n}\n```\n",
    "text": "A rectangle.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two properties have to be combined in order for you to be able to wrap text around a shape?\n\n???\n",
    "text": "clip-path and shape-outside",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which two properties have to be combined in order for you to be able to wrap text around a shape?\n\n???\n",
    "text": "clip-path and inset",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two properties have to be combined in order for you to be able to wrap text around a shape?\n\n???\n",
    "text": "inset and shape-outside",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two properties have to be combined in order for you to be able to wrap text around a shape?\n\n???\n",
    "text": "path-wrap and shape-wrap",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape does the following piece of code make? ???\n\n```css\ndiv {\n  width: 200px;\n  height: 200px;\n  background-color: #66ff33;\n  clip-path: polygon\n             (0% 100%, 100% 100%, 0% 0%);\n}\n```\n",
    "text": "A triangle.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What shape does the following piece of code make? ???\n\n```css\ndiv {\n  width: 200px;\n  height: 200px;\n  background-color: #66ff33;\n  clip-path: polygon\n             (0% 100%, 100% 100%, 0% 0%);\n}\n```\n",
    "text": "A hexagon.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape does the following piece of code make? ???\n\n```css\ndiv {\n  width: 200px;\n  height: 200px;\n  background-color: #66ff33;\n  clip-path: polygon\n             (0% 100%, 100% 100%, 0% 0%);\n}\n```\n",
    "text": "A square.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What shape does the following piece of code make? ???\n\n```css\ndiv {\n  width: 200px;\n  height: 200px;\n  background-color: #66ff33;\n  clip-path: polygon\n             (0% 100%, 100% 100%, 0% 0%);\n}\n```\n",
    "text": "An octagon.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `shape-outside` property only works on elements with the property of ??? applied onto it.\n",
    "text": "float",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `shape-outside` property only works on elements with the property of ??? applied onto it.\n",
    "text": "clear",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `shape-outside` property only works on elements with the property of ??? applied onto it.\n",
    "text": "fixed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `shape-outside` property only works on elements with the property of ??? applied onto it.\n",
    "text": "shape",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `shape-outside` property only works on elements with the property of ??? applied onto it.\n",
    "text": "alter",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the `shape-outside` property to work, which property must have been applied to it? ???\n",
    "text": "`float`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For the `shape-outside` property to work, which property must have been applied to it? ???\n",
    "text": "`hover`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the `shape-outside` property to work, which property must have been applied to it? ???\n",
    "text": "`sticky`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the `shape-outside` property to work, which property must have been applied to it? ???\n",
    "text": "`absolute`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the `shape-outside` property to work, which property must have been applied to it? ???\n",
    "text": "`relative`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you restart an animation?\n\n    .animation:hover{\n      ???:\n            ???;\n",
    "text": "`animation-play-state`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How do you restart an animation?\n\n    .animation:hover{\n      ???:\n            ???;\n",
    "text": "`running`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How do you restart an animation?\n\n    .animation:hover{\n      ???:\n            ???;\n",
    "text": "`play`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you restart an animation?\n\n    .animation:hover{\n      ???:\n            ???;\n",
    "text": "`start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How do you restart an animation?\n\n    .animation:hover{\n      ???:\n            ???;\n",
    "text": "`animation-state`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two states which can pause or play CSS animations? \n\n???\n",
    "text": "Paused and running.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the two states which can pause or play CSS animations? \n\n???\n",
    "text": "Start and stop.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two states which can pause or play CSS animations? \n\n???\n",
    "text": "Paused and playing.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the two states which can pause or play CSS animations? \n\n???\n",
    "text": "Running and stop.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the HTML snippet to import an external CSS file:\n\n    <head>\n      <??? ???=\"stylesheet\"\n               ???=\"index.css\" />\n    </head>\n",
    "text": "`link`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the HTML snippet to import an external CSS file:\n\n    <head>\n      <??? ???=\"stylesheet\"\n               ???=\"index.css\" />\n    </head>\n",
    "text": "`rel`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the HTML snippet to import an external CSS file:\n\n    <head>\n      <??? ???=\"stylesheet\"\n               ???=\"index.css\" />\n    </head>\n",
    "text": "`href`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the HTML snippet to import an external CSS file:\n\n    <head>\n      <??? ???=\"stylesheet\"\n               ???=\"index.css\" />\n    </head>\n",
    "text": "`import`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the HTML snippet to import an external CSS file:\n\n    <head>\n      <??? ???=\"stylesheet\"\n               ???=\"index.css\" />\n    </head>\n",
    "text": "`name`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the recommended way of applying CSS?\n\n???\n",
    "text": "External file.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the recommended way of applying CSS?\n\n???\n",
    "text": "Internal CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the recommended way of applying CSS?\n\n???\n",
    "text": "Inline CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If *purple* is the combination of *red* and *blue*, which of the following is not representing purple?\n\n???\n",
    "text": "#00ffff",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If *purple* is the combination of *red* and *blue*, which of the following is not representing purple?\n\n???\n",
    "text": "#ff00ff",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If *purple* is the combination of *red* and *blue*, which of the following is not representing purple?\n\n???\n",
    "text": "rgb(255,0,255)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If *purple* is the combination of *red* and *blue*, which of the following is not representing purple?\n\n???\n",
    "text": "purple",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\np#myParagraph .class1 div.class2 {}\n```\n\n???\n",
    "text": "0-1-2-2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\np#myParagraph .class1 div.class2 {}\n```\n\n???\n",
    "text": "0-1-2-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\np#myParagraph .class1 div.class2 {}\n```\n\n???\n",
    "text": "1-1-1-2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\np#myParagraph .class1 div.class2 {}\n```\n\n???\n",
    "text": "1-0-0-4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "0-1-1-1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "0-0-2-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "1-1-2-1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "0-2-1-0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "1-1-1-0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the specificity of the following CSS code snippet?\n\n```css\n#div.selected a{}\n```\n\n???\n",
    "text": "1-2-1-2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following selectors has the highest specificity?\n\n```css\n#nav .selected > p:hover {} /* 1 */\n#footer #note {} /* 2 */\ndiv div ul li div div img {} /* 3 */\n```\n\n ???\n",
    "text": "2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "which of the following selectors has the highest specificity?\n\n```css\n#nav .selected > p:hover {} /* 1 */\n#footer #note {} /* 2 */\ndiv div ul li div div img {} /* 3 */\n```\n\n ???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following selectors has the highest specificity?\n\n```css\n#nav .selected > p:hover {} /* 1 */\n#footer #note {} /* 2 */\ndiv div ul li div div img {} /* 3 */\n```\n\n ???\n",
    "text": "3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which of the following selectors has the highest specificity?\n\n```css\n#nav .selected > p:hover {} /* 1 */\n#footer #note {} /* 2 */\ndiv div ul li div div img {} /* 3 */\n```\n\n ???\n",
    "text": "both 1 and 2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The CSS code with the highest rendering priority is\n\n???\n",
    "text": "inline CSS",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The CSS code with the highest rendering priority is\n\n???\n",
    "text": "internal CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The CSS code with the highest rendering priority is\n\n???\n",
    "text": "external CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the following CSS code:\n\n    .container{\n      font-size: 20px;\n      width: 500px;\n      height: 300px;\n    }\n\nAnd HTML:\n\n```html\n<div class=\"container\">\n  <div></div>\n</div>\n```\n\nWhich of the following values is not equivalent to a `width` of `200px` for the inner `div`?\n\n???\n",
    "text": "width: 20em;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For the following CSS code:\n\n    .container{\n      font-size: 20px;\n      width: 500px;\n      height: 300px;\n    }\n\nAnd HTML:\n\n```html\n<div class=\"container\">\n  <div></div>\n</div>\n```\n\nWhich of the following values is not equivalent to a `width` of `200px` for the inner `div`?\n\n???\n",
    "text": "width: 40%;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the following CSS code:\n\n    .container{\n      font-size: 20px;\n      width: 500px;\n      height: 300px;\n    }\n\nAnd HTML:\n\n```html\n<div class=\"container\">\n  <div></div>\n</div>\n```\n\nWhich of the following values is not equivalent to a `width` of `200px` for the inner `div`?\n\n???\n",
    "text": "width: 200px;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For the following CSS code:\n\n    .container{\n      font-size: 20px;\n      width: 500px;\n      height: 300px;\n    }\n\nAnd HTML:\n\n```html\n<div class=\"container\">\n  <div></div>\n</div>\n```\n\nWhich of the following values is not equivalent to a `width` of `200px` for the inner `div`?\n\n???\n",
    "text": "width: 10em;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In CSS, `width: 10%` is equal to\n\n???\n",
    "text": "10% of parent's width",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In CSS, `width: 10%` is equal to\n\n???\n",
    "text": "100px",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In CSS, `width: 10%` is equal to\n\n???\n",
    "text": "10% of parent's font-size",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In CSS, `width: 10%` is equal to\n\n???\n",
    "text": "10% of body's width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to let `box-sizing` be inherited from `html`:\n\n```css\nhtml {\n   box-sizing: border-box;\n}\n\np {\n   box-sizing: ???;\n}\n```\n",
    "text": "`inherit`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to let `box-sizing` be inherited from `html`:\n\n```css\nhtml {\n   box-sizing: border-box;\n}\n\np {\n   box-sizing: ???;\n}\n```\n",
    "text": "`inherits`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to let `box-sizing` be inherited from `html`:\n\n```css\nhtml {\n   box-sizing: border-box;\n}\n\np {\n   box-sizing: ???;\n}\n```\n",
    "text": "`extend`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to let `box-sizing` be inherited from `html`:\n\n```css\nhtml {\n   box-sizing: border-box;\n}\n\np {\n   box-sizing: ???;\n}\n```\n",
    "text": "`extends`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which properties default value is `content-box` ? \n\n???\n",
    "text": "`box-sizing` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which properties default value is `content-box` ? \n\n???\n",
    "text": "`padding-box` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which properties default value is `content-box` ? \n\n???\n",
    "text": "`border-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default value for `box-sizing`? \n\n???\n",
    "text": "`content-box`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the default value for `box-sizing`? \n\n???\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default value for `box-sizing`? \n\n???\n",
    "text": "`undefined`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default value for `box-sizing`? \n\n???\n",
    "text": "`padding-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the default value for `box-sizing`? \n\n???\n",
    "text": "`border-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You have the following code snippet:\n\n```css\nbody{\n  font-size: 16px;\n}\n```\n\nSet the font-size of `.smallparagraph`  to 8px in a responsive way:\n\n```css\n.smallparagraph{\n  font-size: ???;\n}\n```\n",
    "text": "`0.5em` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "You have the following code snippet:\n\n```css\nbody{\n  font-size: 16px;\n}\n```\n\nSet the font-size of `.smallparagraph`  to 8px in a responsive way:\n\n```css\n.smallparagraph{\n  font-size: ???;\n}\n```\n",
    "text": "`0.8em` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You have the following code snippet:\n\n```css\nbody{\n  font-size: 16px;\n}\n```\n\nSet the font-size of `.smallparagraph`  to 8px in a responsive way:\n\n```css\n.smallparagraph{\n  font-size: ???;\n}\n```\n",
    "text": "`8px` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "You have the following code snippet:\n\n```css\nbody{\n  font-size: 16px;\n}\n```\n\nSet the font-size of `.smallparagraph`  to 8px in a responsive way:\n\n```css\n.smallparagraph{\n  font-size: ???;\n}\n```\n",
    "text": "`1em`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "proportional",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "font size",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "responsive",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "related",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "correlated",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "style",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "look",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "different",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "`em` is directly ??? to the current ??? . This makes it simpler for future changes and ??? design.\n",
    "text": "changing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `margin-top` value in pixels?\n\n```css\ndiv {\n   width: 300px;\n   height: 100px;\n   margin-top: 10%; \n   /* margin-top: ??? px */\n```\n",
    "text": "`30`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the `margin-top` value in pixels?\n\n```css\ndiv {\n   width: 300px;\n   height: 100px;\n   margin-top: 10%; \n   /* margin-top: ??? px */\n```\n",
    "text": "`10`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `margin-top` value in pixels?\n\n```css\ndiv {\n   width: 300px;\n   height: 100px;\n   margin-top: 10%; \n   /* margin-top: ??? px */\n```\n",
    "text": "`100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the `margin-top` value in pixels?\n\n```css\ndiv {\n   width: 300px;\n   height: 100px;\n   margin-top: 10%; \n   /* margin-top: ??? px */\n```\n",
    "text": "`40`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Percentages on properties such as *padding-top* and *margin-top* are calculated based on the \n\n???\n",
    "text": "width of the container.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Percentages on properties such as *padding-top* and *margin-top* are calculated based on the \n\n???\n",
    "text": "height of the container.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Percentages on properties such as *padding-top* and *margin-top* are calculated based on the \n\n???\n",
    "text": "perimeter of the container.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Percentages on properties such as *padding-top* and *margin-top* are calculated based on the \n\n???\n",
    "text": "area of the container.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the regular form for an @ rule? ???\n",
    "text": "`@[KEYWORD] (RULE);`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is the regular form for an @ rule? ???\n",
    "text": "`@[KEYWORD];`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the regular form for an @ rule? ???\n",
    "text": "`@[KEYWORD-RULE];`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following `calc()` syntaxes is the correct one?\n\n```css\n.generate {\n   width: calc(30% - 21px);\n   height: calc(100% / 3 * 4);\n}\n```\n\n???\n",
    "text": "both",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following `calc()` syntaxes is the correct one?\n\n```css\n.generate {\n   width: calc(30% - 21px);\n   height: calc(100% / 3 * 4);\n}\n```\n\n???\n",
    "text": "width",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following `calc()` syntaxes is the correct one?\n\n```css\n.generate {\n   width: calc(30% - 21px);\n   height: calc(100% / 3 * 4);\n}\n```\n\n???\n",
    "text": "height",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following two selectors is an adjacent selector? ???\n",
    "text": "`+` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following two selectors is an adjacent selector? ???\n",
    "text": "`~`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Describe the following CSS code snippet in one line?\n\n```css\nul + h {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Only the first header after each unordered list will use the Arial Narrow font.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Describe the following CSS code snippet in one line?\n\n```css\nul + h {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "The header before and header after each unordered list will use the Arial Narrow font.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Describe the following CSS code snippet in one line?\n\n```css\nul + h {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "All headers will use the Arial Narrow font.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does SVG stand for? \n\n???\n",
    "text": "Scalable Vector Graphics",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does SVG stand for? \n\n???\n",
    "text": "System Vector Graphics",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does SVG stand for? \n\n???\n",
    "text": "Scalable Variable Graphics",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why does `SVG` prove to be useful for icons? \n\n???\n",
    "text": "It scales well for all resolution types.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Why does `SVG` prove to be useful for icons? \n\n???\n",
    "text": "As SVG stands for Small Vector Graphics.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Why does `SVG` prove to be useful for icons? \n\n???\n",
    "text": "As it's supported in all browsers from IE9.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements will be displayed on top?\n\n```css\n#A {\n position: absolute;\n z-index: 10;\n}\n#B{\n position: absolute;  \n z-index: -10;\n}\n#C {\n position: absolute; \n z-index: 0;\n}\n```\n\n???\n",
    "text": "`A` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following elements will be displayed on top?\n\n```css\n#A {\n position: absolute;\n z-index: 10;\n}\n#B{\n position: absolute;  \n z-index: -10;\n}\n#C {\n position: absolute; \n z-index: 0;\n}\n```\n\n???\n",
    "text": "`B` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements will be displayed on top?\n\n```css\n#A {\n position: absolute;\n z-index: 10;\n}\n#B{\n position: absolute;  \n z-index: -10;\n}\n#C {\n position: absolute; \n z-index: 0;\n}\n```\n\n???\n",
    "text": "`C` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements will be displayed on top?\n\n```css\n#A {\n position: absolute;\n z-index: 10;\n}\n#B{\n position: absolute;  \n z-index: -10;\n}\n#C {\n position: absolute; \n z-index: 0;\n}\n```\n\n???\n",
    "text": "They are all on the same level.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To use the `z-index` to specify the stack order of overlapping elements, which of the following position values must an element not have? \n\n???\n",
    "text": "`position: static;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To use the `z-index` to specify the stack order of overlapping elements, which of the following position values must an element not have? \n\n???\n",
    "text": "`position: absolute;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To use the `z-index` to specify the stack order of overlapping elements, which of the following position values must an element not have? \n\n???\n",
    "text": "`position: fixed;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To use the `z-index` to specify the stack order of overlapping elements, which of the following position values must an element not have? \n\n???\n",
    "text": "`position: relative`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element should have `display: flex` property in order for the gutters to be equally distributed?\n\n???\n",
    "text": "The container.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which element should have `display: flex` property in order for the gutters to be equally distributed?\n\n???\n",
    "text": "Every column gutter.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element should have `display: flex` property in order for the gutters to be equally distributed?\n\n???\n",
    "text": "Every column gutter but the first.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which element should have `display: flex` property in order for the gutters to be equally distributed?\n\n???\n",
    "text": "The html document.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `flexbox` property can be used to get rid of `nth-`, `first-` and `last-child` column gutter hacks? \n\n```css\n.p {\n   justify-content: \n            ???;\n}\n```\n",
    "text": "`space-between`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which `flexbox` property can be used to get rid of `nth-`, `first-` and `last-child` column gutter hacks? \n\n```css\n.p {\n   justify-content: \n            ???;\n}\n```\n",
    "text": "`flex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `flexbox` property can be used to get rid of `nth-`, `first-` and `last-child` column gutter hacks? \n\n```css\n.p {\n   justify-content: \n            ???;\n}\n```\n",
    "text": "`display-flex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `flexbox` property can be used to get rid of `nth-`, `first-` and `last-child` column gutter hacks? \n\n```css\n.p {\n   justify-content: \n            ???;\n}\n```\n",
    "text": "`content-box`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which `flexbox` property can be used to get rid of `nth-`, `first-` and `last-child` column gutter hacks? \n\n```css\n.p {\n   justify-content: \n            ???;\n}\n```\n",
    "text": "`space-flex`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following values will potentially overflow the container?\n\n    .flex-container{\n     flex-wrap: ???;\n    }\n",
    "text": "`nowrap`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following values will potentially overflow the container?\n\n    .flex-container{\n     flex-wrap: ???;\n    }\n",
    "text": "`wrap`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following values will potentially overflow the container?\n\n    .flex-container{\n     flex-wrap: ???;\n    }\n",
    "text": "`wrap-reverse`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following values will potentially overflow the container?\n\n    .flex-container{\n     flex-wrap: ???;\n    }\n",
    "text": "`unset`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following Flexbox definitions is the definition for *wrap*?\n\n???\n",
    "text": "Multi-lines where the direction is defined by flex-direction.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following Flexbox definitions is the definition for *wrap*?\n\n???\n",
    "text": "Multi-lines, opposite to the direction defined by flex-direction.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following Flexbox definitions is the definition for *wrap*?\n\n???\n",
    "text": "Single-line which could cause the container to overflow.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following `justify-content` values will display items evenly distributed, with the first item positioned near margin of the container?\n\n    .flex-container{\n      justify-content:\n                ???;\n    }\n",
    "text": "`space-between`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following `justify-content` values will display items evenly distributed, with the first item positioned near margin of the container?\n\n    .flex-container{\n      justify-content:\n                ???;\n    }\n",
    "text": "`space-around`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following `justify-content` values will display items evenly distributed, with the first item positioned near margin of the container?\n\n    .flex-container{\n      justify-content:\n                ???;\n    }\n",
    "text": "`center`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following `justify-content` values will display items evenly distributed, with the first item positioned near margin of the container?\n\n    .flex-container{\n      justify-content:\n                ???;\n    }\n",
    "text": "`flex-start`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To give elements the same amount of space between them, as well as the container, `justify-content` values should be\n\n???\n",
    "text": "space-around",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "To give elements the same amount of space between them, as well as the container, `justify-content` values should be\n\n???\n",
    "text": "space-between",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To give elements the same amount of space between them, as well as the container, `justify-content` values should be\n\n???\n",
    "text": "flex-start",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "To give elements the same amount of space between them, as well as the container, `justify-content` values should be\n\n???\n",
    "text": "center",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `order` accepts negative values,  for the same 5 list items, with the following ordering, which one do you think will be the first displayed?\n\n```css\n.flex-item:nth-of-type(1) {order: 3;}\n.flex-item:nth-of-type(2) {order: -1;}\n.flex-item:nth-of-type(3) {order: 1;}\n.flex-item:nth-of-type(4) {order: 4;} \n.flex-item:nth-of-type(5) {order: 2;}\n```\n\n???\n",
    "text": "Box 2",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "If `order` accepts negative values,  for the same 5 list items, with the following ordering, which one do you think will be the first displayed?\n\n```css\n.flex-item:nth-of-type(1) {order: 3;}\n.flex-item:nth-of-type(2) {order: -1;}\n.flex-item:nth-of-type(3) {order: 1;}\n.flex-item:nth-of-type(4) {order: 4;} \n.flex-item:nth-of-type(5) {order: 2;}\n```\n\n???\n",
    "text": "Box 1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `order` accepts negative values,  for the same 5 list items, with the following ordering, which one do you think will be the first displayed?\n\n```css\n.flex-item:nth-of-type(1) {order: 3;}\n.flex-item:nth-of-type(2) {order: -1;}\n.flex-item:nth-of-type(3) {order: 1;}\n.flex-item:nth-of-type(4) {order: 4;} \n.flex-item:nth-of-type(5) {order: 2;}\n```\n\n???\n",
    "text": "Box 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `order` accepts negative values,  for the same 5 list items, with the following ordering, which one do you think will be the first displayed?\n\n```css\n.flex-item:nth-of-type(1) {order: 3;}\n.flex-item:nth-of-type(2) {order: -1;}\n.flex-item:nth-of-type(3) {order: 1;}\n.flex-item:nth-of-type(4) {order: 4;} \n.flex-item:nth-of-type(5) {order: 2;}\n```\n\n???\n",
    "text": "Box 4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "If `order` accepts negative values,  for the same 5 list items, with the following ordering, which one do you think will be the first displayed?\n\n```css\n.flex-item:nth-of-type(1) {order: 3;}\n.flex-item:nth-of-type(2) {order: -1;}\n.flex-item:nth-of-type(3) {order: 1;}\n.flex-item:nth-of-type(4) {order: 4;} \n.flex-item:nth-of-type(5) {order: 2;}\n```\n\n???\n",
    "text": "Box 5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 1, 4, 2, 5, 3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 1, 2, 4, 5, 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 2, 1, 4, 5, 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 1, 4, 5, 2, 3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 1, 4, 2, 3, 5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Take 6 boxes originally ordered 1, 2, 3, 4, 5 and 6. What order are the boxes after the following piece of CSS code? \n\n```css\n.flex-item:nth-of-type(1) { order: 2; }\n.flex-item:nth-of-type(2) { order: 4; }\n.flex-item:nth-of-type(3) { order: 6; }\n.flex-item:nth-of-type(4) { order: 3; }\n.flex-item:nth-of-type(5) { order: 5; }\n.flex-item:nth-of-type(6) { order: 1; )\n```\n\n???\n",
    "text": "6, 1, 4, 2, 5, 0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`flex-grow` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`3` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`flex-shrink` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`2` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`1` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to make `.grow` elements to take three times as much space as the other elements in the flex container:\n\n    .flexGrow{\n      ??? : ???;\n    }\n",
    "text": "`grow-basis`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `flex-grow` accept and what does it serve as? \n\n???\n",
    "text": "A unitless value, which serves as a proportion.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does `flex-grow` accept and what does it serve as? \n\n???\n",
    "text": "A value, which serves as a factor.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `flex-grow` accept and what does it serve as? \n\n???\n",
    "text": "A string, which serves as a description.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `flex-grow` accept and what does it serve as? \n\n???\n",
    "text": "A unit, which serves as a multiple.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Elements of which class will shrink three times as much as the largest one?\n\n```css\n.container{\n  width: 800px;\n}\n.flex1{\n  flex-shrink: 3;\n  flex-basis: 300px;\n}\n.flex2{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n.flex3{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n```\n\n???\n",
    "text": "flex1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Elements of which class will shrink three times as much as the largest one?\n\n```css\n.container{\n  width: 800px;\n}\n.flex1{\n  flex-shrink: 3;\n  flex-basis: 300px;\n}\n.flex2{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n.flex3{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n```\n\n???\n",
    "text": "flex3",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Elements of which class will shrink three times as much as the largest one?\n\n```css\n.container{\n  width: 800px;\n}\n.flex1{\n  flex-shrink: 3;\n  flex-basis: 300px;\n}\n.flex2{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n.flex3{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n```\n\n???\n",
    "text": "flex2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Elements of which class will shrink three times as much as the largest one?\n\n```css\n.container{\n  width: 800px;\n}\n.flex1{\n  flex-shrink: 3;\n  flex-basis: 300px;\n}\n.flex2{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n.flex3{\n  flex-shrink: 1;\n  flex-basis: 300px;\n}\n```\n\n???\n",
    "text": "none",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `flex-shrink` factor determine? \n\n???\n",
    "text": "How much the flex item shrinks relative to the rest of the items if there's not space on the row.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the `flex-shrink` factor determine? \n\n???\n",
    "text": "How much the flex item shrinks on the page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `flex-shrink` factor determine? \n\n???\n",
    "text": "How much the flex item expands.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `div` selector targets\n\n???\n",
    "text": "all `div` elements",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `div` selector targets\n\n???\n",
    "text": "all `div` elements within a class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `div` selector targets\n\n???\n",
    "text": "all elements with class `div`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following selectors does *always* target a single element?\n\n???\n",
    "text": "ID",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following selectors does *always* target a single element?\n\n???\n",
    "text": "Class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following selectors does *always* target a single element?\n\n???\n",
    "text": "Type",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following selectors does *always* target a single element?\n\n???\n",
    "text": "A combination between type and class",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In CSS, the syntax for targeting elements within a certain class is:\n\n    ???\n",
    "text": "`.class`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In CSS, the syntax for targeting elements within a certain class is:\n\n    ???\n",
    "text": "`#class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In CSS, the syntax for targeting elements within a certain class is:\n\n    ???\n",
    "text": "`class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`selector`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`property`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`:`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`value`",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`=`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`background-decoration`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet with the general syntax for a CSS declaration:\n\n    ??? {\n      ??? ??? ???;\n    }\n",
    "text": "`red`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the final `background-color` of the `<p>` elements?\n\n    p {\n     background-color: blue;\n     background-color: red;\n    }\n    p {\n      background-color: green;\n    }\n\n???\n",
    "text": "green",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the final `background-color` of the `<p>` elements?\n\n    p {\n     background-color: blue;\n     background-color: red;\n    }\n    p {\n      background-color: green;\n    }\n\n???\n",
    "text": "blue",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the final `background-color` of the `<p>` elements?\n\n    p {\n     background-color: blue;\n     background-color: red;\n    }\n    p {\n      background-color: green;\n    }\n\n???\n",
    "text": "red",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the final `background-color` of the `<p>` elements?\n\n    p {\n     background-color: blue;\n     background-color: red;\n    }\n    p {\n      background-color: green;\n    }\n\n???\n",
    "text": "the default one",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should a style block be located in the CSS file for it to be applied last?\n\n???\n",
    "text": "Bottom of the file.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Where should a style block be located in the CSS file for it to be applied last?\n\n???\n",
    "text": "Middle of the file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should a style block be located in the CSS file for it to be applied last?\n\n???\n",
    "text": "Top of the file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where should a style block be located in the CSS file for it to be applied last?\n\n???\n",
    "text": "Doesn't matter.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the context of a web page, CSS takes care of\n\n???\n",
    "text": "styling",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In the context of a web page, CSS takes care of\n\n???\n",
    "text": "structure",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the context of a web page, CSS takes care of\n\n???\n",
    "text": "behavior",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In the context of a web page, CSS takes care of\n\n???\n",
    "text": "nothing",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does *CSS* stand for?\n\n???\n",
    "text": "Cascading Style Sheets",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does *CSS* stand for?\n\n???\n",
    "text": "Cross Site Scripting",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does *CSS* stand for?\n\n???\n",
    "text": "Customer Service Site",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does *CSS* stand for?\n\n???\n",
    "text": "Computer Styling Sheets",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following element is * not * a block element? \n\n???\n",
    "text": "`<span>` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following element is * not * a block element? \n\n???\n",
    "text": "`<form>` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following element is * not * a block element? \n\n???\n",
    "text": "`<ul>` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following element is * not * a block element? \n\n???\n",
    "text": "`<article>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<img>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<div>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<h1>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<form>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<li>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a block element? \n\n???\n",
    "text": "`<p>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Text ??? a floated element.\n",
    "text": "surrounds",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Text ??? a floated element.\n",
    "text": "pushes",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Text ??? a floated element.\n",
    "text": "overlaps",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Text ??? a floated element.\n",
    "text": "underlaps",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Whose behavior is `display:inline-block` trying to replicate?\n\n???\n",
    "text": "Replaced elements'",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Whose behavior is `display:inline-block` trying to replicate?\n\n???\n",
    "text": "Inline elements'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Whose behavior is `display:inline-block` trying to replicate?\n\n???\n",
    "text": "Block elements'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Whose behavior is `display:inline-block` trying to replicate?\n\n???\n",
    "text": "Newer elements'",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is * not * an inline element? \n\n???\n",
    "text": "`<form>` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following elements is * not * an inline element? \n\n???\n",
    "text": "`<label>` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is * not * an inline element? \n\n???\n",
    "text": "`<strong>` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is * not * an inline element? \n\n???\n",
    "text": "`<input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is not inline? \n\n???\n",
    "text": "`<p>`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following elements is not inline? \n\n???\n",
    "text": "`<em>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is not inline? \n\n???\n",
    "text": "`<span>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is not inline? \n\n???\n",
    "text": "`<input>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following elements is not inline? \n\n???\n",
    "text": "`<img>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An element with `position: absolute` is positioned in relation to ???.\n",
    "text": "its first non-static ancestor.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "An element with `position: absolute` is positioned in relation to ???.\n",
    "text": "its first relative positioned ancestor.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An element with `position: absolute` is positioned in relation to ???.\n",
    "text": "its first absolute positioned ancestor.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "An element with `position: absolute` is positioned in relation to ???.\n",
    "text": "its parent.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which value of `position` you cannot use box offsets?\n\n???\n",
    "text": "Static",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For which value of `position` you cannot use box offsets?\n\n???\n",
    "text": "Relative",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For which value of `position` you cannot use box offsets?\n\n???\n",
    "text": "Absolute",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `clear` property do?\n\n???\n",
    "text": "It doesn’t allow float elements on specified sides.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does `clear` property do?\n\n???\n",
    "text": "It doesn’t allow any type of elements on specified sides.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does `clear` property do?\n\n???\n",
    "text": "It allows float elements on specified sides.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do, when you have a floated image inside an element smaller than said image?\n\n```css\n.clearfix {\n   overflow: auto;\n}\n```\n\n???\n",
    "text": "Alters the elements size so it contains the image.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do, when you have a floated image inside an element smaller than said image?\n\n```css\n.clearfix {\n   overflow: auto;\n}\n```\n\n???\n",
    "text": "Alters the images size so it fits inside the element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do, when you have a floated image inside an element smaller than said image?\n\n```css\n.clearfix {\n   overflow: auto;\n}\n```\n\n???\n",
    "text": "Hides the element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do, when you have a floated image inside an element smaller than said image?\n\n```css\n.clearfix {\n   overflow: auto;\n}\n```\n\n???\n",
    "text": "Hides the image.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply a cellpadding of 15px to a table:\n\n    ??? {\n       ??? : 15px;\n    }\n",
    "text": "`td` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Apply a cellpadding of 15px to a table:\n\n    ??? {\n       ??? : 15px;\n    }\n",
    "text": "`padding` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Apply a cellpadding of 15px to a table:\n\n    ??? {\n       ??? : 15px;\n    }\n",
    "text": "`table` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply a cellpadding of 15px to a table:\n\n    ??? {\n       ??? : 15px;\n    }\n",
    "text": "`cell-padding` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Apply a cellpadding of 15px to a table:\n\n    ??? {\n       ??? : 15px;\n    }\n",
    "text": "`tr`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? \n\n```css\ntable {\n   padding: 8px;\n   border-spacing: 6px;\n   border-collapse: separate;\n}\n```\n\n???\n",
    "text": "Controls the cellpadding and cellspacing of the table.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do? \n\n```css\ntable {\n   padding: 8px;\n   border-spacing: 6px;\n   border-collapse: separate;\n}\n```\n\n???\n",
    "text": "Alters the table.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? \n\n```css\ntable {\n   padding: 8px;\n   border-spacing: 6px;\n   border-collapse: separate;\n}\n```\n\n???\n",
    "text": "Adds a border to the table without padding.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? \n\n```css\ntable {\n   padding: 8px;\n   border-spacing: 6px;\n   border-collapse: separate;\n}\n```\n\n???\n",
    "text": "Adds a border to the table with padding.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where will the first child be displayed?\n\n???\n",
    "text": "Bottom-left of the parent.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Where will the first child be displayed?\n\n???\n",
    "text": "Top-left of the parent.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where will the first child be displayed?\n\n???\n",
    "text": "Bottom-right of the parent.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Where will the first child be displayed?\n\n???\n",
    "text": "Top-right of the parent.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using Flexbox, how does `column-reverse` allow users to arrange elements?\n\n ???\n",
    "text": "Vertically in reverse order.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When using Flexbox, how does `column-reverse` allow users to arrange elements?\n\n ???\n",
    "text": "Vertically in normal order.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using Flexbox, how does `column-reverse` allow users to arrange elements?\n\n ???\n",
    "text": "Horizontally in reverse order.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When using Flexbox, how does `column-reverse` allow users to arrange elements?\n\n ???\n",
    "text": "Horizontally in normal order.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS property do? ???\n\n```css\ntable-layout: fixed;\n```\n",
    "text": "Maintains table cells at an equal width. ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS property do? ???\n\n```css\ntable-layout: fixed;\n```\n",
    "text": "Stops the table size from being altered.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS property do? ???\n\n```css\ntable-layout: fixed;\n```\n",
    "text": "Stops the table layout from being altered.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following browsers *does not* support `position: sticky`? ???\n",
    "text": "Chrome",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following browsers *does not* support `position: sticky`? ???\n",
    "text": "Firefox",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following browsers *does not* support `position: sticky`? ???\n",
    "text": "Safari",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following browsers *does not* support `position: sticky`? ???\n",
    "text": "iOS Safari",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do?\n\n```css\nbody {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Sets the font family to Arial Narrow for all elements in the body.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following piece of code do?\n\n```css\nbody {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Sets the font family to Arial Narrow for all elements outside the body.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do?\n\n```css\nbody {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Sets the font family to Arial Narrow for the first element in the body,",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do?\n\n```css\nbody {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "It does nothing.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which selector is used to select every element of a page so styles can be applied?\n\n???\n",
    "text": "`*`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which selector is used to select every element of a page so styles can be applied?\n\n???\n",
    "text": "`+`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which selector is used to select every element of a page so styles can be applied?\n\n???\n",
    "text": "`=`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which selector is used to select every element of a page so styles can be applied?\n\n???\n",
    "text": "`/\\`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which selector is used to select every element of a page so styles can be applied?\n\n???\n",
    "text": "`<>`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\ndiv * {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Selects all elements inside div elements and sets their font family to Arial Narrow.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do?\n\n```css\ndiv * {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Selects all elements and sets their font family to Arial Narrow.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\ndiv * {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Selects all elements where the font family is Arial Narrow.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\ndiv * {\n   font-family: \"Arial Narrow\";\n}\n```\n\n???\n",
    "text": "Selects all elements inside div elements where the font family is Arial Narrow.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which selector is used to select every element on the page?\n\n```css\n??? { background-color: rgba(0,255,0,0.1); }\n```\n\n ???\n",
    "text": "*",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "which selector is used to select every element on the page?\n\n```css\n??? { background-color: rgba(0,255,0,0.1); }\n```\n\n ???\n",
    "text": "-",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "which selector is used to select every element on the page?\n\n```css\n??? { background-color: rgba(0,255,0,0.1); }\n```\n\n ???\n",
    "text": "<>",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "which selector is used to select every element on the page?\n\n```css\n??? { background-color: rgba(0,255,0,0.1); }\n```\n\n ???\n",
    "text": "html",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`inherit`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`initial`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`extend`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`primary`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`preliminary`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "??? takes an extra step to check if there are other properties which can be used in the cascade before using the ??? value which was set.\n",
    "text": "`use`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the pseudo-class :root refer to?\n\nIn a HTML document, what does the pseudo-class `:root` refer to?\n\n ???\n",
    "text": "<html> element",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "what does the pseudo-class :root refer to?\n\nIn a HTML document, what does the pseudo-class `:root` refer to?\n\n ???\n",
    "text": "<body> element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the pseudo-class :root refer to?\n\nIn a HTML document, what does the pseudo-class `:root` refer to?\n\n ???\n",
    "text": "<root> element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "what does the pseudo-class :root refer to?\n\nIn a HTML document, what does the pseudo-class `:root` refer to?\n\n ???\n",
    "text": "highest-level <div> element",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a CSS page break? ???\n",
    "text": "`page-break-prior`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a CSS page break? ???\n",
    "text": "`page-break-before`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a CSS page break? ???\n",
    "text": "`page-break-after`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a CSS page break? ???\n",
    "text": "`page-break-inside`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of those properties won’t preserve the space allocated for the element?\n\n???\n",
    "text": "`display: none` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of those properties won’t preserve the space allocated for the element?\n\n???\n",
    "text": "`visibility: hidden` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of those properties won’t preserve the space allocated for the element?\n\n???\n",
    "text": "neither",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the definition for display:none?\n\n???\n",
    "text": "The element is not rendered on the page so consequently does not appear, page space is not allocated.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is the definition for display:none?\n\n???\n",
    "text": "The element is rendered on the page but does not appear, page space is allocated.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the definition for display:none?\n\n???\n",
    "text": "The element is not rendered on the page so consequently does not appear, page space is allocated.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is the definition for display:none?\n\n???\n",
    "text": "The element is rendered on the page but does not appear, page space is not allocated.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n:required {\n   border: 2px solid black;\n}\n:optional {\n   border: 2px dotted blue;\n}\n```\n",
    "text": "Sets the border of compulsory fields solid and black. Sets the border of optional fields dotted and blue.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n:required {\n   border: 2px solid black;\n}\n:optional {\n   border: 2px dotted blue;\n}\n```\n",
    "text": "Sets the border of compulsory fields dotted and blue. Sets the border of optional fields solid and black.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n:required {\n   border: 2px solid black;\n}\n:optional {\n   border: 2px dotted blue;\n}\n```\n",
    "text": "Returns an error.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n:required {\n   border: 2px solid black;\n}\n:optional {\n   border: 2px dotted blue;\n}\n```\n",
    "text": "Makes the border of all fields solid and black.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? ???\n\n```css\n:required {\n   border: 2px solid black;\n}\n:optional {\n   border: 2px dotted blue;\n}\n```\n",
    "text": "Makes the border of all fields dotted and blue.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true?\n\nThe `:hover` pseudo-class can only be applied to `<a>` (link) elements.\n\n???\n",
    "text": "False",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Is the following statement true?\n\nThe `:hover` pseudo-class can only be applied to `<a>` (link) elements.\n\n???\n",
    "text": "True",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Is the following statement true?\n\nThe `:hover` pseudo-class can only be applied to `<a>` (link) elements.\n\n???\n",
    "text": "Partially true, applicable to some browsers",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which of the following cases, will the `:hover` pseudo-class most likely work as expected?\n\n???\n",
    "text": "3",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "In which of the following cases, will the `:hover` pseudo-class most likely work as expected?\n\n???\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which of the following cases, will the `:hover` pseudo-class most likely work as expected?\n\n???\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which of the following cases, will the `:hover` pseudo-class most likely work as expected?\n\n???\n",
    "text": "4",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "In which of the following cases, will the `:hover` pseudo-class most likely work as expected?\n\n???\n",
    "text": "None",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which items would the following CSS code select? ???\n\n```css\nli:nth-child(-n+7) {\n   display: block;\n}\n```\n",
    "text": "Items 1 through 7.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which items would the following CSS code select? ???\n\n```css\nli:nth-child(-n+7) {\n   display: block;\n}\n```\n",
    "text": "Items 0 through 7.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which items would the following CSS code select? ???\n\n```css\nli:nth-child(-n+7) {\n   display: block;\n}\n```\n",
    "text": "Items 1 through 6",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which items would the following CSS code select? ???\n\n```css\nli:nth-child(-n+7) {\n   display: block;\n}\n```\n",
    "text": "Items -1 through 7.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n    .nav li???(:last-child) { \n      border-left: 5px dashed #FFF; \n    } \n",
    "text": "`:not` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet:\n\n    .nav li???(:last-child) { \n      border-left: 5px dashed #FFF; \n    } \n",
    "text": "`.not` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n    .nav li???(:last-child) { \n      border-left: 5px dashed #FFF; \n    } \n",
    "text": "`::not` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet:\n\n    .nav li???(:last-child) { \n      border-left: 5px dashed #FFF; \n    } \n",
    "text": "`not`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\n.div li:not(:last-child) {\n\n}\n```\n\n???\n",
    "text": "Allows styles to be applied to all elements except for the final element.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? \n\n```css\n.div li:not(:last-child) {\n\n}\n```\n\n???\n",
    "text": "Allows styles to be applied specifically to the final element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\n.div li:not(:last-child) {\n\n}\n```\n\n???\n",
    "text": "Allows styles to be applied to every other element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What symbol must a pseudo-class be preceded by?\n\n???\n",
    "text": "`:`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What symbol must a pseudo-class be preceded by?\n\n???\n",
    "text": "`;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What symbol must a pseudo-class be preceded by?\n\n???\n",
    "text": "`+`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What symbol must a pseudo-class be preceded by?\n\n???\n",
    "text": "`=`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What symbol must a pseudo-class be preceded by?\n\n???\n",
    "text": "`::`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the common order of pseudo-classes used for links?\n??? ??? ??? ???\n",
    "text": "ps:link {",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the common order of pseudo-classes used for links?\n??? ??? ??? ???\n",
    "text": "ps:visited {",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What is the common order of pseudo-classes used for links?\n??? ??? ??? ???\n",
    "text": "ps:hover {",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What is the common order of pseudo-classes used for links?\n??? ??? ??? ???\n",
    "text": "ps:active {",
    "correct": true,
    "correctIndex": 3
  },
  {
    "question": "What will the following CSS code do whilst dragging and not dragging? ???\n\n```css\n.bg {\n   background-color: white;\n}\n\n.bg:drop {\n   background-color: red;\n}\n```\n",
    "text": "Whilst dragging, the background colour is red. Whilst not dragging, the background colour is white.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following CSS code do whilst dragging and not dragging? ???\n\n```css\n.bg {\n   background-color: white;\n}\n\n.bg:drop {\n   background-color: red;\n}\n```\n",
    "text": "Whilst dragging, the background colour is white. Whilst not dragging, the background colour is red.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following CSS code do whilst dragging and not dragging? ???\n\n```css\n.bg {\n   background-color: white;\n}\n\n.bg:drop {\n   background-color: red;\n}\n```\n",
    "text": "The background colour is always red.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following CSS code do whilst dragging and not dragging? ???\n\n```css\n.bg {\n   background-color: white;\n}\n\n.bg:drop {\n   background-color: red;\n}\n```\n",
    "text": "The background colour is always white.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo-class would select the following element?\n\n```html\n<p> </p>\n```\n\n???\n",
    "text": "`:blank`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which pseudo-class would select the following element?\n\n```html\n<p> </p>\n```\n\n???\n",
    "text": "`:empty`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo-class would select the following element?\n\n```html\n<p> </p>\n```\n\n???\n",
    "text": "`neither...`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "2nd and 4th",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "2nd, 4th, 5th",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "1st, 3rd, 5th",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "4th and 5th",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "2nd and 5th",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which lines of HTML code would a *:blank* pseudo class apply to?\n\n```html\n1 <p>Pseudo classes!</p>\n2 <p></p>\n3 <p>:empty and :blank</p>\n4 <p> </p>\n5 <p>.</p>\n```\n\n???\n",
    "text": "1st and 3rd",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `:focus` pseudo class allow? \n???\n",
    "text": "The clicked on form element to be targeted.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the `:focus` pseudo class allow? \n???\n",
    "text": "Input forms to be created.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `:focus` pseudo class allow? \n???\n",
    "text": "Creates a focus point within a page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nname:focus {\n   background-color: red;\n}\ndob:focus {\n   background-color: green;\n}\n```\n\n???\n",
    "text": "Sets the background colour of the name input to red, and of the date of birth input to green.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nname:focus {\n   background-color: red;\n}\ndob:focus {\n   background-color: green;\n}\n```\n\n???\n",
    "text": "Sets the background colour of the name input to red and the rest of the page to green.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nname:focus {\n   background-color: red;\n}\ndob:focus {\n   background-color: green;\n}\n```\n\n???\n",
    "text": "Sets the background colour of the date of birth input to green and the rest of the page to red.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For either `:in-range` and `:out-of-range` pseudo-classes to match, the element has to have\n\n???\n",
    "text": "`min`, `max` or both attributes",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For either `:in-range` and `:out-of-range` pseudo-classes to match, the element has to have\n\n???\n",
    "text": "`range` attribute",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For either `:in-range` and `:out-of-range` pseudo-classes to match, the element has to have\n\n???\n",
    "text": "the type of input",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`:matches` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`color` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`:selects` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`background-color` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`.matches` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`.selects` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to set the color of the chosen selectors text blue:\n\n    p???(s1, s2, s3){ \n        ???:red; \n    } \n",
    "text": "`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\np:matches(s1, s2, s3) {\n   font-family: \"Arial Narrow\";\n   background-color: red;\n}\n```\n\n???\n",
    "text": "Sets the font family and background colour for all elements matching s1, s2 and s3.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\np:matches(s1, s2, s3) {\n   font-family: \"Arial Narrow\";\n   background-color: red;\n}\n```\n\n???\n",
    "text": "Sets the font family and background colour for all elements not matching s1, s2 and s3.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\np:matches(s1, s2, s3) {\n   font-family: \"Arial Narrow\";\n   background-color: red;\n}\n```\n\n???\n",
    "text": "Sets the font family and background colour for all elements.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\np:matches(s1, s2, s3) {\n   font-family: \"Arial Narrow\";\n   background-color: red;\n}\n```\n\n???\n",
    "text": "Does nothing.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What rule must be added in order for the selection pseudo-element to be supported on all browsers? \n\n???\n",
    "text": "`::-moz-selection` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What rule must be added in order for the selection pseudo-element to be supported on all browsers? \n\n???\n",
    "text": "`::-support-selection` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What rule must be added in order for the selection pseudo-element to be supported on all browsers? \n\n???\n",
    "text": "`::-sup-selection` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What rule must be added in order for the selection pseudo-element to be supported on all browsers? \n\n???\n",
    "text": "`::-gecko-selection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`::selection`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`:selection`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`::select`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`:select`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`::selector`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo element is used to select a text area, for example if you wanted to change its background colour? ???\n",
    "text": "`:selector`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the size of the first letter of a paragraph to `50px` :\n\n```css\np.special ??? {\n  ??? : 50px;\n}\n```\n",
    "text": "`::first-letter` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Change the size of the first letter of a paragraph to `50px` :\n\n```css\np.special ??? {\n  ??? : 50px;\n}\n```\n",
    "text": "`font-size` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Change the size of the first letter of a paragraph to `50px` :\n\n```css\np.special ??? {\n  ??? : 50px;\n}\n```\n",
    "text": "`::first-child:first-line` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the size of the first letter of a paragraph to `50px` :\n\n```css\np.special ??? {\n  ??? : 50px;\n}\n```\n",
    "text": "`size` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the size of the first letter of a paragraph to `50px` :\n\n```css\np.special ??? {\n  ??? : 50px;\n}\n```\n",
    "text": "`font-height`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `::first-letter` pseudo-element won't have the expected result if the targeted element \n\n???.\n",
    "text": "has a `::before` pseudo-element set",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The `::first-letter` pseudo-element won't have the expected result if the targeted element \n\n???.\n",
    "text": "has an `::after` pseudo-element set",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The `::first-letter` pseudo-element won't have the expected result if the targeted element \n\n???.\n",
    "text": "is not a paragraph",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is mandatory to display `::before` and `::after` pseudo-elements but can be empty?\n\n ???\n",
    "text": "`content`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which CSS property is mandatory to display `::before` and `::after` pseudo-elements but can be empty?\n\n ???\n",
    "text": "`element`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is mandatory to display `::before` and `::after` pseudo-elements but can be empty?\n\n ???\n",
    "text": "`div`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is mandatory to display `::before` and `::after` pseudo-elements but can be empty?\n\n ???\n",
    "text": "`class`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `::before` and `::after` selectors, what does the following CSS code do?\n\n```css\ndiv::before {\n   content: 'Hello!';\n   color: white;\n}\ndiv::after {\n   content: 'Goodbye!';\n   color: black;\n}\n```\n\n???\n",
    "text": "Adds a white Hello! before every div element with a black Goodbye! after.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Using the `::before` and `::after` selectors, what does the following CSS code do?\n\n```css\ndiv::before {\n   content: 'Hello!';\n   color: white;\n}\ndiv::after {\n   content: 'Goodbye!';\n   color: black;\n}\n```\n\n???\n",
    "text": "Adds a white Hello! after every div element with a black Goodbye! before.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Using the `::before` and `::after` selectors, what does the following CSS code do?\n\n```css\ndiv::before {\n   content: 'Hello!';\n   color: white;\n}\ndiv::after {\n   content: 'Goodbye!';\n   color: black;\n}\n```\n\n???\n",
    "text": "It does nothing, improper CSS.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`href^`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`attr`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`href`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`link`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`display`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to display links when the `<a>` element has no text value yet the `href` attribute has an external link:\n\n```css\na[???=\"http\"]:empty::before {\n   content: ???(href);\n}\n```\n",
    "text": "`disp^`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is NOT a pseudo-element?\n\n???\n",
    "text": "`::first-paragraph`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is NOT a pseudo-element?\n\n???\n",
    "text": "`::first-line`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is NOT a pseudo-element?\n\n???\n",
    "text": "`::first-letter`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is NOT a pseudo-element?\n\n???\n",
    "text": "`::before`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Ideally, what should precede all pseudo-elements declaration?\n\n???\n",
    "text": "`::`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Ideally, what should precede all pseudo-elements declaration?\n\n???\n",
    "text": "`;;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Ideally, what should precede all pseudo-elements declaration?\n\n???\n",
    "text": "`:`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Ideally, what should precede all pseudo-elements declaration?\n\n???\n",
    "text": "`-`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Ideally, what should precede all pseudo-elements declaration?\n\n???\n",
    "text": "`;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the missing command in the following CSS code which makes a scrollbar visible only when needed?\n\n```css\nhtml {\n   -ms-overflow-style: ???;\n}\n```\n",
    "text": "`ms-autohiding-scrollbar`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the missing command in the following CSS code which makes a scrollbar visible only when needed?\n\n```css\nhtml {\n   -ms-overflow-style: ???;\n}\n```\n",
    "text": "`-ms-autohiding-scrollbar`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the missing command in the following CSS code which makes a scrollbar visible only when needed?\n\n```css\nhtml {\n   -ms-overflow-style: ???;\n}\n```\n",
    "text": "`autohide-scrollbar`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the missing command in the following CSS code which makes a scrollbar visible only when needed?\n\n```css\nhtml {\n   -ms-overflow-style: ???;\n}\n```\n",
    "text": "`show-hover-scrollbar`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the missing command in the following CSS code which makes a scrollbar visible only when needed?\n\n```css\nhtml {\n   -ms-overflow-style: ???;\n}\n```\n",
    "text": "`autohiding-scrollbar-style`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A CSS selector that targets links which resolve to a *pdf* file is:\n\n???\n",
    "text": "`a[href$=\".pdf\"]`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "A CSS selector that targets links which resolve to a *pdf* file is:\n\n???\n",
    "text": "`a.pdf`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A CSS selector that targets links which resolve to a *pdf* file is:\n\n???\n",
    "text": "`[href=\"pdf\"]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "A CSS selector that targets links which resolve to a *pdf* file is:\n\n???\n",
    "text": "`a[after=\".pdf\"]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following properties will “glue” an element to its place?\n\n???\n",
    "text": "position: fixed;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following properties will “glue” an element to its place?\n\n???\n",
    "text": "z-index: 9999;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following properties will “glue” an element to its place?\n\n???\n",
    "text": "position: relative;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following properties will “glue” an element to its place?\n\n???\n",
    "text": "left:0px;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`fixed`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`bottom`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`0`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`stay`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`permanent`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`top`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`100`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "For a navigation bar to stay permanently at the bottom of a page when a user scrolls, what are the missing pieces of code below?\n\n```css\n.permanent-nav-bar {\n   position: ???;\n   ???: 0;\n   left: ???;\n   z-index: 9999;\n   width: 100%;\n   height: 50px;\n   background-color: #00a087;\n}\n```\n",
    "text": "`50`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`::-webkit-scrollbar` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`none`  ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`.webkit-scrollbar` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`::webkit-scrollbar` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`hide` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to hide all scrollbars on a webkit browser page:\n\n    ??? {  \n        display: ???;  \n    } \n",
    "text": "`false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do? \n\n```css\n::-webkit-scrollbar {\n   display: none;\n}\n```\n\n???\n",
    "text": "Hides all the scrollbars on the page.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following piece of code do? \n\n```css\n::-webkit-scrollbar {\n   display: none;\n}\n```\n\n???\n",
    "text": "Hides all the scrollbars of a particular element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do? \n\n```css\n::-webkit-scrollbar {\n   display: none;\n}\n```\n\n???\n",
    "text": "Displays all scrollbars on the page.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of code do? \n\n```css\n::-webkit-scrollbar {\n   display: none;\n}\n```\n\n???\n",
    "text": "Displays all the scrollbars of a particular element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following font format is supported by most browsers?\n\n???\n",
    "text": "`truetype`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following font format is supported by most browsers?\n\n???\n",
    "text": "`woff`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following font format is supported by most browsers?\n\n???\n",
    "text": "`woff2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following font format is supported by most browsers?\n\n???\n",
    "text": "`eot`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following snippet:\n\n```css\np {\n   font-family: 'enkiFont',\n       sans-serif;\n}\n```\n\nWhen using custom fonts with `@font-face`, `sans-serif` is considered to be the\n\n???.\n",
    "text": "fallback font",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the following snippet:\n\n```css\np {\n   font-family: 'enkiFont',\n       sans-serif;\n}\n```\n\nWhen using custom fonts with `@font-face`, `sans-serif` is considered to be the\n\n???.\n",
    "text": "italic font",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following snippet:\n\n```css\np {\n   font-family: 'enkiFont',\n       sans-serif;\n}\n```\n\nWhen using custom fonts with `@font-face`, `sans-serif` is considered to be the\n\n???.\n",
    "text": "next font",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the following snippet:\n\n```css\np {\n   font-family: 'enkiFont',\n       sans-serif;\n}\n```\n\nWhen using custom fonts with `@font-face`, `sans-serif` is considered to be the\n\n???.\n",
    "text": "inline font",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "`touch-callout`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "Safari",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "`touch-held`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "`callout-touch`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "`callout-held`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "Chrome",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "Internet Explorer",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which property is missing in the following CSS code when disabling the defauly callout shown when a touch target is touched and held? \n\n```css\n-webkit-???: none;\n```\n\nAnd which browser is this only compatible with? ???\n",
    "text": "Firefox",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n-webkit-text-size-adjust: none;\n```\n",
    "text": "Prevents font enlarging when using an iPhone.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n-webkit-text-size-adjust: none;\n```\n",
    "text": "Prevents font enlarging when using an Android phone.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following piece of CSS code do? ???\n\n```css\n-webkit-text-size-adjust: none;\n```\n",
    "text": "Prevents a user from zooming in on a webpage.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`@media`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`450px`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`max-width`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`min-width`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`width`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`tablet`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`screen-size`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippets such that the `max-width` of your `img`s is set to `50%` on devices with a screen size at least 450px:\n\n```css\nimg {\n   max-width: 70%;\n}\n\n??? (min-width: ???) {\n   img {\n     ???: 50%\n   }\n}\n```\n",
    "text": "`@resize`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Display the following paragraph as uppercase:\n\n```css\np.upper{\n  ???: uppercase;\n}\n```\n",
    "text": "`text-transform` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Display the following paragraph as uppercase:\n\n```css\np.upper{\n  ???: uppercase;\n}\n```\n",
    "text": "`text-style` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Display the following paragraph as uppercase:\n\n```css\np.upper{\n  ???: uppercase;\n}\n```\n",
    "text": "`text-decoration` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Display the following paragraph as uppercase:\n\n```css\np.upper{\n  ???: uppercase;\n}\n```\n",
    "text": "`font-style`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the key benefit and use case of `text-transform`?\n\n ???\n",
    "text": "It avoids pronunciation errors and preserves styles.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the key benefit and use case of `text-transform`?\n\n ???\n",
    "text": "It can render text in uppercase.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the key benefit and use case of `text-transform`?\n\n ???\n",
    "text": "It can render text in lowercase.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "On which devices will the images be bigger?\n\n```css\nimg {\n  height: 200px;\n  width: 250px;\n}\n@media(max-width: 720px){\n img {\n   height: 350px;\n   width:  500px;\n }\n}\n```\n\n???\n",
    "text": "Devices with width smaller than 720px.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "On which devices will the images be bigger?\n\n```css\nimg {\n  height: 200px;\n  width: 250px;\n}\n@media(max-width: 720px){\n img {\n   height: 350px;\n   width:  500px;\n }\n}\n```\n\n???\n",
    "text": "Devices with width larger than 720px.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "On which devices will the images be bigger?\n\n```css\nimg {\n  height: 200px;\n  width: 250px;\n}\n@media(max-width: 720px){\n img {\n   height: 350px;\n   width:  500px;\n }\n}\n```\n\n???\n",
    "text": "They will look the same.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "On which devices will the images be bigger?\n\n```css\nimg {\n  height: 200px;\n  width: 250px;\n}\n@media(max-width: 720px){\n img {\n   height: 350px;\n   width:  500px;\n }\n}\n```\n\n???\n",
    "text": "Devices with height smaller than 720px.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`@media`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`600px`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`@inherit`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`@device`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`600pix`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following code snippet to align text to the centre if the device is being used is less than 600 pixels:\n\n```css\n.standard {\n   text-align: left;\n}\n\n???(max-width: ???){\n   .standard{\n      text-align:center;\n   }\n}\n```\n",
    "text": "`750px`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Each time you use *@import* in CSS it ???.\n\nWhen using *@import* in Sass the file you're importing is taken and ???.\n",
    "text": "creates a new HTTP request.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Each time you use *@import* in CSS it ???.\n\nWhen using *@import* in Sass the file you're importing is taken and ???.\n",
    "text": "combined with the file you're importing into.",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Each time you use *@import* in CSS it ???.\n\nWhen using *@import* in Sass the file you're importing is taken and ???.\n",
    "text": "creates a new instance of the file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Each time you use *@import* in CSS it ???.\n\nWhen using *@import* in Sass the file you're importing is taken and ???.\n",
    "text": "creates a new copy of the file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Each time you use *@import* in CSS it ???.\n\nWhen using *@import* in Sass the file you're importing is taken and ???.\n",
    "text": "combined with the file you're importing into, in a new file.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sass knows that some `.scss` files are partials because\n\n???\n",
    "text": "their name is starts with an `_`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Sass knows that some `.scss` files are partials because\n\n???\n",
    "text": "they contain the `@partial` directive",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sass knows that some `.scss` files are partials because\n\n???\n",
    "text": "they contain the `@partial` mixin",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Sass knows that some `.scss` files are partials because\n\n???\n",
    "text": "there are no CSS files generated for them",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`@debug` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`14` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`@run` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`@compile` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`42` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet so that it returns the below output:\n\n```css\n??? 28px + ???px; \n/* Output */\nLine 1 DEBUG: 42px \n```\n",
    "text": "`18`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following lines of SassScript code *wouldn't* produce the following output?\n\n```css\nLine 1 DEBUG: 80%\n```\n\n???\n",
    "text": "`@debug percentage(200px / 120px);`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following lines of SassScript code *wouldn't* produce the following output?\n\n```css\nLine 1 DEBUG: 80%\n```\n\n???\n",
    "text": "`@debug abs(80);`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following lines of SassScript code *wouldn't* produce the following output?\n\n```css\nLine 1 DEBUG: 80%\n```\n\n???\n",
    "text": "`@debug round(80.42);`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following comments would be preserved when CSS code is generated from the Sass code?\n\n???\n",
    "text": "`/* Option A */`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following comments would be preserved when CSS code is generated from the Sass code?\n\n???\n",
    "text": "`// Option B`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following comments would be preserved when CSS code is generated from the Sass code?\n\n???\n",
    "text": "`<!-- Option C -->`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following comments would be preserved when CSS code is generated from the Sass code?\n\n???\n",
    "text": "`# Option D`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which type of comment is preserved when CSS code is generated from Sass code?\n\n???\n",
    "text": "Multi-line comments",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which type of comment is preserved when CSS code is generated from Sass code?\n\n???\n",
    "text": "Single-line commments",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which type of comment is preserved when CSS code is generated from Sass code?\n\n???\n",
    "text": "All comments",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which type of comment is preserved when CSS code is generated from Sass code?\n\n???\n",
    "text": "No comments",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The CSS extensions with indented syntax is ???\n",
    "text": "Sass",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The CSS extensions with indented syntax is ???\n",
    "text": "SCSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The CSS extensions with indented syntax is ???\n",
    "text": "less",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The CSS extensions with indented syntax is ???\n",
    "text": "CSS",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the following statement becomes true (pick `_` if no word should go there):\n\n    Any ??? CSS file is a valid ??? file.\n",
    "text": "valid",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill in the gaps such that the following statement becomes true (pick `_` if no word should go there):\n\n    Any ??? CSS file is a valid ??? file.\n",
    "text": "SCSS",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill in the gaps such that the following statement becomes true (pick `_` if no word should go there):\n\n    Any ??? CSS file is a valid ??? file.\n",
    "text": "Sass",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the following statement becomes true (pick `_` if no word should go there):\n\n    Any ??? CSS file is a valid ??? file.\n",
    "text": "_",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill in the gaps such that the following statement becomes true (pick `_` if no word should go there):\n\n    Any ??? CSS file is a valid ??? file.\n",
    "text": "preprocessed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "&, it's replaced by the referenced parent selector.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "&, nothing, it remains there alongside the parent selector.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "+, it's replaced by the referenced parent selector.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "+, nothing, it remains there alongside the parent selector.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "!, it's replaced by the referenced parent selector.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When referencing parent selectors, what symbol is used and what happens to this symbol upon compilation from Sass to CSS? ???\n",
    "text": "!, nothing, it remains there alongside the parent selector.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the correct way to use Sass @extend to extend the class *properties*? ???\n",
    "text": "@extend .properties;",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is the correct way to use Sass @extend to extend the class *properties*? ???\n",
    "text": "properties(@extend);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the correct way to use Sass @extend to extend the class *properties*? ???\n",
    "text": "@extend(properties);",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the correct way to use Sass @extend to extend the class *properties*? ???\n",
    "text": "extend .properties;",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the main advantage of Sass Mixins taking arguments? ???\n",
    "text": "Large combinations of styles with only a few mixins.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the main advantage of Sass Mixins taking arguments? ???\n",
    "text": "Flexible values.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the main advantage of Sass Mixins taking arguments? ???\n",
    "text": "Mixins can be reused throughout a site.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pick the right index at which you should insert a character as to result in \"enki\" string:\n\n```javascript\nstr-insert(\"eki\", \"n\", ???) \n```\n",
    "text": "`2`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Pick the right index at which you should insert a character as to result in \"enki\" string:\n\n```javascript\nstr-insert(\"eki\", \"n\", ???) \n```\n",
    "text": "`1`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pick the right index at which you should insert a character as to result in \"enki\" string:\n\n```javascript\nstr-insert(\"eki\", \"n\", ???) \n```\n",
    "text": "`3`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pick the right index at which you should insert a character as to result in \"enki\" string:\n\n```javascript\nstr-insert(\"eki\", \"n\", ???) \n```\n",
    "text": "`4`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Pick the right index at which you should insert a character as to result in \"enki\" string:\n\n```javascript\nstr-insert(\"eki\", \"n\", ???) \n```\n",
    "text": "`0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`sass`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`--interactive`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`sassscript`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`-s`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`--shell`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`-c`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "How can you launch *SassScript* interactive shell?\n\n    $ ??? ???\n",
    "text": "`--cli`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`$font-size`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`/`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`$line-height`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`font-size`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`line-height`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Fill the gaps such that `font` will be equal to the division of `font-size` and `line-height` :\n\n```css\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{???}???#{???};\n}\n```\n",
    "text": "`\\`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet compile to?\n\n```css\np { \n  color: #810421 + #010511; \n} \n/* Compiles to */\np {\n   color: ???;\n}\n```\n",
    "text": "`#820932` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following code snippet compile to?\n\n```css\np { \n  color: #810421 + #010511; \n} \n/* Compiles to */\np {\n   color: ???;\n}\n```\n",
    "text": "`#800110` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following code snippet compile to?\n\n```css\np { \n  color: #810421 + #010511; \n} \n/* Compiles to */\np {\n   color: ???;\n}\n```\n",
    "text": "`810421`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation?\n\n```css\np {\n  color: #001000 + #000034;\n}\n```\n\nTo:\n\n```css\np {\n  color: ???;\n}\n```\n",
    "text": "`#001034`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the result of the following operation?\n\n```css\np {\n  color: #001000 + #000034;\n}\n```\n\nTo:\n\n```css\np {\n  color: ???;\n}\n```\n",
    "text": "`#341000`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the result of the following operation?\n\n```css\np {\n  color: #001000 + #000034;\n}\n```\n\nTo:\n\n```css\np {\n  color: ???;\n}\n```\n",
    "text": "`#000034`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the first item index in **SassScript**?\n???\n",
    "text": "`1`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the first item index in **SassScript**?\n???\n",
    "text": "`0`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`200%` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`2px` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`2%` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`-2px` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`0.2px` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What are the outputs to the following Sass code:\n\n```css\npercentage(100px / 50px); /* ??? */\nabs(-2px); /* ??? */\n```\n",
    "text": "`20%`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "150%",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "1px",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "random value : `1 <= x <= 2`",
    "correct": true,
    "correctIndex": 2
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "120%",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "1.2%",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "-1px",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "0px",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "random value : `0 <= x <= 2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the following number functions return? Answer in order of the question.\n\n```css\npercentage(120px / 80px);\nabs(-1px);\nrandom(2);\n```\n\n??? ??? ???\n",
    "text": "random value : `x < 2`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to dynamically insert a value:\n\n```css\np:before { \n  content: \"Here we go: ???{1 + 13}\"; \n} \n```\n",
    "text": "`#` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to dynamically insert a value:\n\n```css\np:before { \n  content: \"Here we go: ???{1 + 13}\"; \n} \n```\n",
    "text": "`=` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to dynamically insert a value:\n\n```css\np:before { \n  content: \"Here we go: ???{1 + 13}\"; \n} \n```\n",
    "text": "`~` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to dynamically insert a value:\n\n```css\np:before { \n  content: \"Here we go: ???{1 + 13}\"; \n} \n```\n",
    "text": "`[]`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`string: Hey everyone!;`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`content: \"From Enki!\";`",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`string: \"Hey everyone!\";`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`content: From Enki!;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`string: Hey \"everyone!\";`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What do the two following CSS lines of code compile to? Please answer in the order of the question. \n\n```css\nh1 {\n   string: Hey + \"everyone!\";\n   content: \"From \" + Enki!;\n}\n```\n\n??? ???\n",
    "text": "`content: \"From \"Enki!;`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a `border-style`? ???\n",
    "text": "`curve`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is not a `border-style`? ???\n",
    "text": "`groove`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a `border-style`? ???\n",
    "text": "`ridge`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a `border-style`? ???\n",
    "text": "`double`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is not a `border-style`? ???\n",
    "text": "`dashed`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to target every list item’s after element, but the last one:\n\n    ul > ??? :not(???)\n               ::after{\n      /* code */\n    }\n",
    "text": "`li` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the snippet to target every list item’s after element, but the last one:\n\n    ul > ??? :not(???)\n               ::after{\n      /* code */\n    }\n",
    "text": "`:last-child` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Complete the snippet to target every list item’s after element, but the last one:\n\n    ul > ??? :not(???)\n               ::after{\n      /* code */\n    }\n",
    "text": "`:nth-child(last)` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to target every list item’s after element, but the last one:\n\n    ul > ??? :not(???)\n               ::after{\n      /* code */\n    }\n",
    "text": "`:li` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the snippet to target every list item’s after element, but the last one:\n\n    ul > ??? :not(???)\n               ::after{\n      /* code */\n    }\n",
    "text": "`:not(:first-child)`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul > li:not(:last-child)::after {\n   content: \"//\";\n}\n```\n\n???\n",
    "text": "Adds // after each item in the list except for after the final item.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul > li:not(:last-child)::after {\n   content: \"//\";\n}\n```\n\n???\n",
    "text": "Changes the list so it's just a list of forward slashes.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul > li:not(:last-child)::after {\n   content: \"//\";\n}\n```\n\n???\n",
    "text": "Changes the content of the last child to //.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is used to determine the type of bullet points for an unordered list?\n\n???\n",
    "text": "`list-style-type` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which CSS property is used to determine the type of bullet points for an unordered list?\n\n???\n",
    "text": "`bullets-type` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is used to determine the type of bullet points for an unordered list?\n\n???\n",
    "text": "`list-type` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which CSS property is used to determine the type of bullet points for an unordered list?\n\n???\n",
    "text": "`bullets-style`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul {\n   list-style-type: square;\n}\n```\n\n???\n",
    "text": "Tells the list to use squares instead of bullet points.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul {\n   list-style-type: square;\n}\n```\n\n???\n",
    "text": "Removes the bullet points from the unordered list.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do? \n\n```css\nul {\n   list-style-type: square;\n}\n```\n\n???\n",
    "text": "Sets the unordered list to format text into the shape of a square.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the snippet:\n\n```css\n#element {\n   border-radius: 22px 15px;\n}\n```\n\nThe first number in the two-values syntax of the `border-radius` will shape\n\n???\n",
    "text": "top-left and bottom-right corners",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Consider the snippet:\n\n```css\n#element {\n   border-radius: 22px 15px;\n}\n```\n\nThe first number in the two-values syntax of the `border-radius` will shape\n\n???\n",
    "text": "top-left and bottom-left corners",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the snippet:\n\n```css\n#element {\n   border-radius: 22px 15px;\n}\n```\n\nThe first number in the two-values syntax of the `border-radius` will shape\n\n???\n",
    "text": "top-right and bottom-left corners",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Consider the snippet:\n\n```css\n#element {\n   border-radius: 22px 15px;\n}\n```\n\nThe first number in the two-values syntax of the `border-radius` will shape\n\n???\n",
    "text": "top-right and bottom-right corners",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to change the default list marker:\n\n    ul.specialList {\n     ???:\n              url('img.jpg');\n    }\n",
    "text": "`list-style-image`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the following snippet to change the default list marker:\n\n    ul.specialList {\n     ???:\n              url('img.jpg');\n    }\n",
    "text": "`list-style-type`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to change the default list marker:\n\n    ul.specialList {\n     ???:\n              url('img.jpg');\n    }\n",
    "text": "`list-style-font`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the following snippet to change the default list marker:\n\n    ul.specialList {\n     ???:\n              url('img.jpg');\n    }\n",
    "text": "`list-style`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\nul.a {\n   list-style-image: url(\"list-pic.jpg\");\n}\n\nol.b {\n   list-style-type: lower-roman;\n}\n```\n\n???\n",
    "text": "Sets the unordered list marker to an image and the ordered list marker to roman numerals.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\nul.a {\n   list-style-image: url(\"list-pic.jpg\");\n}\n\nol.b {\n   list-style-type: lower-roman;\n}\n```\n\n???\n",
    "text": "Sets the unordered list marker to roman numerals and the ordered list to an image.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\nul.a {\n   list-style-image: url(\"list-pic.jpg\");\n}\n\nol.b {\n   list-style-type: lower-roman;\n}\n```\n\n???\n",
    "text": "This does nothing...",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do?\n\n```css\nul.a {\n   list-style-image: url(\"list-pic.jpg\");\n}\n\nol.b {\n   list-style-type: lower-roman;\n}\n```\n\n???\n",
    "text": "Sets the first element of the unordered lists marker to an image and the first element of the ordered lists marker to roman numerals.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following disables the resizing behavior of an element? \n\n???\n",
    "text": "`resize: none` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following disables the resizing behavior of an element? \n\n???\n",
    "text": "`resizable: false` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following disables the resizing behavior of an element? \n\n???\n",
    "text": "`size-alter: false`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When disabling the resizing behavior of `textarea` elements, `overflow` property must be set to what value in order for the disabling to work?\n\n???\n",
    "text": "any value other than visible",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "When disabling the resizing behavior of `textarea` elements, `overflow` property must be set to what value in order for the disabling to work?\n\n???\n",
    "text": "visible",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When disabling the resizing behavior of `textarea` elements, `overflow` property must be set to what value in order for the disabling to work?\n\n???\n",
    "text": "resize",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "When disabling the resizing behavior of `textarea` elements, `overflow` property must be set to what value in order for the disabling to work?\n\n???\n",
    "text": "none",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to modify the width of an image?\n\n???\n",
    "text": "`scaleX`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which method is used to modify the width of an image?\n\n???\n",
    "text": "`scaleW`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to modify the width of an image?\n\n???\n",
    "text": "`width-alter`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which method is used to modify the width of an image?\n\n???\n",
    "text": "`scaleY`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "-1",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "1",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "0",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "2",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "0.5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What value is needed as an argument in the `scaleX()` function to horizontally flip an img?\n\n```css\nimg {\n   transform: scaleX(???);\n}\n```\n",
    "text": "-0.5",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how will the following line affect an image?\n\nHow does the following line affect an image?\n\n```css\nimg { transform: scaleX(-1); }\n```\n\n ???\n",
    "text": "It horizontally flips the image",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "how will the following line affect an image?\n\nHow does the following line affect an image?\n\n```css\nimg { transform: scaleX(-1); }\n```\n\n ???\n",
    "text": "It vertically flips the image",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how will the following line affect an image?\n\nHow does the following line affect an image?\n\n```css\nimg { transform: scaleX(-1); }\n```\n\n ???\n",
    "text": "It rotates the image 180 degrees",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "how will the following line affect an image?\n\nHow does the following line affect an image?\n\n```css\nimg { transform: scaleX(-1); }\n```\n\n ???\n",
    "text": "The image will look just the same",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the method which can be used to make text in a web page unselectable:\n\n    .unselectable { \n      ???: none; \n    } \n",
    "text": "`user-select` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the method which can be used to make text in a web page unselectable:\n\n    .unselectable { \n      ???: none; \n    } \n",
    "text": "`selectable` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the method which can be used to make text in a web page unselectable:\n\n    .unselectable { \n      ???: none; \n    } \n",
    "text": "`select`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\n.noselect {\n   user-select: none;\n}\n\n<p class=\"noselect\">\n   Hello, from Enki!\n</p>\n```\n\n???\n",
    "text": "It makes the contents of <p> unable to be selected.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do?\n\n```css\n.noselect {\n   user-select: none;\n}\n\n<p class=\"noselect\">\n   Hello, from Enki!\n</p>\n```\n\n???\n",
    "text": "It makes the contents of <p> able to be selected.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\n.noselect {\n   user-select: none;\n}\n\n<p class=\"noselect\">\n   Hello, from Enki!\n</p>\n```\n\n???\n",
    "text": "It changes the colour of <p>'s contents.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\n.noselect {\n   user-select: none;\n}\n\n<p class=\"noselect\">\n   Hello, from Enki!\n</p>\n```\n\n???\n",
    "text": "It automatically highlights the contents of <p>.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`text-decoration` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`none` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`decoration` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`initial` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`remove` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Remove the default underlining for `a` elements:\n\n```css\na {\n  ??? : ???;\n}\n```\n",
    "text": "`underline`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\na {\n   text-decoration: none;\n}\n```\n\n ???\n",
    "text": "Removes the natural underline feature on all <a> elements.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code do?\n\n```css\na {\n   text-decoration: none;\n}\n```\n\n ???\n",
    "text": "Reverts and changes made to the text in all <a> elements, such as different colors.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code do?\n\n```css\na {\n   text-decoration: none;\n}\n```\n\n ???\n",
    "text": "Adds the natural underline feature to all <a> elements.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`repeat-y`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`y-repeat`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`repeat-x`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`x-repeat`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`vertical`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Complete the code snippet to repeat an image vertically:\n\n```css\nbody {\n  background-image: url(\n      'image.jpg');\n  background-repeat: ???;\n}\n```\n",
    "text": "`horizontal`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following CSS code do?\n\n```css\nbody {\n   background-image: url('picture.jpg');\n   background-repeat: repeat-y;\n}\n```\n\n???\n",
    "text": "Repeats the background image vertically.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What will the following CSS code do?\n\n```css\nbody {\n   background-image: url('picture.jpg');\n   background-repeat: repeat-y;\n}\n```\n\n???\n",
    "text": "Repeats the background image both horizontally and vertically.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What will the following CSS code do?\n\n```css\nbody {\n   background-image: url('picture.jpg');\n   background-repeat: repeat-y;\n}\n```\n\n???\n",
    "text": "Stops the background image from repeating.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `border-radius` property do to elements? ???\n",
    "text": "Gives the element rounded corners.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the `border-radius` property do to elements? ???\n",
    "text": "Gives the element square corners.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `border-radius` property do to elements? ???\n",
    "text": "Makes a circular shadow for the element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the `border-radius` property do to elements? ???\n",
    "text": "Defines how far the border surrounding the element is from the actual element.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax can be used with the `border-radius` property for setting the horizontal and vertical radius'? ???\n",
    "text": "slash syntax (/)",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What syntax can be used with the `border-radius` property for setting the horizontal and vertical radius'? ???\n",
    "text": "equal syntax (=)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What syntax can be used with the `border-radius` property for setting the horizontal and vertical radius'? ???\n",
    "text": "double slash syntax (//)",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the most common type of gradient? \n???\n",
    "text": "`linear-gradient` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which is the most common type of gradient? \n???\n",
    "text": "`square-gradient` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the most common type of gradient? \n???\n",
    "text": "`perpendicular-gradient` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the most common type of gradient? \n???\n",
    "text": "`bi-linear-gradient` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which is the most common type of gradient? \n???\n",
    "text": "`radial-gradient`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\nspan.gradient {\n   background: linear-gradient(to left, red,\n                               white);\n}\n```\n",
    "text": "Transitions the gradient from red to white, starting from right to left.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\nspan.gradient {\n   background: linear-gradient(to left, red,\n                               white);\n}\n```\n",
    "text": "Transitions the gradient from red to white, starting from left to right.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\nspan.gradient {\n   background: linear-gradient(to left, red,\n                               white);\n}\n```\n",
    "text": "Transitions the gradient from white to red, starting from right to left.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What does the following CSS code snippet do? ???\n\n```css\nspan.gradient {\n   background: linear-gradient(to left, red,\n                               white);\n}\n```\n",
    "text": "Transitions the gradient from white to red, starting from left to right.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo-elements can be used to add extra borders to an element?\n\n???\n",
    "text": "::after and ::before",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which pseudo-elements can be used to add extra borders to an element?\n\n???\n",
    "text": "::pre and ::post",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which pseudo-elements can be used to add extra borders to an element?\n\n???\n",
    "text": "::prior and ::since",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two pseudo elements can be used to add more borders to an element?\n\n???\n",
    "text": ":after and :before",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which two pseudo elements can be used to add more borders to an element?\n\n???\n",
    "text": ":post and :pre",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two pseudo elements can be used to add more borders to an element?\n\n???\n",
    "text": ":after and :previous",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which two pseudo elements can be used to add more borders to an element?\n\n???\n",
    "text": ":post and :before",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first two parameters in the following code snippet are the ??? of the shadow.\n\n    div {\n      box-shadow: 4px 4px 2px red;\n    }\n",
    "text": "offset",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "The first two parameters in the following code snippet are the ??? of the shadow.\n\n    div {\n      box-shadow: 4px 4px 2px red;\n    }\n",
    "text": "size",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first two parameters in the following code snippet are the ??? of the shadow.\n\n    div {\n      box-shadow: 4px 4px 2px red;\n    }\n",
    "text": "area",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "The first two parameters in the following code snippet are the ??? of the shadow.\n\n    div {\n      box-shadow: 4px 4px 2px red;\n    }\n",
    "text": "shade",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `box-shadow` properties does the following CSS code give to the p element? ???\n\n```css\np {\n   box-shadow: 5px 2px 4px blue;\n}\n```\n",
    "text": "A blue shadow with offset-x = 5px, offset-y = 2px and a blur radius of 4px.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What `box-shadow` properties does the following CSS code give to the p element? ???\n\n```css\np {\n   box-shadow: 5px 2px 4px blue;\n}\n```\n",
    "text": "A blue shadow with offset-y = 2px, offset-y = 4px and a blue radius of 5px.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What `box-shadow` properties does the following CSS code give to the p element? ???\n\n```css\np {\n   box-shadow: 5px 2px 4px blue;\n}\n```\n",
    "text": "A blue shadow with offset-x = 2px, offset-y = 5px and a blur radius of 4px.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "stylesheet link",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "font-family",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "font name",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "Google font database",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "Google font API",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Once you've chosen a font, add the ??? to your HTML and the ??? to your element in CSS.\n",
    "text": "font description",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the default text decoration colour? And with what property can this be changed? ???\n",
    "text": "Default colour is the text colour. Changed with `text-decoration-color:`.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What is the default text decoration colour? And with what property can this be changed? ???\n",
    "text": "Default colour is black. Changed with `text-decoration-colour:`.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What is the default text decoration colour? And with what property can this be changed? ???\n",
    "text": "Default colour is white. Cannot be changed.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is *not* a `text-decoration-style` property? ???\n",
    "text": "curved",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Which of the following is *not* a `text-decoration-style` property? ???\n",
    "text": "solid",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is *not* a `text-decoration-style` property? ???\n",
    "text": "double",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is *not* a `text-decoration-style` property? ???\n",
    "text": "wavy",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Which of the following is *not* a `text-decoration-style` property? ???\n",
    "text": "dashed",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the letter spacing of all paragraphs to be `2px` :\n\n```css\np {\n  ??? : ???;\n}\n```\n",
    "text": "`letter-spacing` ",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "Change the letter spacing of all paragraphs to be `2px` :\n\n```css\np {\n  ??? : ???;\n}\n```\n",
    "text": "`2px` ",
    "correct": true,
    "correctIndex": 1
  },
  {
    "question": "Change the letter spacing of all paragraphs to be `2px` :\n\n```css\np {\n  ??? : ???;\n}\n```\n",
    "text": "`font-spacing` ",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "Change the letter spacing of all paragraphs to be `2px` :\n\n```css\np {\n  ??? : ???;\n}\n```\n",
    "text": "`0.125em`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the key advantage of the `letter-spacing` property? \n\n???\n",
    "text": "Increases the readability of headings and paragraph text.",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What's the key advantage of the `letter-spacing` property? \n\n???\n",
    "text": "Allows letters to be spaced out.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What's the key advantage of the `letter-spacing` property? \n\n???\n",
    "text": "Can make text cover a large space.",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What must the font-variant property be set to transform the text to small caps? \n\n???\n",
    "text": "`small-caps`",
    "correct": true,
    "correctIndex": 0
  },
  {
    "question": "What must the font-variant property be set to transform the text to small caps? \n\n???\n",
    "text": "`smallcaps`",
    "correct": false,
    "correctIndex": null
  },
  {
    "question": "What must the font-variant property be set to transform the text to small caps? \n\n???\n",
    "text": "`small_caps`",
    "correct": false,
    "correctIndex": null
  }
]
